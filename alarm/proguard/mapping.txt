android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
    boolean hasView() -> hasView
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.LayoutInflater$Factory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LDrawableImpl:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatL -> android.support.v4.graphics.drawable.DrawableCompatL:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCornerRadius(float) -> setCornerRadius
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    int getRatingType() -> getRatingType
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    int getRatingType(java.lang.Object) -> getRatingType
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
    android.support.v4.media.session.MediaSessionCompat obtain(java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    java.lang.Object getMediaSession() -> getMediaSession
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Parcelable mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    int access$100(android.support.v4.media.session.PlaybackStateCompat) -> access$100
    long access$200(android.support.v4.media.session.PlaybackStateCompat) -> access$200
    float access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    long access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    java.lang.CharSequence access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    void setState(int,long,float) -> setState
    void setBufferedPosition(long) -> setBufferedPosition
    void setActions(long) -> setActions
    void setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$Api21ViewCompatImpl -> android.support.v4.view.ViewCompat$Api21ViewCompatImpl:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21 -> android.support.v4.view.ViewCompatApi21:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
android.support.v4.view.ViewCompatApi21$1 -> android.support.v4.view.ViewCompatApi21$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatApi21Impl:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatApi21 -> android.support.v4.view.ViewGroupCompatApi21:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    java.util.List getActionList() -> getActionList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> mAction
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$200(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$200
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,int,java.lang.CharSequence) -> addAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$AccessibilityAction:
    int getId(java.lang.Object) -> getId
    java.lang.CharSequence getLabel(java.lang.Object) -> getLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    int mShadowRadius -> mShadowRadius
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    boolean access$200() -> access$200
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> access$300
    boolean access$400(android.view.View) -> access$400
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator END_CURVE_INTERPOLATOR -> END_CURVE_INTERPOLATOR
    android.view.animation.Interpolator START_CURVE_INTERPOLATOR -> START_CURVE_INTERPOLATOR
    android.view.animation.Interpolator EASE_INTERPOLATOR -> EASE_INTERPOLATOR
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    boolean mFinishing -> mFinishing
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void setupAnimators() -> setupAnimators
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    android.view.animation.Interpolator access$300() -> access$300
    android.view.animation.Interpolator access$400() -> access$400
    float access$500(android.support.v4.widget.MaterialProgressDrawable) -> access$500
    float access$502(android.support.v4.widget.MaterialProgressDrawable,float) -> access$502
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColorIndex(int) -> setColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.iflytek.cloud.DataDownloader -> com.iflytek.cloud.DataDownloader:
    void downloadData(com.iflytek.cloud.SpeechListener) -> downloadData
    boolean b_() -> b_
com.iflytek.cloud.DataUploader -> com.iflytek.cloud.DataUploader:
    void uploadData(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> uploadData
    boolean b_() -> b_
com.iflytek.cloud.ErrorCode -> com.iflytek.cloud.ErrorCode:
    int SUCCESS -> SUCCESS
    int MSP_ERROR_FAIL -> MSP_ERROR_FAIL
    int MSP_ERROR_EXCEPTION -> MSP_ERROR_EXCEPTION
    int MSP_ERROR_GENERAL -> MSP_ERROR_GENERAL
    int MSP_ERROR_OUT_OF_MEMORY -> MSP_ERROR_OUT_OF_MEMORY
    int MSP_ERROR_FILE_NOT_FOUND -> MSP_ERROR_FILE_NOT_FOUND
    int MSP_ERROR_NOT_SUPPORT -> MSP_ERROR_NOT_SUPPORT
    int MSP_ERROR_NOT_IMPLEMENT -> MSP_ERROR_NOT_IMPLEMENT
    int MSP_ERROR_ACCESS -> MSP_ERROR_ACCESS
    int MSP_ERROR_INVALID_PARA -> MSP_ERROR_INVALID_PARA
    int MSP_ERROR_INVALID_PARA_VALUE -> MSP_ERROR_INVALID_PARA_VALUE
    int MSP_ERROR_INVALID_HANDLE -> MSP_ERROR_INVALID_HANDLE
    int MSP_ERROR_INVALID_DATA -> MSP_ERROR_INVALID_DATA
    int MSP_ERROR_NO_LICENSE -> MSP_ERROR_NO_LICENSE
    int MSP_ERROR_NOT_INIT -> MSP_ERROR_NOT_INIT
    int MSP_ERROR_NULL_HANDLE -> MSP_ERROR_NULL_HANDLE
    int MSP_ERROR_OVERFLOW -> MSP_ERROR_OVERFLOW
    int MSP_ERROR_TIME_OUT -> MSP_ERROR_TIME_OUT
    int MSP_ERROR_OPEN_FILE -> MSP_ERROR_OPEN_FILE
    int MSP_ERROR_NOT_FOUND -> MSP_ERROR_NOT_FOUND
    int MSP_ERROR_NO_ENOUGH_BUFFER -> MSP_ERROR_NO_ENOUGH_BUFFER
    int MSP_ERROR_NO_DATA -> MSP_ERROR_NO_DATA
    int MSP_ERROR_NO_MORE_DATA -> MSP_ERROR_NO_MORE_DATA
    int MSP_ERROR_NO_RESPONSE_DATA -> MSP_ERROR_NO_RESPONSE_DATA
    int MSP_ERROR_ALREADY_EXIST -> MSP_ERROR_ALREADY_EXIST
    int MSP_ERROR_LOAD_MODULE -> MSP_ERROR_LOAD_MODULE
    int MSP_ERROR_BUSY -> MSP_ERROR_BUSY
    int MSP_ERROR_INVALID_CONFIG -> MSP_ERROR_INVALID_CONFIG
    int MSP_ERROR_VERSION_CHECK -> MSP_ERROR_VERSION_CHECK
    int MSP_ERROR_CANCELED -> MSP_ERROR_CANCELED
    int MSP_ERROR_INVALID_MEDIA_TYPE -> MSP_ERROR_INVALID_MEDIA_TYPE
    int MSP_ERROR_CONFIG_INITIALIZE -> MSP_ERROR_CONFIG_INITIALIZE
    int MSP_ERROR_CREATE_HANDLE -> MSP_ERROR_CREATE_HANDLE
    int MSP_ERROR_CODING_LIB_NOT_LOAD -> MSP_ERROR_CODING_LIB_NOT_LOAD
    int MSP_ERROR_USER_CANCELLED -> MSP_ERROR_USER_CANCELLED
    int MSP_ERROR_INVALID_OPERATION -> MSP_ERROR_INVALID_OPERATION
    int MSP_ERROR_MESSAGE_NOT_COMPLETE -> MSP_ERROR_MESSAGE_NOT_COMPLETE
    int MSP_ERROR_USER_ACTIVE_ABORT -> MSP_ERROR_USER_ACTIVE_ABORT
    int MSP_ERROR_BUSY_GRMBUILDING -> MSP_ERROR_BUSY_GRMBUILDING
    int MSP_ERROR_BUSY_LEXUPDATING -> MSP_ERROR_BUSY_LEXUPDATING
    int MSP_ERROR_BOS_TIMEOUT -> MSP_ERROR_BOS_TIMEOUT
    int MSP_ERROR_NET_GENERAL -> MSP_ERROR_NET_GENERAL
    int MSP_ERROR_NET_OPENSOCK -> MSP_ERROR_NET_OPENSOCK
    int MSP_ERROR_NET_CONNECTSOCK -> MSP_ERROR_NET_CONNECTSOCK
    int MSP_ERROR_NET_ACCEPTSOCK -> MSP_ERROR_NET_ACCEPTSOCK
    int MSP_ERROR_NET_SENDSOCK -> MSP_ERROR_NET_SENDSOCK
    int MSP_ERROR_NET_RECVSOCK -> MSP_ERROR_NET_RECVSOCK
    int MSP_ERROR_NET_INVALIDSOCK -> MSP_ERROR_NET_INVALIDSOCK
    int MSP_ERROR_NET_BADADDRESS -> MSP_ERROR_NET_BADADDRESS
    int MSP_ERROR_NET_BINDSEQUENCE -> MSP_ERROR_NET_BINDSEQUENCE
    int MSP_ERROR_NET_NOTOPENSOCK -> MSP_ERROR_NET_NOTOPENSOCK
    int MSP_ERROR_NET_NOTBIND -> MSP_ERROR_NET_NOTBIND
    int MSP_ERROR_NET_NOTLISTEN -> MSP_ERROR_NET_NOTLISTEN
    int MSP_ERROR_NET_CONNECTCLOSE -> MSP_ERROR_NET_CONNECTCLOSE
    int MSP_ERROR_NET_NOTDGRAMSOCK -> MSP_ERROR_NET_NOTDGRAMSOCK
    int MSP_ERROR_NET_DNS -> MSP_ERROR_NET_DNS
    int MSP_ERROR_NET_INIT -> MSP_ERROR_NET_INIT
    int MSP_ERROR_NFL_INNER_ERROR -> MSP_ERROR_NFL_INNER_ERROR
    int MSP_ERROR_MSS_TIME_OUT -> MSP_ERROR_MSS_TIME_OUT
    int MSP_ERROT_CLIENT_TIME_OUT -> MSP_ERROT_CLIENT_TIME_OUT
    int MSP_ERROR_CLIENT_CLOSE -> MSP_ERROR_CLIENT_CLOSE
    int MSP_ERROR_CLIENT_AREA_CHANGE -> MSP_ERROR_CLIENT_AREA_CHANGE
    int MSP_ERROR_NET_SSL_HANDSHAKE -> MSP_ERROR_NET_SSL_HANDSHAKE
    int MSP_ERROR_NET_INVALID_ROOT_CERT -> MSP_ERROR_NET_INVALID_ROOT_CERT
    int MSP_ERROR_NET_INVALID_CLIENT_CERT -> MSP_ERROR_NET_INVALID_CLIENT_CERT
    int MSP_ERROR_NET_INVALID_SERVER_CERT -> MSP_ERROR_NET_INVALID_SERVER_CERT
    int MSP_ERROR_NET_INVALID_KEY -> MSP_ERROR_NET_INVALID_KEY
    int MSP_ERROR_MSG_GENERAL -> MSP_ERROR_MSG_GENERAL
    int MSP_ERROR_MSG_PARSE_ERROR -> MSP_ERROR_MSG_PARSE_ERROR
    int MSP_ERROR_MSG_BUILD_ERROR -> MSP_ERROR_MSG_BUILD_ERROR
    int MSP_ERROR_MSG_PARAM_ERROR -> MSP_ERROR_MSG_PARAM_ERROR
    int MSP_ERROR_MSG_CONTENT_EMPTY -> MSP_ERROR_MSG_CONTENT_EMPTY
    int MSP_ERROR_MSG_INVALID_CONTENT_TYPE -> MSP_ERROR_MSG_INVALID_CONTENT_TYPE
    int MSP_ERROR_MSG_INVALID_CONTENT_LENGTH -> MSP_ERROR_MSG_INVALID_CONTENT_LENGTH
    int MSP_ERROR_MSG_INVALID_CONTENT_ENCODE -> MSP_ERROR_MSG_INVALID_CONTENT_ENCODE
    int MSP_ERROR_MSG_INVALID_KEY -> MSP_ERROR_MSG_INVALID_KEY
    int MSP_ERROR_MSG_KEY_EMPTY -> MSP_ERROR_MSG_KEY_EMPTY
    int MSP_ERROR_MSG_SESSION_ID_EMPTY -> MSP_ERROR_MSG_SESSION_ID_EMPTY
    int MSP_ERROR_MSG_LOGIN_ID_EMPTY -> MSP_ERROR_MSG_LOGIN_ID_EMPTY
    int MSP_ERROR_MSG_SYNC_ID_EMPTY -> MSP_ERROR_MSG_SYNC_ID_EMPTY
    int MSP_ERROR_MSG_APP_ID_EMPTY -> MSP_ERROR_MSG_APP_ID_EMPTY
    int MSP_ERROR_MSG_EXTERN_ID_EMPTY -> MSP_ERROR_MSG_EXTERN_ID_EMPTY
    int MSP_ERROR_MSG_INVALID_CMD -> MSP_ERROR_MSG_INVALID_CMD
    int MSP_ERROR_MSG_INVALID_SUBJECT -> MSP_ERROR_MSG_INVALID_SUBJECT
    int MSP_ERROR_MSG_INVALID_VERSION -> MSP_ERROR_MSG_INVALID_VERSION
    int MSP_ERROR_MSG_NO_CMD -> MSP_ERROR_MSG_NO_CMD
    int MSP_ERROR_MSG_NO_SUBJECT -> MSP_ERROR_MSG_NO_SUBJECT
    int MSP_ERROR_MSG_NO_VERSION -> MSP_ERROR_MSG_NO_VERSION
    int MSP_ERROR_MSG_MSSP_EMPTY -> MSP_ERROR_MSG_MSSP_EMPTY
    int MSP_ERROR_MSG_NEW_RESPONSE -> MSP_ERROR_MSG_NEW_RESPONSE
    int MSP_ERROR_MSG_NEW_CONTENT -> MSP_ERROR_MSG_NEW_CONTENT
    int MSP_ERROR_MSG_INVALID_SESSION_ID -> MSP_ERROR_MSG_INVALID_SESSION_ID
    int MSP_ERROR_MSG_INVALID_CONTENT -> MSP_ERROR_MSG_INVALID_CONTENT
    int MSP_ERROR_DB_GENERAL -> MSP_ERROR_DB_GENERAL
    int MSP_ERROR_DB_EXCEPTION -> MSP_ERROR_DB_EXCEPTION
    int MSP_ERROR_DB_NO_RESULT -> MSP_ERROR_DB_NO_RESULT
    int MSP_ERROR_DB_INVALID_USER -> MSP_ERROR_DB_INVALID_USER
    int MSP_ERROR_DB_INVALID_PWD -> MSP_ERROR_DB_INVALID_PWD
    int MSP_ERROR_DB_CONNECT -> MSP_ERROR_DB_CONNECT
    int MSP_ERROR_DB_INVALID_SQL -> MSP_ERROR_DB_INVALID_SQL
    int MSP_ERROR_DB_INVALID_APPID -> MSP_ERROR_DB_INVALID_APPID
    int MSP_ERROR_DB_NO_UID -> MSP_ERROR_DB_NO_UID
    int MSP_ERROR_RES_GENERAL -> MSP_ERROR_RES_GENERAL
    int MSP_ERROR_RES_LOAD -> MSP_ERROR_RES_LOAD
    int MSP_ERROR_RES_FREE -> MSP_ERROR_RES_FREE
    int MSP_ERROR_RES_MISSING -> MSP_ERROR_RES_MISSING
    int MSP_ERROR_RES_INVALID_NAME -> MSP_ERROR_RES_INVALID_NAME
    int MSP_ERROR_RES_INVALID_ID -> MSP_ERROR_RES_INVALID_ID
    int MSP_ERROR_RES_INVALID_IMG -> MSP_ERROR_RES_INVALID_IMG
    int MSP_ERROR_RES_WRITE -> MSP_ERROR_RES_WRITE
    int MSP_ERROR_RES_LEAK -> MSP_ERROR_RES_LEAK
    int MSP_ERROR_RES_HEAD -> MSP_ERROR_RES_HEAD
    int MSP_ERROR_RES_DATA -> MSP_ERROR_RES_DATA
    int MSP_ERROR_RES_SKIP -> MSP_ERROR_RES_SKIP
    int MSP_ERROR_TTS_GENERAL -> MSP_ERROR_TTS_GENERAL
    int MSP_ERROR_TTS_TEXTEND -> MSP_ERROR_TTS_TEXTEND
    int MSP_ERROR_TTS_TEXT_EMPTY -> MSP_ERROR_TTS_TEXT_EMPTY
    int MSP_ERROR_TTS_LTTS_ERROR -> MSP_ERROR_TTS_LTTS_ERROR
    int MSP_ERROR_REC_GENERAL -> MSP_ERROR_REC_GENERAL
    int MSP_ERROR_REC_INACTIVE -> MSP_ERROR_REC_INACTIVE
    int MSP_ERROR_REC_GRAMMAR_ERROR -> MSP_ERROR_REC_GRAMMAR_ERROR
    int MSP_ERROR_REC_NO_ACTIVE_GRAMMARS -> MSP_ERROR_REC_NO_ACTIVE_GRAMMARS
    int MSP_ERROR_REC_DUPLICATE_GRAMMAR -> MSP_ERROR_REC_DUPLICATE_GRAMMAR
    int MSP_ERROR_REC_INVALID_MEDIA_TYPE -> MSP_ERROR_REC_INVALID_MEDIA_TYPE
    int MSP_ERROR_REC_INVALID_LANGUAGE -> MSP_ERROR_REC_INVALID_LANGUAGE
    int MSP_ERROR_REC_URI_NOT_FOUND -> MSP_ERROR_REC_URI_NOT_FOUND
    int MSP_ERROR_REC_URI_TIMEOUT -> MSP_ERROR_REC_URI_TIMEOUT
    int MSP_ERROR_REC_URI_FETCH_ERROR -> MSP_ERROR_REC_URI_FETCH_ERROR
    int MSP_ERROR_REC_PROC_MOD -> MSP_ERROR_REC_PROC_MOD
    int MSP_ERROR_EP_GENERAL -> MSP_ERROR_EP_GENERAL
    int MSP_ERROR_EP_NO_SESSION_NAME -> MSP_ERROR_EP_NO_SESSION_NAME
    int MSP_ERROR_EP_INACTIVE -> MSP_ERROR_EP_INACTIVE
    int MSP_ERROR_EP_INITIALIZED -> MSP_ERROR_EP_INITIALIZED
    int MSP_ERROR_TUV_GENERAL -> MSP_ERROR_TUV_GENERAL
    int MSP_ERROR_TUV_GETHIDPARAM -> MSP_ERROR_TUV_GETHIDPARAM
    int MSP_ERROR_TUV_TOKEN -> MSP_ERROR_TUV_TOKEN
    int MSP_ERROR_TUV_CFGFILE -> MSP_ERROR_TUV_CFGFILE
    int MSP_ERROR_TUV_RECV_CONTENT -> MSP_ERROR_TUV_RECV_CONTENT
    int MSP_ERROR_TUV_VERFAIL -> MSP_ERROR_TUV_VERFAIL
    int MSP_ERROR_LOGIN_SUCCESS -> MSP_ERROR_LOGIN_SUCCESS
    int MSP_ERROR_LOGIN_NO_LICENSE -> MSP_ERROR_LOGIN_NO_LICENSE
    int MSP_ERROR_LOGIN_SESSIONID_INVALID -> MSP_ERROR_LOGIN_SESSIONID_INVALID
    int MSP_ERROR_LOGIN_SESSIONID_ERROR -> MSP_ERROR_LOGIN_SESSIONID_ERROR
    int MSP_ERROR_LOGIN_UNLOGIN -> MSP_ERROR_LOGIN_UNLOGIN
    int MSP_ERROR_LOGIN_INVALID_USER -> MSP_ERROR_LOGIN_INVALID_USER
    int MSP_ERROR_LOGIN_INVALID_PWD -> MSP_ERROR_LOGIN_INVALID_PWD
    int MSP_ERROR_LOGIN_SYSTEM_ERROR -> MSP_ERROR_LOGIN_SYSTEM_ERROR
    int MSP_ERROR_HCR_GENERAL -> MSP_ERROR_HCR_GENERAL
    int MSP_ERROR_HCR_RESOURCE_NOT_EXIST -> MSP_ERROR_HCR_RESOURCE_NOT_EXIST
    int MSP_ERROR_HCR_CREATE -> MSP_ERROR_HCR_CREATE
    int MSP_ERROR_HCR_DESTROY -> MSP_ERROR_HCR_DESTROY
    int MSP_ERROR_HCR_START -> MSP_ERROR_HCR_START
    int MSP_ERROR_HCR_APPEND_STROKES -> MSP_ERROR_HCR_APPEND_STROKES
    int MSP_ERROR_HCR_INIT -> MSP_ERROR_HCR_INIT
    int MSP_ERROR_HCR_POINT_DECODE -> MSP_ERROR_HCR_POINT_DECODE
    int MSP_ERROR_HCR_DISPATCH -> MSP_ERROR_HCR_DISPATCH
    int MSP_ERROR_HCR_GETRESULT -> MSP_ERROR_HCR_GETRESULT
    int MSP_ERROR_HCR_RESOURCE -> MSP_ERROR_HCR_RESOURCE
    int MSP_ERROR_AUTH_NO_LICENSE -> MSP_ERROR_AUTH_NO_LICENSE
    int MSP_ERROR_AUTH_NO_ENOUGH_LICENSE -> MSP_ERROR_AUTH_NO_ENOUGH_LICENSE
    int MSP_ERROR_AUTH_INVALID_LICENSE -> MSP_ERROR_AUTH_INVALID_LICENSE
    int MSP_ERROR_AUTH_LICENSE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_EXPIRED
    int MSP_ERROR_AUTH_NEED_MORE_DATA -> MSP_ERROR_AUTH_NEED_MORE_DATA
    int MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED
    int MSP_ERROR_AUTH_INVALID_MACHINE_ID -> MSP_ERROR_AUTH_INVALID_MACHINE_ID
    int MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN
    int MSP_ERROR_AUTH_APPID_NOT_MATCH -> MSP_ERROR_AUTH_APPID_NOT_MATCH
    int MSP_ERROR_AUTH_UID_NOT_MATCH -> MSP_ERROR_AUTH_UID_NOT_MATCH
    int MSP_ERROR_AUTH_TRIAL_EXPIRED -> MSP_ERROR_AUTH_TRIAL_EXPIRED
    int MSP_ERROR_AUTH_ERROR_END -> MSP_ERROR_AUTH_ERROR_END
    int MSP_ERROR_AUTH_DVC_NO_LICENSE -> MSP_ERROR_AUTH_DVC_NO_LICENSE
    int MSP_ERROR_AUTH_DVC_NO_ENOUGH_LICENSE -> MSP_ERROR_AUTH_DVC_NO_ENOUGH_LICENSE
    int MSP_ERROR_AUTH_DVC_INVALID_LICENSE -> MSP_ERROR_AUTH_DVC_INVALID_LICENSE
    int MSP_ERROR_AUTH_DVC_LICENSE_EXPIRED -> MSP_ERROR_AUTH_DVC_LICENSE_EXPIRED
    int MSP_ERROR_AUTH_DVC_NEED_MORE_DATA -> MSP_ERROR_AUTH_DVC_NEED_MORE_DATA
    int MSP_ERROR_AUTH_DVC_LICENSE_TO_BE_EXPIRED -> MSP_ERROR_AUTH_DVC_LICENSE_TO_BE_EXPIRED
    int MSP_ERROR_AUTH_DVC_EXCEED_LICENSE -> MSP_ERROR_AUTH_DVC_EXCEED_LICENSE
    int MSP_ERROR_ASE_EXCEP_SILENCE -> MSP_ERROR_ASE_EXCEP_SILENCE
    int MSP_ERROR_ASE_EXCEP_SNRATIO -> MSP_ERROR_ASE_EXCEP_SNRATIO
    int MSP_ERROR_ASE_EXCEP_PAPERDATA -> MSP_ERROR_ASE_EXCEP_PAPERDATA
    int MSP_ERROR_ASE_EXCEP_PAPERCONTENTS -> MSP_ERROR_ASE_EXCEP_PAPERCONTENTS
    int MSP_ERROR_ASE_EXCEP_NOTMONO -> MSP_ERROR_ASE_EXCEP_NOTMONO
    int MSP_ERROR_ASE_EXCEP_OTHERS -> MSP_ERROR_ASE_EXCEP_OTHERS
    int MSP_ERROR_ASE_EXCEP_PAPERFMT -> MSP_ERROR_ASE_EXCEP_PAPERFMT
    int MSP_ERROR_ASE_EXCEP_ULISTWORD -> MSP_ERROR_ASE_EXCEP_ULISTWORD
    int MSP_ERROR_IVW_MODEL_TRAINING -> MSP_ERROR_IVW_MODEL_TRAINING
    int MSP_ERROR_IVW_MODEL_NO_FOUND -> MSP_ERROR_IVW_MODEL_NO_FOUND
    int MSP_ERROR_IVW_BUSY -> MSP_ERROR_IVW_BUSY
    int MSP_ERROR_IVP_GENERAL -> MSP_ERROR_IVP_GENERAL
    int MSP_ERROR_IVP_EXTRA_RGN_SOPPORT -> MSP_ERROR_IVP_EXTRA_RGN_SOPPORT
    int MSP_ERROR_IVP_TRUNCATED -> MSP_ERROR_IVP_TRUNCATED
    int MSP_ERROR_IVP_MUCH_NOISE -> MSP_ERROR_IVP_MUCH_NOISE
    int MSP_ERROR_IVP_TOO_LOW -> MSP_ERROR_IVP_TOO_LOW
    int MSP_ERROR_IVP_ZERO_AUDIO -> MSP_ERROR_IVP_ZERO_AUDIO
    int MSP_ERROR_IVP_UTTER_TOO_SHORT -> MSP_ERROR_IVP_UTTER_TOO_SHORT
    int MSP_ERROR_IVP_TEXT_NOT_MATCH -> MSP_ERROR_IVP_TEXT_NOT_MATCH
    int MSP_ERROR_IVP_NO_ENOUGH_AUDIO -> MSP_ERROR_IVP_NO_ENOUGH_AUDIO
    int MSP_ERROR_IVP_MODEL_NOT_FOUND_IN_HBASE -> MSP_ERROR_IVP_MODEL_NOT_FOUND_IN_HBASE
    int MSP_MODEL_NEED_UPDATE -> MSP_MODEL_NEED_UPDATE
    int MSP_ERROR_IFR_NOT_FACE_IMAGE -> MSP_ERROR_IFR_NOT_FACE_IMAGE
    int MSP_ERROR_FACE_IMAGE_FULL_LEFT -> MSP_ERROR_FACE_IMAGE_FULL_LEFT
    int MSP_ERROR_FACE_IMAGE_FULL_RIGHT -> MSP_ERROR_FACE_IMAGE_FULL_RIGHT
    int MSP_ERROR_IMAGE_CLOCKWISE_WHIRL -> MSP_ERROR_IMAGE_CLOCKWISE_WHIRL
    int MSP_ERROR_IMAGE_COUNTET_CLOCKWISE_WHIRL -> MSP_ERROR_IMAGE_COUNTET_CLOCKWISE_WHIRL
    int MSP_ERROR_VALID_IMAGE_SIZE -> MSP_ERROR_VALID_IMAGE_SIZE
    int MSP_ERROR_ILLUMINATION -> MSP_ERROR_ILLUMINATION
    int MSP_ERROR_FACE_OCCULTATION -> MSP_ERROR_FACE_OCCULTATION
    int MSP_ERROR_FACE_INVALID_MODEL -> MSP_ERROR_FACE_INVALID_MODEL
    int MSP_ERROR_FACE_MODEL_NOT_FOUND_IN_HBASE -> MSP_ERROR_FACE_MODEL_NOT_FOUND_IN_HBASE
    int MSP_ERROR_FUSION_INVALID_INPUT_TYPE -> MSP_ERROR_FUSION_INVALID_INPUT_TYPE
    int MSP_ERROR_FUSION_NO_ENOUGH_DATA -> MSP_ERROR_FUSION_NO_ENOUGH_DATA
    int MSP_ERROR_FUSION_ENOUGH_DATA -> MSP_ERROR_FUSION_ENOUGH_DATA
    int MSP_ERROR_NO_GROUP -> MSP_ERROR_NO_GROUP
    int MSP_ERROR_GROUP_EMPTY -> MSP_ERROR_GROUP_EMPTY
    int MSP_ERROR_NO_USER -> MSP_ERROR_NO_USER
    int MSP_ERROR_OVERFLOW_IN_GROUP -> MSP_ERROR_OVERFLOW_IN_GROUP
    int MSP_ERROR_HTTP_BASE -> MSP_ERROR_HTTP_BASE
    int MSP_ERROR_ISV_NO_USER -> MSP_ERROR_ISV_NO_USER
    int MSP_ERROR_LUA_BASE -> MSP_ERROR_LUA_BASE
    int MSP_ERROR_LUA_YIELD -> MSP_ERROR_LUA_YIELD
    int MSP_ERROR_LUA_ERRRUN -> MSP_ERROR_LUA_ERRRUN
    int MSP_ERROR_LUA_ERRSYNTAX -> MSP_ERROR_LUA_ERRSYNTAX
    int MSP_ERROR_LUA_ERRMEM -> MSP_ERROR_LUA_ERRMEM
    int MSP_ERROR_LUA_ERRERR -> MSP_ERROR_LUA_ERRERR
    int MSP_ERROR_LUA_INVALID_PARAM -> MSP_ERROR_LUA_INVALID_PARAM
    int MSP_ERROR_MMP_BASE -> MSP_ERROR_MMP_BASE
    int MSP_ERROR_MMP_MYSQL_INITFAIL -> MSP_ERROR_MMP_MYSQL_INITFAIL
    int MSP_ERROR_MMP_REDIS_INITFAIL -> MSP_ERROR_MMP_REDIS_INITFAIL
    int MSP_ERROR_MMP_NETDSS_INITFAIL -> MSP_ERROR_MMP_NETDSS_INITFAIL
    int MSP_ERROR_MMP_TAIR_INITFAIL -> MSP_ERROR_MMP_TAIR_INITFAIL
    int MSP_ERROR_MMP_MAIL_SESSION_FAIL -> MSP_ERROR_MMP_MAIL_SESSION_FAIL
    int MSP_ERROR_MMP_MAIL_LOGON_FAIL -> MSP_ERROR_MMP_MAIL_LOGON_FAIL
    int MSP_ERROR_MMP_MAIL_USER_ILLEGAL -> MSP_ERROR_MMP_MAIL_USER_ILLEGAL
    int MSP_ERROR_MMP_MAIL_PWD_ERR -> MSP_ERROR_MMP_MAIL_PWD_ERR
    int MSP_ERROR_MMP_MAIL_SOCKET_ERR -> MSP_ERROR_MMP_MAIL_SOCKET_ERR
    int MSP_ERROR_MMP_MAIL_INIT_FAIL -> MSP_ERROR_MMP_MAIL_INIT_FAIL
    int MSP_ERROR_MMP_STORE_MNR_NO_INIT -> MSP_ERROR_MMP_STORE_MNR_NO_INIT
    int MSP_ERROR_MMP_STORE_MNR_POOL_FULL -> MSP_ERROR_MMP_STORE_MNR_POOL_FULL
    int MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL -> MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL
    int MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG -> MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG
    int MSP_ERROR_MMP_PARAM_NULL -> MSP_ERROR_MMP_PARAM_NULL
    int MSP_ERROR_MMP_ERR_MORE_TOTAL -> MSP_ERROR_MMP_ERR_MORE_TOTAL
    int MSP_ERROR_MMP_PROC_THRESHOLD -> MSP_ERROR_MMP_PROC_THRESHOLD
    int MSP_ERROR_MMP_SERVER_THRESHOLD -> MSP_ERROR_MMP_SERVER_THRESHOLD
    int MSP_ERROR_MMP_PYTHON_NO_EXIST -> MSP_ERROR_MMP_PYTHON_NO_EXIST
    int MSP_ERROR_MMP_PYTHON_IMPORT_FAILED -> MSP_ERROR_MMP_PYTHON_IMPORT_FAILED
    int MSP_ERROR_MMP_PYTHON_BAD_FUNC -> MSP_ERROR_MMP_PYTHON_BAD_FUNC
    int MSP_ERROR_MMP_DB_DATA_ILLEGAL -> MSP_ERROR_MMP_DB_DATA_ILLEGAL
    int MSP_ERROR_MMP_REDIS_NOT_CONN -> MSP_ERROR_MMP_REDIS_NOT_CONN
    int MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY -> MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY
    int MSP_ERROR_MMP_TAIR_CONNECT -> MSP_ERROR_MMP_TAIR_CONNECT
    int MSP_ERROR_MMP_PMC_SERVINFO_INVALID -> MSP_ERROR_MMP_PMC_SERVINFO_INVALID
    int MSP_ERROR_MMP_ALARM_GROUP_NULL -> MSP_ERROR_MMP_ALARM_GROUP_NULL
    int MSP_ERROR_MMP_ALARM_CONTXT_NULL -> MSP_ERROR_MMP_ALARM_CONTXT_NULL
    int MSP_ERROR_LMOD_BASE -> MSP_ERROR_LMOD_BASE
    int MSP_ERROR_LMOD_NOT_FOUND -> MSP_ERROR_LMOD_NOT_FOUND
    int MSP_ERROR_LMOD_UNEXPECTED_BIN -> MSP_ERROR_LMOD_UNEXPECTED_BIN
    int MSP_ERROR_LMOD_LOADCODE -> MSP_ERROR_LMOD_LOADCODE
    int MSP_ERROR_LMOD_PRECALL -> MSP_ERROR_LMOD_PRECALL
    int MSP_ERROR_LMOD_RUNTIME_EXCEPTION -> MSP_ERROR_LMOD_RUNTIME_EXCEPTION
    int MSP_ERROR_LMOD_ALREADY_LOADED -> MSP_ERROR_LMOD_ALREADY_LOADED
    int MSP_ERROR_BIZ_BASE -> MSP_ERROR_BIZ_BASE
    int MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE -> MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE
    int ERROR_NO_NETWORK -> ERROR_NO_NETWORK
    int ERROR_NETWORK_TIMEOUT -> ERROR_NETWORK_TIMEOUT
    int ERROR_NET_EXCEPTION -> ERROR_NET_EXCEPTION
    int ERROR_INVALID_RESULT -> ERROR_INVALID_RESULT
    int ERROR_NO_MATCH -> ERROR_NO_MATCH
    int ERROR_AUDIO_RECORD -> ERROR_AUDIO_RECORD
    int ERROR_NO_SPEECH -> ERROR_NO_SPEECH
    int ERROR_SPEECH_TIMEOUT -> ERROR_SPEECH_TIMEOUT
    int ERROR_EMPTY_UTTERANCE -> ERROR_EMPTY_UTTERANCE
    int ERROR_FILE_ACCESS -> ERROR_FILE_ACCESS
    int ERROR_PLAY_MEDIA -> ERROR_PLAY_MEDIA
    int ERROR_INVALID_PARAM -> ERROR_INVALID_PARAM
    int ERROR_TEXT_OVERFLOW -> ERROR_TEXT_OVERFLOW
    int ERROR_INVALID_DATA -> ERROR_INVALID_DATA
    int ERROR_LOGIN -> ERROR_LOGIN
    int ERROR_PERMISSION_DENIED -> ERROR_PERMISSION_DENIED
    int ERROR_INTERRUPT -> ERROR_INTERRUPT
    int ERROR_VERSION_LOWER -> ERROR_VERSION_LOWER
    int ERROR_SYSTEM_PREINSTALL -> ERROR_SYSTEM_PREINSTALL
    int ERROR_UNSATISFIED_LINK -> ERROR_UNSATISFIED_LINK
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_COMPONENT_NOT_INSTALLED -> ERROR_COMPONENT_NOT_INSTALLED
    int ERROR_ENGINE_NOT_SUPPORTED -> ERROR_ENGINE_NOT_SUPPORTED
    int ERROR_ENGINE_INIT_FAIL -> ERROR_ENGINE_INIT_FAIL
    int ERROR_ENGINE_CALL_FAIL -> ERROR_ENGINE_CALL_FAIL
    int ERROR_ENGINE_BUSY -> ERROR_ENGINE_BUSY
    int ERROR_LOCAL_NO_INIT -> ERROR_LOCAL_NO_INIT
    int ERROR_LOCAL_RESOURCE -> ERROR_LOCAL_RESOURCE
    int ERROR_LOCAL_ENGINE -> ERROR_LOCAL_ENGINE
    int ERROR_IVW_INTERRUPT -> ERROR_IVW_INTERRUPT
    int ERROR_ASR_CLIENT -> ERROR_ASR_CLIENT
    int ERROR_ASR_INVALID_PARA -> ERROR_ASR_INVALID_PARA
    int ERROR_ASR_INVALID_PARA_VALUE -> ERROR_ASR_INVALID_PARA_VALUE
    int ERROR_ASR_OUT_OF_MEMORY -> ERROR_ASR_OUT_OF_MEMORY
    int ERROR_ASR_CREATE_HANDLE_FAILED -> ERROR_ASR_CREATE_HANDLE_FAILED
    int ERROR_ASR_ENGINE_INIT_FAILED -> ERROR_ASR_ENGINE_INIT_FAILED
    int ERROR_ASR_ENGINE_STARTED -> ERROR_ASR_ENGINE_STARTED
    int ERROR_ASR_ENGINE_UNINIT -> ERROR_ASR_ENGINE_UNINIT
    int ERROR_ASR_SPEECH_TIMEOUT -> ERROR_ASR_SPEECH_TIMEOUT
    int ERROR_ASR_NO_RECOGNIZED_RESULT -> ERROR_ASR_NO_RECOGNIZED_RESULT
    int ERROR_ASR_INVALID_HANDLE -> ERROR_ASR_INVALID_HANDLE
    int ERROR_ASR_FILE_ACCESS -> ERROR_ASR_FILE_ACCESS
    int ERROR_AITALK_FALSE -> ERROR_AITALK_FALSE
    int ERROR_AITALK_PERMISSION_DENIED -> ERROR_AITALK_PERMISSION_DENIED
    int ERROR_AITALK_INVALID_PARA -> ERROR_AITALK_INVALID_PARA
    int ERROR_AITALK_BUFFER_OVERFLOW -> ERROR_AITALK_BUFFER_OVERFLOW
    int ERROR_AITALK_FAILED -> ERROR_AITALK_FAILED
    int ERROR_AITALK_NOT_SUPPORTED -> ERROR_AITALK_NOT_SUPPORTED
    int ERROR_AITALK_OUT_OF_MEMORY -> ERROR_AITALK_OUT_OF_MEMORY
    int ERROR_AITALK_INVALID_RESOURCE -> ERROR_AITALK_INVALID_RESOURCE
    int ERROR_AITALK_NOT_FOUND -> ERROR_AITALK_NOT_FOUND
    int ERROR_AITALK_INVALID_GRAMMAR -> ERROR_AITALK_INVALID_GRAMMAR
    int ERROR_AITALK_INVALID_CALL -> ERROR_AITALK_INVALID_CALL
    int ERROR_AITALK_SYNTAX_ERROR -> ERROR_AITALK_SYNTAX_ERROR
    int ERROR_AITALK_RESET -> ERROR_AITALK_RESET
    int ERROR_AITALK_ENDED -> ERROR_AITALK_ENDED
    int ERROR_AITALK_IDLE -> ERROR_AITALK_IDLE
    int ERROR_AITALK_CANNOT_SAVE_FILE -> ERROR_AITALK_CANNOT_SAVE_FILE
    int ERROR_AITALK_INVALID_GRAMMAR_NAME -> ERROR_AITALK_INVALID_GRAMMAR_NAME
    int ERROR_AITALK_BUFFER_EMPTY -> ERROR_AITALK_BUFFER_EMPTY
    int ERROR_AITALK_GET_RESULT -> ERROR_AITALK_GET_RESULT
    int ERROR_AITALK_REACT_OUT_TIME -> ERROR_AITALK_REACT_OUT_TIME
    int ERROR_AITALK_SPEECH_OUT_TIME -> ERROR_AITALK_SPEECH_OUT_TIME
    int ERROR_AITALK_AUDIO_CUT -> ERROR_AITALK_AUDIO_CUT
    int ERROR_AITALK_AUDIO_LOWER -> ERROR_AITALK_AUDIO_LOWER
    int ERROR_AITALK_INSUFFICIENT_PERMISSIONS -> ERROR_AITALK_INSUFFICIENT_PERMISSIONS
    int ERROR_AITALK_RESULT_ERROR -> ERROR_AITALK_RESULT_ERROR
    int ERROR_AITALK_SHORT_PAUSE -> ERROR_AITALK_SHORT_PAUSE
    int ERROR_AITALK_BUSY -> ERROR_AITALK_BUSY
    int ERROR_AITALK_GRM_NOT_UPDATE -> ERROR_AITALK_GRM_NOT_UPDATE
    int ERROR_AITALK_STARTED -> ERROR_AITALK_STARTED
    int ERROR_AITALK_STOPPED -> ERROR_AITALK_STOPPED
    int ERROR_AITALK_ALREADY_STARTED -> ERROR_AITALK_ALREADY_STARTED
    int ERROR_AITALK_ALREADY_STOPPED -> ERROR_AITALK_ALREADY_STOPPED
    int ERROR_AITALK_TOO_MANY_COMMAND -> ERROR_AITALK_TOO_MANY_COMMAND
    int ERROR_AITALK_WAIT -> ERROR_AITALK_WAIT
    int ERROR_AITALK_MAE_RIGHT -> ERROR_AITALK_MAE_RIGHT
    int ERROR_AITALK_MAE_WRONG -> ERROR_AITALK_MAE_WRONG
    int ERROR_AITALK_GRM_ERR -> ERROR_AITALK_GRM_ERR
    int ERROR_TTS_INVALID_PARA -> ERROR_TTS_INVALID_PARA
    int ERROR_TTS_INVALID_PARA_VALUE -> ERROR_TTS_INVALID_PARA_VALUE
    int ERROR_TTS_OUT_OF_MEMORY -> ERROR_TTS_OUT_OF_MEMORY
    int ERROR_TTS_INVALID_HANDLE -> ERROR_TTS_INVALID_HANDLE
    int ERROR_TTS_CREATE_HANDLE_FAILED -> ERROR_TTS_CREATE_HANDLE_FAILED
    int ERROR_TTS_INVALID_RESOURCE -> ERROR_TTS_INVALID_RESOURCE
    int ERROR_TTS_INVALID_VOICE_NAME -> ERROR_TTS_INVALID_VOICE_NAME
    int ERROR_TTS_ENGINE_UNINIT -> ERROR_TTS_ENGINE_UNINIT
    int ERROR_TTS_ENGINE_INIT_FAILED -> ERROR_TTS_ENGINE_INIT_FAILED
    int ERROR_TTS_ENGINE_BUSY -> ERROR_TTS_ENGINE_BUSY
    int ERROR_AISOUND_BASE -> ERROR_AISOUND_BASE
    int ERROR_AISOUND_UNIMPEMENTED -> ERROR_AISOUND_UNIMPEMENTED
    int ERROR_AISOUND_UNSUPPORTED -> ERROR_AISOUND_UNSUPPORTED
    int ERROR_AISOUND_INVALID_HANDLE -> ERROR_AISOUND_INVALID_HANDLE
    int ERROR_AISOUND_INVALID_PARA -> ERROR_AISOUND_INVALID_PARA
    int ERROR_AISOUND_INSUFFICIENT_HEAP -> ERROR_AISOUND_INSUFFICIENT_HEAP
    int ERROR_AISOUND_STATE_REFUSE -> ERROR_AISOUND_STATE_REFUSE
    int ERROR_AISOUND_INVALID_PARA_ID -> ERROR_AISOUND_INVALID_PARA_ID
    int ERROR_AISOUND_INVALID_PARA_VALUE -> ERROR_AISOUND_INVALID_PARA_VALUE
    int ERROR_AISOUND_RESOURCE -> ERROR_AISOUND_RESOURCE
    int ERROR_AISOUND_RESOURCE_READ -> ERROR_AISOUND_RESOURCE_READ
    int ERROR_AISOUND_LBENDIAN -> ERROR_AISOUND_LBENDIAN
    int ERROR_AISOUND_HEADFILE -> ERROR_AISOUND_HEADFILE
    int ERROR_AISOUND_BUFFER_OVERFLOW -> ERROR_AISOUND_BUFFER_OVERFLOW
    int ERROR_AISOUND_INVALID_ISAMPA -> ERROR_AISOUND_INVALID_ISAMPA
    int ERROR_AISOUND_INVALID_CSSML -> ERROR_AISOUND_INVALID_CSSML
    int ERROR_IVW_ENGINE_UNINI -> ERROR_IVW_ENGINE_UNINI
    int ERROR_IVW_RESVER_NOMATCH -> ERROR_IVW_RESVER_NOMATCH
    int SPEECH_ERROR_IVW_INVALID_RESTYPE -> SPEECH_ERROR_IVW_INVALID_RESTYPE
    int ERROR_IVW_INVALID_CALL -> ERROR_IVW_INVALID_CALL
    int ERROR_IVW_INVALID_ARG -> ERROR_IVW_INVALID_ARG
    int ERROR_IVW_TELL_SIZE -> ERROR_IVW_TELL_SIZE
    int ERROR_IVW_OUT_OF_MEMORY -> ERROR_IVW_OUT_OF_MEMORY
    int ERROR_IVW_OUT_BUFFER_FULL -> ERROR_IVW_OUT_BUFFER_FULL
    int ERROR_IVW_OUT_BUFFER_EMPTY -> ERROR_IVW_OUT_BUFFER_EMPTY
    int ERROR_IVW_INVALID_RESOURCE -> ERROR_IVW_INVALID_RESOURCE
    int ERROR_IVW_REPETITIOPN_ENTER -> ERROR_IVW_REPETITIOPN_ENTER
    int ERROR_IVW_NOT_SUPPORT -> ERROR_IVW_NOT_SUPPORT
    int ERROR_IVW_NOT_FOUND -> ERROR_IVW_NOT_FOUND
    int ERROR_IVW_INVALID_SN -> ERROR_IVW_INVALID_SN
    int ERROR_IVW_LIMITTED -> ERROR_IVW_LIMITTED
    int ERROR_IVW_TIME_OUT -> ERROR_IVW_TIME_OUT
    int ERROR_IVW_ENROLL1_SUCESS -> ERROR_IVW_ENROLL1_SUCESS
    int ERROR_IVW_ENROLL1_FAILED -> ERROR_IVW_ENROLL1_FAILED
    int ERROR_IVW_ENROLL2_SUCESS -> ERROR_IVW_ENROLL2_SUCESS
    int ERROR_IVW_ENROLL2_FAILED -> ERROR_IVW_ENROLL2_FAILED
    int ERROR_IVW_ENROLL3_SUCESS -> ERROR_IVW_ENROLL3_SUCESS
    int ERROR_IVW_ENROLL3_FAILED -> ERROR_IVW_ENROLL3_FAILED
    int ERROR_IVW_SPEECH_TOO_SHORT -> ERROR_IVW_SPEECH_TOO_SHORT
    int ERROR_IVW_SPEECH_STOP -> ERROR_IVW_SPEECH_STOP
com.iflytek.cloud.EvaluatorListener -> com.iflytek.cloud.EvaluatorListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.EvaluatorResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.EvaluatorResult -> com.iflytek.cloud.EvaluatorResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.FaceDetector -> com.iflytek.cloud.FaceDetector:
    com.iflytek.cloud.FaceDetector a -> a
    com.iflytek.thridparty.as b -> b
    com.iflytek.cloud.FaceDetector createDetector(android.content.Context,java.lang.String) -> createDetector
    com.iflytek.cloud.FaceDetector getDetector() -> getDetector
    java.lang.String detectARGB(android.graphics.Bitmap) -> detectARGB
    java.lang.String detectGray(android.graphics.Bitmap) -> detectGray
    java.lang.String trackNV21(byte[],int,int,int,int) -> trackNV21
    void destroy() -> destroy
com.iflytek.cloud.FaceRequest -> com.iflytek.cloud.FaceRequest:
    com.iflytek.thridparty.at a -> a
    android.content.Context c -> c
    int sendRequest(byte[],com.iflytek.cloud.RequestListener) -> sendRequest
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.cloud.FaceRequest$a -> com.iflytek.cloud.FaceRequest$a:
    com.iflytek.cloud.RequestListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.FaceRequest a -> a
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onBufferReceived(byte[]) -> onBufferReceived
    com.iflytek.cloud.RequestListener a(com.iflytek.cloud.FaceRequest$a) -> a
com.iflytek.cloud.GrammarListener -> com.iflytek.cloud.GrammarListener:
    void onBuildFinish(java.lang.String,com.iflytek.cloud.SpeechError) -> onBuildFinish
com.iflytek.cloud.IdentityListener -> com.iflytek.cloud.IdentityListener:
    void onResult(com.iflytek.cloud.IdentityResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.IdentityResult -> com.iflytek.cloud.IdentityResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.IdentityVerifier -> com.iflytek.cloud.IdentityVerifier:
    com.iflytek.cloud.IdentityVerifier a -> a
    com.iflytek.thridparty.av c -> c
    com.iflytek.cloud.InitListener d -> d
    android.os.Handler e -> e
    com.iflytek.cloud.IdentityVerifier createVerifier(android.content.Context,com.iflytek.cloud.InitListener) -> createVerifier
    com.iflytek.cloud.IdentityVerifier getVerifier() -> getVerifier
    int startWorking(com.iflytek.cloud.IdentityListener) -> startWorking
    int writeData(java.lang.String,java.lang.String,byte[],int,int) -> writeData
    void stopWrite(java.lang.String) -> stopWrite
    void execute(java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.IdentityListener) -> execute
    boolean isWorking() -> isWorking
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.IdentityVerifier) -> a
com.iflytek.cloud.InitListener -> com.iflytek.cloud.InitListener:
    void onInit(int) -> onInit
com.iflytek.cloud.LexiconListener -> com.iflytek.cloud.LexiconListener:
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
com.iflytek.cloud.RecognizerListener -> com.iflytek.cloud.RecognizerListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.RecognizerResult -> com.iflytek.cloud.RecognizerResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.RequestListener -> com.iflytek.cloud.RequestListener:
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.Setting -> com.iflytek.cloud.Setting:
    java.lang.String a -> a
    com.iflytek.cloud.Setting$LOG_LEVEL b -> b
    java.lang.String c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    void setLogLevel(com.iflytek.cloud.Setting$LOG_LEVEL) -> setLogLevel
    com.iflytek.cloud.Setting$LOG_LEVEL getLogLevel() -> getLogLevel
    void setLogPath(java.lang.String) -> setLogPath
    java.lang.String getLogPath() -> getLogPath
    void setShowLog(boolean) -> setShowLog
    boolean getShowLog() -> getShowLog
    void setSaveTestLog(boolean) -> setSaveTestLog
    boolean getSaveTestLog() -> getSaveTestLog
    void setLocationEnable(boolean) -> setLocationEnable
    boolean getLocationEnable() -> getLocationEnable
com.iflytek.cloud.Setting$LOG_LEVEL -> com.iflytek.cloud.Setting$LOG_LEVEL:
    com.iflytek.cloud.Setting$LOG_LEVEL all -> all
    com.iflytek.cloud.Setting$LOG_LEVEL detail -> detail
    com.iflytek.cloud.Setting$LOG_LEVEL normal -> normal
    com.iflytek.cloud.Setting$LOG_LEVEL low -> low
    com.iflytek.cloud.Setting$LOG_LEVEL none -> none
    com.iflytek.cloud.Setting$LOG_LEVEL[] a -> a
    com.iflytek.cloud.Setting$LOG_LEVEL[] values() -> values
    com.iflytek.cloud.Setting$LOG_LEVEL valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.SpeakerVerifier -> com.iflytek.cloud.SpeakerVerifier:
    com.iflytek.cloud.SpeakerVerifier a -> a
    com.iflytek.thridparty.ax c -> c
    com.iflytek.cloud.SpeakerVerifier createVerifier(android.content.Context,com.iflytek.cloud.InitListener) -> createVerifier
    com.iflytek.cloud.SpeakerVerifier getVerifier() -> getVerifier
    void getPasswordList(com.iflytek.cloud.SpeechListener) -> getPasswordList
    java.lang.String generatePassword(int) -> generatePassword
    int startListening(com.iflytek.cloud.VerifierListener) -> startListening
    void stopListening() -> stopListening
    int writeAudio(byte[],int,int) -> writeAudio
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    void sendRequest(java.lang.String,java.lang.String,com.iflytek.cloud.SpeechListener) -> sendRequest
com.iflytek.cloud.SpeechConstant -> com.iflytek.cloud.SpeechConstant:
    java.lang.String APPID -> APPID
    java.lang.String WAP_PROXY -> WAP_PROXY
    java.lang.String FORCE_LOGIN -> FORCE_LOGIN
    java.lang.String LIB_NAME -> LIB_NAME
    java.lang.String RESULT_TYPE -> RESULT_TYPE
    java.lang.String RESULT_LEVEL -> RESULT_LEVEL
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String ACCENT -> ACCENT
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String VAD_ENABLE -> VAD_ENABLE
    java.lang.String VAD_BOS -> VAD_BOS
    java.lang.String VAD_EOS -> VAD_EOS
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String PARAMS -> PARAMS
    java.lang.String NET_CHECK -> NET_CHECK
    java.lang.String NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String KEY_SPEECH_TIMEOUT -> KEY_SPEECH_TIMEOUT
    java.lang.String ENGINE_MODE -> ENGINE_MODE
    java.lang.String ENGINE_TYPE -> ENGINE_TYPE
    java.lang.String AUDIO_SOURCE -> AUDIO_SOURCE
    java.lang.String ASR_SOURCE_PATH -> ASR_SOURCE_PATH
    java.lang.String FILTER_AUDIO_TIME -> FILTER_AUDIO_TIME
    java.lang.String LOCAL_GRAMMAR -> LOCAL_GRAMMAR
    java.lang.String CLOUD_GRAMMAR -> CLOUD_GRAMMAR
    java.lang.String GRAMMAR_TYPE -> GRAMMAR_TYPE
    java.lang.String GRAMMAR_NAME -> GRAMMAR_NAME
    java.lang.String GRAMMAR_LIST -> GRAMMAR_LIST
    java.lang.String LOCAL_GRAMMAR_PACKAGE -> LOCAL_GRAMMAR_PACKAGE
    java.lang.String NOTIFY_RECORD_DATA -> NOTIFY_RECORD_DATA
    java.lang.String MIXED_THRESHOLD -> MIXED_THRESHOLD
    java.lang.String MIXED_TYPE -> MIXED_TYPE
    java.lang.String MIXED_TIMEOUT -> MIXED_TIMEOUT
    java.lang.String ASR_THRESHOLD -> ASR_THRESHOLD
    java.lang.String LEXICON_TYPE -> LEXICON_TYPE
    java.lang.String ASR_NBEST -> ASR_NBEST
    java.lang.String ASR_WBEST -> ASR_WBEST
    java.lang.String ASR_PTT -> ASR_PTT
    java.lang.String ASR_DWA -> ASR_DWA
    java.lang.String NLP_VERSION -> NLP_VERSION
    java.lang.String TYPE_LOCAL -> TYPE_LOCAL
    java.lang.String TYPE_CLOUD -> TYPE_CLOUD
    java.lang.String TYPE_MIX -> TYPE_MIX
    java.lang.String TYPE_AUTO -> TYPE_AUTO
    java.lang.String ISV_SST -> ISV_SST
    java.lang.String ISV_PWDT -> ISV_PWDT
    java.lang.String ISV_VID -> ISV_VID
    java.lang.String ISV_RGN -> ISV_RGN
    java.lang.String ISV_PWD -> ISV_PWD
    java.lang.String ISV_AUDIO_PATH -> ISV_AUDIO_PATH
    java.lang.String ISV_CMD -> ISV_CMD
    java.lang.String ISV_INTERRUPT_ERROR -> ISV_INTERRUPT_ERROR
    java.lang.String WFR_SST -> WFR_SST
    java.lang.String ISE_USER_MODEL_ID -> ISE_USER_MODEL_ID
    java.lang.String ISE_CATEGORY -> ISE_CATEGORY
    java.lang.String ISE_ENT -> ISE_ENT
    java.lang.String ISE_PARSED -> ISE_PARSED
    java.lang.String ISE_AUTO_TRACKING -> ISE_AUTO_TRACKING
    java.lang.String ISE_TRACK_TYPE -> ISE_TRACK_TYPE
    java.lang.String ISE_INTERRUPT_ERROR -> ISE_INTERRUPT_ERROR
    java.lang.String ISE_AUDIO_PATH -> ISE_AUDIO_PATH
    java.lang.String ISE_SOURCE_PATH -> ISE_SOURCE_PATH
    java.lang.String IVW_SST -> IVW_SST
    java.lang.String IVW_WORD_PATH -> IVW_WORD_PATH
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String IVW_SHOT_WORD -> IVW_SHOT_WORD
    java.lang.String IVW_ENROLL_RES_PATH -> IVW_ENROLL_RES_PATH
    java.lang.String IVW_ENROLL_DEST_PATH -> IVW_ENROLL_DEST_PATH
    java.lang.String IVW_ENROLL_TMIN -> IVW_ENROLL_TMIN
    java.lang.String IVW_ENROLL_TMAX -> IVW_ENROLL_TMAX
    java.lang.String IVW_VOL_CHECK -> IVW_VOL_CHECK
    java.lang.String IVW_ENROLL_TIMES -> IVW_ENROLL_TIMES
    java.lang.String IVW_RES_PATH -> IVW_RES_PATH
    java.lang.String IVW_NET_MODE -> IVW_NET_MODE
    java.lang.String VOICE_NAME -> VOICE_NAME
    java.lang.String EMOT -> EMOT
    java.lang.String NEXT_TEXT -> NEXT_TEXT
    java.lang.String LOCAL_SPEAKERS -> LOCAL_SPEAKERS
    java.lang.String SPEED -> SPEED
    java.lang.String PITCH -> PITCH
    java.lang.String VOLUME -> VOLUME
    java.lang.String BACKGROUND_SOUND -> BACKGROUND_SOUND
    java.lang.String TTS_BUFFER_TIME -> TTS_BUFFER_TIME
    java.lang.String TTS_PLAY_STATE -> TTS_PLAY_STATE
    java.lang.String TTS_DATA_NOTIFY -> TTS_DATA_NOTIFY
    java.lang.String TTS_INTERRUPT_ERROR -> TTS_INTERRUPT_ERROR
    java.lang.String TTS_SPELL_INFO -> TTS_SPELL_INFO
    java.lang.String AUDIO_FORMAT -> AUDIO_FORMAT
    java.lang.String STREAM_TYPE -> STREAM_TYPE
    java.lang.String KEY_REQUEST_FOCUS -> KEY_REQUEST_FOCUS
    java.lang.String TTS_AUDIO_PATH -> TTS_AUDIO_PATH
    java.lang.String DATA_TYPE -> DATA_TYPE
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String ASR_AUDIO_PATH -> ASR_AUDIO_PATH
    java.lang.String ASR_INTERRUPT_ERROR -> ASR_INTERRUPT_ERROR
    java.lang.String ASR_NOMATCH_ERROR -> ASR_NOMATCH_ERROR
    java.lang.String ASR_NET_PERF -> ASR_NET_PERF
    java.lang.String ENG_ASR -> ENG_ASR
    java.lang.String ENG_TTS -> ENG_TTS
    java.lang.String ENG_NLU -> ENG_NLU
    java.lang.String ENG_IVW -> ENG_IVW
    java.lang.String ENG_IVP -> ENG_IVP
    java.lang.String ENG_WFR -> ENG_WFR
    java.lang.String ENG_EVA -> ENG_EVA
    java.lang.String MODE_MSC -> MODE_MSC
    java.lang.String MODE_PLUS -> MODE_PLUS
    java.lang.String MODE_AUTO -> MODE_AUTO
    java.lang.String TEXT_ENCODING -> TEXT_ENCODING
    java.lang.String TEXT_BOM -> TEXT_BOM
    java.lang.String AUTH_ID -> AUTH_ID
    java.lang.String MFV_SST -> MFV_SST
    java.lang.String MFV_VCM -> MFV_VCM
    java.lang.String MFV_SCENES -> MFV_SCENES
    java.lang.String MFV_AFC -> MFV_AFC
    java.lang.String MFV_DATA_PATH -> MFV_DATA_PATH
    java.lang.String MFV_INTERRUPT_ERROR -> MFV_INTERRUPT_ERROR
    java.lang.String PROT_TYPE -> PROT_TYPE
    java.lang.String PLUS_LOCAL_TTS -> PLUS_LOCAL_TTS
    java.lang.String PLUS_LOCAL_ASR -> PLUS_LOCAL_ASR
    java.lang.String PLUS_LOCAL_IVW -> PLUS_LOCAL_IVW
    java.lang.String PLUS_LOCAL_ALL -> PLUS_LOCAL_ALL
    java.lang.String IST_SESSION_ID -> IST_SESSION_ID
    java.lang.String IST_SYNC_ID -> IST_SYNC_ID
    java.lang.String IST_AUDIO_UPLOADED -> IST_AUDIO_UPLOADED
    java.lang.String IST_AUDIO_PATH -> IST_AUDIO_PATH
    java.lang.String IST_SESSION_TRY -> IST_SESSION_TRY
com.iflytek.cloud.SpeechError -> com.iflytek.cloud.SpeechError:
    long serialVersionUID -> serialVersionUID
    int TIP_ERROR_IVP_GENERAL -> TIP_ERROR_IVP_GENERAL
    int TIP_ERROR_IVP_EXTRA_RGN_SOPPORT -> TIP_ERROR_IVP_EXTRA_RGN_SOPPORT
    int TIP_ERROR_IVP_TRUNCATED -> TIP_ERROR_IVP_TRUNCATED
    int TIP_ERROR_IVP_MUCH_NOISE -> TIP_ERROR_IVP_MUCH_NOISE
    int TIP_ERROR_IVP_TOO_LOW -> TIP_ERROR_IVP_TOO_LOW
    int TIP_ERROR_IVP_ZERO_AUDIO -> TIP_ERROR_IVP_ZERO_AUDIO
    int TIP_ERROR_IVP_UTTER_TOO_SHORT -> TIP_ERROR_IVP_UTTER_TOO_SHORT
    int TIP_ERROR_IVP_TEXT_NOT_MATCH -> TIP_ERROR_IVP_TEXT_NOT_MATCH
    int TIP_ERROR_IVP_NO_ENOUGH_AUDIO -> TIP_ERROR_IVP_NO_ENOUGH_AUDIO
    int TIP_ERROR_MODEL_NOT_FOUND -> TIP_ERROR_MODEL_NOT_FOUND
    int TIP_ERROR_MODEL_IS_CREATING -> TIP_ERROR_MODEL_IS_CREATING
    int TIP_ERROR_ALREADY_EXIST -> TIP_ERROR_ALREADY_EXIST
    int TIP_ERROR_NO_GROUP -> TIP_ERROR_NO_GROUP
    int TIP_ERROR_GROUP_EMPTY -> TIP_ERROR_GROUP_EMPTY
    int TIP_ERROR_NO_USER -> TIP_ERROR_NO_USER
    int TIP_ERROR_OVERFLOW_IN_GROUP -> TIP_ERROR_OVERFLOW_IN_GROUP
    int a -> a
    java.lang.String b -> b
    java.lang.String toString() -> toString
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorDescription() -> getErrorDescription
    java.lang.String getHtmlDescription(boolean) -> getHtmlDescription
    java.lang.String getPlainDescription(boolean) -> getPlainDescription
com.iflytek.cloud.SpeechEvaluator -> com.iflytek.cloud.SpeechEvaluator:
    com.iflytek.cloud.SpeechEvaluator a -> a
    com.iflytek.thridparty.az c -> c
    com.iflytek.cloud.SpeechEvaluator createEvaluator(android.content.Context,com.iflytek.cloud.InitListener) -> createEvaluator
    com.iflytek.cloud.SpeechEvaluator getEvaluator() -> getEvaluator
    int startEvaluating(java.lang.String,java.lang.String,com.iflytek.cloud.EvaluatorListener) -> startEvaluating
    int startEvaluating(byte[],java.lang.String,com.iflytek.cloud.EvaluatorListener) -> startEvaluating
    boolean writeAudio(byte[],int,int) -> writeAudio
    boolean isEvaluating() -> isEvaluating
    void stopEvaluating() -> stopEvaluating
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.SpeechEvent -> com.iflytek.cloud.SpeechEvent:
    int EVENT_NETPREF -> EVENT_NETPREF
    int EVENT_SESSION_ID -> EVENT_SESSION_ID
    java.lang.String KEY_EVENT_SESSION_ID -> KEY_EVENT_SESSION_ID
    int EVENT_TTS_BUFFER -> EVENT_TTS_BUFFER
    java.lang.String KEY_EVENT_TTS_BUFFER -> KEY_EVENT_TTS_BUFFER
    int EVENT_TTS_CANCEL -> EVENT_TTS_CANCEL
    int EVENT_RECORD_DATA -> EVENT_RECORD_DATA
    java.lang.String KEY_EVENT_RECORD_DATA -> KEY_EVENT_RECORD_DATA
    int EVENT_IVW_RESULT -> EVENT_IVW_RESULT
    java.lang.String KEY_EVENT_IVW_RESULT -> KEY_EVENT_IVW_RESULT
    int EVENT_SPEECH_START -> EVENT_SPEECH_START
    int EVENT_RECORD_STOP -> EVENT_RECORD_STOP
    int EVENT_AUDIO_URL -> EVENT_AUDIO_URL
    java.lang.String KEY_EVENT_AUDIO_URL -> KEY_EVENT_AUDIO_URL
    int EVENT_IST_AUDIO_FILE -> EVENT_IST_AUDIO_FILE
    int EVENT_IST_UPLOAD_BYTES -> EVENT_IST_UPLOAD_BYTES
    int EVENT_IST_CACHE_LEFT -> EVENT_IST_CACHE_LEFT
    java.lang.String KEY_EVENT_IST_UPLOAD_COMPLETE -> KEY_EVENT_IST_UPLOAD_COMPLETE
    int EVENT_IST_RESULT_TIME -> EVENT_IST_RESULT_TIME
    int EVENT_IST_SYNC_ID -> EVENT_IST_SYNC_ID
    int EVENT_SESSION_BEGIN -> EVENT_SESSION_BEGIN
    int EVENT_SESSION_END -> EVENT_SESSION_END
    int EVENT_VOLUME -> EVENT_VOLUME
    int EVENT_VAD_EOS -> EVENT_VAD_EOS
com.iflytek.cloud.SpeechListener -> com.iflytek.cloud.SpeechListener:
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.SpeechRecognizer -> com.iflytek.cloud.SpeechRecognizer:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.thridparty.aB c -> c
    com.iflytek.speech.SpeechRecognizerAidl d -> d
    com.iflytek.cloud.SpeechRecognizer$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechRecognizer createRecognizer(android.content.Context,com.iflytek.cloud.InitListener) -> createRecognizer
    com.iflytek.cloud.SpeechRecognizer getRecognizer() -> getRecognizer
    void a(android.content.Context) -> a
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> updateLexicon
    int startListening(com.iflytek.cloud.RecognizerListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechRecognizer) -> a
com.iflytek.cloud.SpeechRecognizer$a -> com.iflytek.cloud.SpeechRecognizer$a:
    com.iflytek.cloud.RecognizerListener b -> b
    com.iflytek.speech.RecognizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechRecognizer a -> a
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    android.os.Handler a(com.iflytek.cloud.SpeechRecognizer$a) -> a
    com.iflytek.cloud.RecognizerListener b(com.iflytek.cloud.SpeechRecognizer$a) -> b
    com.iflytek.speech.RecognizerListener c(com.iflytek.cloud.SpeechRecognizer$a) -> c
com.iflytek.cloud.SpeechSynthesizer -> com.iflytek.cloud.SpeechSynthesizer:
    com.iflytek.cloud.SpeechSynthesizer c -> c
    com.iflytek.thridparty.aF d -> d
    com.iflytek.speech.SpeechSynthesizerAidl e -> e
    com.iflytek.cloud.SpeechSynthesizer$a f -> f
    com.iflytek.cloud.InitListener a -> a
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechSynthesizer createSynthesizer(android.content.Context,com.iflytek.cloud.InitListener) -> createSynthesizer
    com.iflytek.cloud.SpeechSynthesizer getSynthesizer() -> getSynthesizer
    void a(android.content.Context) -> a
    int startSpeaking(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> startSpeaking
    int synthesizeToUri(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> synthesizeToUri
    void pauseSpeaking() -> pauseSpeaking
    void resumeSpeaking() -> resumeSpeaking
    void stopSpeaking() -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.SpeechSynthesizer$a -> com.iflytek.cloud.SpeechSynthesizer$a:
    com.iflytek.cloud.SynthesizerListener b -> b
    com.iflytek.speech.SynthesizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.cloud.SpeechSynthesizer$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechSynthesizer$a) -> b
    com.iflytek.speech.SynthesizerListener c(com.iflytek.cloud.SpeechSynthesizer$a) -> c
com.iflytek.cloud.SpeechUnderstander -> com.iflytek.cloud.SpeechUnderstander:
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.thridparty.aG c -> c
    com.iflytek.speech.SpeechUnderstanderAidl d -> d
    com.iflytek.cloud.SpeechUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechUnderstander createUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createUnderstander
    com.iflytek.cloud.SpeechUnderstander getUnderstander() -> getUnderstander
    void a(android.content.Context) -> a
    int startUnderstanding(com.iflytek.cloud.SpeechUnderstanderListener) -> startUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int writeAudio(byte[],int,int) -> writeAudio
    void stopUnderstanding() -> stopUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechUnderstander) -> a
com.iflytek.cloud.SpeechUnderstander$a -> com.iflytek.cloud.SpeechUnderstander$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.speech.SpeechUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechUnderstander a -> a
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.speech.SpeechUnderstanderListener a(com.iflytek.cloud.SpeechUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechUnderstander$a) -> b
    com.iflytek.cloud.SpeechUnderstanderListener c(com.iflytek.cloud.SpeechUnderstander$a) -> c
com.iflytek.cloud.SpeechUnderstanderListener -> com.iflytek.cloud.SpeechUnderstanderListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.SpeechUtility -> com.iflytek.cloud.SpeechUtility:
    com.iflytek.cloud.SpeechUtility c -> c
    java.util.ArrayList d -> d
    int e -> e
    android.content.Context f -> f
    boolean g -> g
    com.iflytek.cloud.SpeechUtility$a h -> h
    com.iflytek.thridparty.z$a DEF_ENGINE_MODE -> DEF_ENGINE_MODE
    com.iflytek.thridparty.z$a a -> a
    java.lang.String TAG_RESOURCE_CONTENT -> TAG_RESOURCE_CONTENT
    java.lang.String TAG_RESOURCE_RET -> TAG_RESOURCE_RET
    java.lang.String TAG_RESOURCE_RESULT -> TAG_RESOURCE_RESULT
    com.iflytek.cloud.SpeechUtility createUtility(android.content.Context,java.lang.String) -> createUtility
    com.iflytek.cloud.SpeechUtility getUtility() -> getUtility
    int b() -> b
    boolean c() -> c
    boolean destroy() -> destroy
    boolean a() -> a
    void d() -> d
    void e() -> e
    boolean checkServiceInstalled() -> checkServiceInstalled
    void a(java.lang.String) -> a
    com.iflytek.speech.SpeechComponent b(java.lang.String) -> b
    java.lang.String[] queryAvailableEngines() -> queryAvailableEngines
    int openEngineSettings(java.lang.String) -> openEngineSettings
    boolean c(java.lang.String) -> c
    java.lang.String getComponentUrl() -> getComponentUrl
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getPlusLocalInfo(java.lang.String) -> getPlusLocalInfo
    com.iflytek.thridparty.z$a getEngineMode() -> getEngineMode
    int getServiceVersion() -> getServiceVersion
    boolean a(android.content.Context) -> a
com.iflytek.cloud.SpeechUtility$1 -> com.iflytek.cloud.SpeechUtility$1:
com.iflytek.cloud.SpeechUtility$a -> com.iflytek.cloud.SpeechUtility$a:
    com.iflytek.cloud.SpeechUtility a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iflytek.cloud.SynthesizerListener -> com.iflytek.cloud.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.TextUnderstander -> com.iflytek.cloud.TextUnderstander:
    com.iflytek.thridparty.aH a -> a
    com.iflytek.speech.TextUnderstanderAidl c -> c
    com.iflytek.cloud.TextUnderstander d -> d
    com.iflytek.cloud.TextUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.TextUnderstander createTextUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createTextUnderstander
    com.iflytek.cloud.TextUnderstander getTextUnderstander() -> getTextUnderstander
    void a(android.content.Context) -> a
    int understandText(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> understandText
    boolean isUnderstanding() -> isUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.TextUnderstander) -> a
com.iflytek.cloud.TextUnderstander$a -> com.iflytek.cloud.TextUnderstander$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.speech.TextUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.TextUnderstander a -> a
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    com.iflytek.speech.TextUnderstanderListener a(com.iflytek.cloud.TextUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.TextUnderstander$a) -> b
    com.iflytek.cloud.TextUnderstanderListener c(com.iflytek.cloud.TextUnderstander$a) -> c
com.iflytek.cloud.TextUnderstanderListener -> com.iflytek.cloud.TextUnderstanderListener:
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.UnderstanderResult -> com.iflytek.cloud.UnderstanderResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.VerifierListener -> com.iflytek.cloud.VerifierListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.VerifierResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.VerifierResult -> com.iflytek.cloud.VerifierResult:
    java.lang.String TAG -> TAG
    int MSS_ERROR_IVP_GENERAL -> MSS_ERROR_IVP_GENERAL
    int MSS_ERROR_IVP_EXTRA_RGN_SOPPORT -> MSS_ERROR_IVP_EXTRA_RGN_SOPPORT
    int MSS_ERROR_IVP_TRUNCATED -> MSS_ERROR_IVP_TRUNCATED
    int MSS_ERROR_IVP_MUCH_NOISE -> MSS_ERROR_IVP_MUCH_NOISE
    int MSS_ERROR_IVP_TOO_LOW -> MSS_ERROR_IVP_TOO_LOW
    int MSS_ERROR_IVP_ZERO_AUDIO -> MSS_ERROR_IVP_ZERO_AUDIO
    int MSS_ERROR_IVP_UTTER_TOO_SHORT -> MSS_ERROR_IVP_UTTER_TOO_SHORT
    int MSS_ERROR_IVP_TEXT_NOT_MATCH -> MSS_ERROR_IVP_TEXT_NOT_MATCH
    int MSS_ERROR_IVP_NO_ENOUGH_AUDIO -> MSS_ERROR_IVP_NO_ENOUGH_AUDIO
    java.lang.String sst -> sst
    int ret -> ret
    java.lang.String dcs -> dcs
    java.lang.Double score -> score
    java.lang.Double score_raw -> score_raw
    java.lang.String vid -> vid
    int suc -> suc
    int rgn -> rgn
    java.lang.String trs -> trs
    int err -> err
    java.lang.String source -> source
com.iflytek.cloud.Version -> com.iflytek.cloud.Version:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getVersion() -> getVersion
    java.lang.String getMscVersion() -> getMscVersion
    java.lang.String getModeVersion() -> getModeVersion
com.iflytek.cloud.VoiceWakeuper -> com.iflytek.cloud.VoiceWakeuper:
    com.iflytek.cloud.VoiceWakeuper a -> a
    com.iflytek.thridparty.aI c -> c
    com.iflytek.cloud.VoiceWakeuper createWakeuper(android.content.Context,com.iflytek.cloud.InitListener) -> createWakeuper
    com.iflytek.cloud.VoiceWakeuper getWakeuper() -> getWakeuper
    int queryResource(java.lang.String,com.iflytek.cloud.RequestListener) -> queryResource
    int downloadResource(java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.util.FileDownloadListener) -> downloadResource
    int startListening(com.iflytek.cloud.WakeuperListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.WakeuperListener -> com.iflytek.cloud.WakeuperListener:
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void onVolumeChanged(int) -> onVolumeChanged
com.iflytek.cloud.WakeuperResult -> com.iflytek.cloud.WakeuperResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.a -> com.iflytek.cloud.a:
    com.iflytek.cloud.EvaluatorResult a(android.os.Parcel) -> a
    com.iflytek.cloud.EvaluatorResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.b -> com.iflytek.cloud.b:
    com.iflytek.cloud.FaceRequest$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.c -> com.iflytek.cloud.c:
    com.iflytek.cloud.IdentityResult a(android.os.Parcel) -> a
    com.iflytek.cloud.IdentityResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.d -> com.iflytek.cloud.d:
    com.iflytek.cloud.IdentityVerifier a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.e -> com.iflytek.cloud.e:
    com.iflytek.cloud.RecognizerResult a(android.os.Parcel) -> a
    com.iflytek.cloud.RecognizerResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.f -> com.iflytek.cloud.f:
    com.iflytek.cloud.SpeechRecognizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.g -> com.iflytek.cloud.g:
    com.iflytek.cloud.GrammarListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.cloud.h -> com.iflytek.cloud.h:
    com.iflytek.cloud.LexiconListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.cloud.i -> com.iflytek.cloud.i:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.cloud.SpeechRecognizer$a b -> b
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.j -> com.iflytek.cloud.j:
    com.iflytek.cloud.SpeechRecognizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.k -> com.iflytek.cloud.k:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.l -> com.iflytek.cloud.l:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    com.iflytek.cloud.SpeechSynthesizer$a b -> b
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakBegin() -> onSpeakBegin
    void onCompleted(int) -> onCompleted
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.m -> com.iflytek.cloud.m:
    com.iflytek.cloud.SpeechSynthesizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.n -> com.iflytek.cloud.n:
    com.iflytek.cloud.SpeechUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.o -> com.iflytek.cloud.o:
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.cloud.SpeechUnderstander$a b -> b
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.p -> com.iflytek.cloud.p:
    com.iflytek.cloud.SpeechUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.q -> com.iflytek.cloud.q:
    com.iflytek.cloud.TextUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.r -> com.iflytek.cloud.r:
    com.iflytek.cloud.TextUnderstander a -> a
    com.iflytek.cloud.TextUnderstander$a b -> b
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.cloud.record.PcmRecorder -> com.iflytek.cloud.record.PcmRecorder:
    short a -> a
    byte[] b -> b
    android.media.AudioRecord c -> c
    com.iflytek.cloud.record.PcmRecorder$PcmRecordListener d -> d
    com.iflytek.cloud.record.PcmRecorder$PcmRecordListener e -> e
    boolean f -> f
    int RATE16K -> RATE16K
    int READ_INTERVAL40MS -> READ_INTERVAL40MS
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    void a(short,int,int) -> a
    int a() -> a
    void stopRecord(boolean) -> stopRecord
    void startRecording(com.iflytek.cloud.record.PcmRecorder$PcmRecordListener) -> startRecording
    void run() -> run
    void finalize() -> finalize
    void b() -> b
com.iflytek.cloud.record.PcmRecorder$PcmRecordListener -> com.iflytek.cloud.record.PcmRecorder$PcmRecordListener:
    void onRecordBuffer(byte[],int,int) -> onRecordBuffer
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onRecordStarted(boolean) -> onRecordStarted
    void onRecordReleased() -> onRecordReleased
com.iflytek.cloud.record.a -> com.iflytek.cloud.record.a:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    int e -> e
    short f -> f
    int g -> g
    int h -> h
    byte[] i -> i
    java.io.RandomAccessFile j -> j
    java.lang.String k -> k
    com.iflytek.cloud.record.PcmRecorder$PcmRecordListener l -> l
    void a(short,int,int) -> a
    int a() -> a
    void stopRecord(boolean) -> stopRecord
    void startRecording(com.iflytek.cloud.record.PcmRecorder$PcmRecordListener) -> startRecording
    void run() -> run
    void finalize() -> finalize
    void b() -> b
com.iflytek.cloud.record.b -> com.iflytek.cloud.record.b:
    int a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    int d -> d
    long e -> e
    android.os.MemoryFile f -> f
    long g -> g
    int h -> h
    com.iflytek.cloud.record.b$a i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    byte[] l -> l
    int m -> m
    int n -> n
    void a(java.lang.String) -> a
    int a() -> a
    void a(java.util.ArrayList,int,int,int) -> a
    boolean b(java.lang.String) -> b
    boolean a(int) -> a
    void a(byte[]) -> a
    java.lang.String i() -> i
    int b() -> b
    void c() -> c
    int d() -> d
    com.iflytek.cloud.record.b$a e() -> e
    boolean f() -> f
    boolean g() -> g
    void a(android.media.AudioTrack,int) -> a
    void b(android.media.AudioTrack,int) -> b
    void h() -> h
    void finalize() -> finalize
    void b(int) -> b
com.iflytek.cloud.record.b$a -> com.iflytek.cloud.record.b$a:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.iflytek.cloud.record.b e -> e
com.iflytek.cloud.record.c -> com.iflytek.cloud.record.c:
    android.media.AudioTrack b -> b
    com.iflytek.cloud.record.b c -> c
    android.content.Context d -> d
    com.iflytek.cloud.record.c$b e -> e
    com.iflytek.cloud.record.c$a f -> f
    int g -> g
    int h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    java.lang.Object m -> m
    java.lang.Object n -> n
    android.media.AudioManager$OnAudioFocusChangeListener a -> a
    int o -> o
    android.os.Handler p -> p
    int a() -> a
    boolean a(int,int) -> a
    void f() -> f
    void b() -> b
    void g() -> g
    boolean c() -> c
    boolean a(com.iflytek.cloud.record.b,com.iflytek.cloud.record.c$a) -> a
    boolean d() -> d
    void e() -> e
    boolean a(com.iflytek.cloud.record.c,boolean) -> a
    com.iflytek.cloud.record.c$a a(com.iflytek.cloud.record.c) -> a
    boolean b(com.iflytek.cloud.record.c) -> b
    boolean c(com.iflytek.cloud.record.c) -> c
    android.content.Context d(com.iflytek.cloud.record.c) -> d
    boolean e(com.iflytek.cloud.record.c) -> e
    com.iflytek.cloud.record.b f(com.iflytek.cloud.record.c) -> f
    java.lang.Object g(com.iflytek.cloud.record.c) -> g
    int h(com.iflytek.cloud.record.c) -> h
    int a(com.iflytek.cloud.record.c,int) -> a
    void i(com.iflytek.cloud.record.c) -> i
    boolean a(com.iflytek.cloud.record.c,int,int) -> a
    android.os.Handler j(com.iflytek.cloud.record.c) -> j
    int b(com.iflytek.cloud.record.c,int) -> b
    android.media.AudioTrack k(com.iflytek.cloud.record.c) -> k
    int l(com.iflytek.cloud.record.c) -> l
    android.media.AudioTrack a(com.iflytek.cloud.record.c,android.media.AudioTrack) -> a
    com.iflytek.cloud.record.c$b a(com.iflytek.cloud.record.c,com.iflytek.cloud.record.c$b) -> a
    com.iflytek.cloud.record.c$a a(com.iflytek.cloud.record.c,com.iflytek.cloud.record.c$a) -> a
    int m(com.iflytek.cloud.record.c) -> m
com.iflytek.cloud.record.c$a -> com.iflytek.cloud.record.c$a:
    void a(com.iflytek.cloud.SpeechError) -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void c() -> c
com.iflytek.cloud.record.c$b -> com.iflytek.cloud.record.c$b:
    com.iflytek.cloud.record.c a -> a
    void run() -> run
com.iflytek.cloud.record.d -> com.iflytek.cloud.record.d:
    com.iflytek.cloud.record.c a -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.iflytek.cloud.record.e -> com.iflytek.cloud.record.e:
    com.iflytek.cloud.record.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.record.f -> com.iflytek.cloud.record.f:
    java.io.RandomAccessFile a -> a
    short b -> b
    int c -> c
    short d -> d
    boolean a(java.io.File,short,int,short) -> a
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(short) -> a
    int a() -> a
    void b() -> b
com.iflytek.cloud.resource.Resource -> com.iflytek.cloud.resource.Resource:
    java.util.Locale a -> a
    int TEXT_POWER_LINK -> TEXT_POWER_LINK
    int TEXT_HELP_LINK -> TEXT_HELP_LINK
    int TEXT_KNOW -> TEXT_KNOW
    int TEXT_DETAIL -> TEXT_DETAIL
    int TEXT_CANCEL -> TEXT_CANCEL
    int TEXT_STOP -> TEXT_STOP
    int TEXT_SET -> TEXT_SET
    int TEXT_MORE -> TEXT_MORE
    int TEXT_RETRY -> TEXT_RETRY
    int TEXT_AGAIN -> TEXT_AGAIN
    int TEXT_PLAYBACK -> TEXT_PLAYBACK
    int TEXT_RETRIEVE -> TEXT_RETRIEVE
    int TEXT_HELP_SMS -> TEXT_HELP_SMS
    int TEXT_HELP_RECO -> TEXT_HELP_RECO
    int TITLE_HELP -> TITLE_HELP
    int TITLE_CONNECTING -> TITLE_CONNECTING
    int TITLE_RECORDING -> TITLE_RECORDING
    int TITLE_RECOGNIZE_WAITING -> TITLE_RECOGNIZE_WAITING
    int TITLE_AUDIO_REQUEST -> TITLE_AUDIO_REQUEST
    int TITLE_ERROR -> TITLE_ERROR
    int TITLE_AUDIO_PLAYING -> TITLE_AUDIO_PLAYING
    int TITLE_DATA_UPLOAD -> TITLE_DATA_UPLOAD
    int TAG_ERROR_CODE -> TAG_ERROR_CODE
    int TAG_ERROR_UNKNOWN -> TAG_ERROR_UNKNOWN
    void setUILanguage(java.util.Locale) -> setUILanguage
    java.lang.String getLanguage() -> getLanguage
    boolean matchLanguage(java.lang.String) -> matchLanguage
    boolean a(java.lang.String) -> a
    void setTitle(int,java.lang.String) -> setTitle
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getText(int) -> getText
    void setText(int,java.lang.String) -> setText
    java.lang.String getErrorDescription(int) -> getErrorDescription
    void setErrorDescription(int,java.lang.String) -> setErrorDescription
    java.lang.String getErrorTag(int) -> getErrorTag
com.iflytek.cloud.resource.a -> com.iflytek.cloud.resource.a:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.b -> com.iflytek.cloud.resource.b:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.c -> com.iflytek.cloud.resource.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.s -> com.iflytek.cloud.s:
    com.iflytek.cloud.TextUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.t -> com.iflytek.cloud.t:
    com.iflytek.cloud.UnderstanderResult a(android.os.Parcel) -> a
    com.iflytek.cloud.UnderstanderResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.u -> com.iflytek.cloud.u:
    com.iflytek.cloud.WakeuperResult a(android.os.Parcel) -> a
    com.iflytek.cloud.WakeuperResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.ui.RecognizerDialog -> com.iflytek.cloud.ui.RecognizerDialog:
    void setListener(com.iflytek.cloud.ui.RecognizerDialogListener) -> setListener
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setUILanguage(java.util.Locale) -> setUILanguage
    void show() -> show
    void dismiss() -> dismiss
com.iflytek.cloud.ui.RecognizerDialogListener -> com.iflytek.cloud.ui.RecognizerDialogListener:
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.ui.a -> com.iflytek.cloud.ui.a:
    android.widget.LinearLayout d -> d
    com.iflytek.thridparty.aR e -> e
    android.view.animation.RotateAnimation f -> f
    com.iflytek.cloud.SpeechRecognizer g -> g
    com.iflytek.cloud.ui.RecognizerDialogListener h -> h
    long i -> i
    int a -> a
    com.iflytek.cloud.RecognizerListener j -> j
    int k -> k
    void a() -> a
    void a(com.iflytek.cloud.ui.RecognizerDialogListener) -> a
    void a(java.lang.String,java.lang.String) -> a
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(android.widget.TextView,com.iflytek.cloud.SpeechError) -> a
    void k() -> k
    void onClick(android.view.View) -> onClick
    void b() -> b
    void c() -> c
    boolean d() -> d
    int a(com.iflytek.cloud.ui.a) -> a
    com.iflytek.thridparty.aR b(com.iflytek.cloud.ui.a) -> b
    void c(com.iflytek.cloud.ui.a) -> c
    com.iflytek.cloud.ui.RecognizerDialogListener d(com.iflytek.cloud.ui.a) -> d
    boolean e(com.iflytek.cloud.ui.a) -> e
    void a(com.iflytek.cloud.ui.a,com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.ui.a$a -> com.iflytek.cloud.ui.a$a:
    java.lang.String b -> b
    com.iflytek.cloud.ui.a a -> a
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.iflytek.cloud.ui.b -> com.iflytek.cloud.ui.b:
    com.iflytek.cloud.ui.a a -> a
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.util.Accelerometer -> com.iflytek.cloud.util.Accelerometer:
    android.hardware.SensorManager a -> a
    boolean b -> b
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE c -> c
    android.hardware.SensorEventListener d -> d
    void start() -> start
    void stop() -> stop
    int getDirection() -> getDirection
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE a(com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE) -> a
com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE -> com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE:
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE Deg0 -> Deg0
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE Deg90 -> Deg90
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE Deg180 -> Deg180
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE Deg270 -> Deg270
    int value -> value
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE[] $VALUES -> $VALUES
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE[] values() -> values
    com.iflytek.cloud.util.Accelerometer$CLOCKWISE_ANGLE valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.iflytek.cloud.util.ContactManager -> com.iflytek.cloud.util.ContactManager:
    com.iflytek.cloud.util.ContactManager getManager() -> getManager
    com.iflytek.cloud.util.ContactManager createManager(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> createManager
    void destroy() -> destroy
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
com.iflytek.cloud.util.ContactManager$ContactListener -> com.iflytek.cloud.util.ContactManager$ContactListener:
    void onContactQueryFinish(java.lang.String,boolean) -> onContactQueryFinish
com.iflytek.cloud.util.FileDownloadListener -> com.iflytek.cloud.util.FileDownloadListener:
    void onStart() -> onStart
    void onProgress(int) -> onProgress
    void onCompleted(java.lang.String,com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.util.ResourceUtil -> com.iflytek.cloud.util.ResourceUtil:
    java.lang.String ENGINE_START -> ENGINE_START
    java.lang.String ENGINE_DESTROY -> ENGINE_DESTROY
    java.lang.String ASR_RES_PATH -> ASR_RES_PATH
    java.lang.String GRM_BUILD_PATH -> GRM_BUILD_PATH
    java.lang.String TTS_RES_PATH -> TTS_RES_PATH
    java.lang.String IVW_RES_PATH -> IVW_RES_PATH
    java.lang.String generateResourcePath(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> generateResourcePath
    java.lang.String a(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE -> com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE:
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE assets -> assets
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE res -> res
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE path -> path
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] a -> a
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] values() -> values
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.util.UserWords -> com.iflytek.cloud.util.UserWords:
    java.util.Hashtable a -> a
    boolean hasKey(java.lang.String) -> hasKey
    boolean putWord(java.lang.String) -> putWord
    boolean putWord(java.lang.String,java.lang.String) -> putWord
    boolean putWords(java.util.ArrayList) -> putWords
    boolean putWords(java.lang.String,java.util.ArrayList) -> putWords
    boolean a(java.util.ArrayList,java.lang.String) -> a
    boolean a(java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList getWords() -> getWords
    java.util.ArrayList getKeys() -> getKeys
    java.util.ArrayList getWords(java.lang.String) -> getWords
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.iflytek.cloud.util.VerifierUtil -> com.iflytek.cloud.util.VerifierUtil:
    java.lang.String generateNumberPassword(int) -> generateNumberPassword
    android.graphics.Bitmap ARGB2Gray(android.graphics.Bitmap) -> ARGB2Gray
    boolean a(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int getBitmapsize(android.graphics.Bitmap) -> getBitmapsize
com.iflytek.cloud.util.VolumeUtil -> com.iflytek.cloud.util.VolumeUtil:
    int computeVolume(byte[],int) -> computeVolume
com.iflytek.cloud.util.a -> com.iflytek.cloud.util.a:
    com.iflytek.cloud.util.Accelerometer a -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.iflytek.common.LaunchService -> com.iflytek.common.LaunchService:
    com.iflytek.thridparty.bf a -> a
    long b -> b
    android.content.BroadcastReceiver c -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onStart(android.content.Intent,int) -> onStart
    void onCreate() -> onCreate
    void a() -> a
    void onDestroy() -> onDestroy
    void b() -> b
    void a(com.iflytek.common.LaunchService) -> a
com.iflytek.common.a -> com.iflytek.common.a:
    com.iflytek.thridparty.bj a -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(boolean) -> a
com.iflytek.common.b -> com.iflytek.common.b:
    com.iflytek.common.LaunchService a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iflytek.common.c -> com.iflytek.common.c:
    com.iflytek.thridparty.bj a -> a
    com.iflytek.thridparty.bj a() -> a
com.iflytek.msc.MSC -> com.iflytek.msc.MSC:
    boolean a -> a
    boolean isIflyVersion() -> isIflyVersion
    boolean loadLibrary(java.lang.String) -> loadLibrary
    boolean isLoaded() -> isLoaded
    int DebugLog(boolean) -> DebugLog
    int QTTSInit(byte[]) -> QTTSInit
    char[] QTTSSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSSessionBegin
    int QTTSTextPut(char[],byte[]) -> QTTSTextPut
    byte[] QTTSAudioGet(char[],com.iflytek.msc.MSCSessionInfo) -> QTTSAudioGet
    int QTTSGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSGetParam
    char[] QTTSAudioInfo(char[]) -> QTTSAudioInfo
    int QTTSSessionEnd(char[],byte[]) -> QTTSSessionEnd
    int QTTSFini() -> QTTSFini
    int QISRInit(byte[]) -> QISRInit
    char[] QISRSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRSessionBegin
    int QISRRegisterNotify(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> QISRRegisterNotify
    int QISRBuildGrammar(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRBuildGrammar
    int QISRUpdateLexicon(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRUpdateLexicon
    int QISRGrammarActivate(char[],byte[],byte[]) -> QISRGrammarActivate
    int QISRGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRGetParam
    int QISRSetParam(char[],byte[],byte[]) -> QISRSetParam
    int QISRAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISRAudioWrite
    byte[] QISRUploadData(char[],byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QISRUploadData
    byte[] QISRGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISRGetResult
    int QISRLogEvent(char[],byte[],byte[]) -> QISRLogEvent
    int QISRSessionEnd(char[],byte[]) -> QISRSessionEnd
    int QISRFini() -> QISRFini
    int QHCRInit(byte[]) -> QHCRInit
    char[] QHCRSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRSessionBegin
    int QHCRDataWrite(char[],byte[],byte[],int,int) -> QHCRDataWrite
    byte[] QHCRGetResult(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRGetResult
    int QHCRLogEvent(char[],byte[],byte[]) -> QHCRLogEvent
    int QHCRSessionEnd(char[],byte[]) -> QHCRSessionEnd
    int QHCRFini() -> QHCRFini
    int QISVInit(byte[]) -> QISVInit
    char[] QISVSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVSessionBegin
    int QISVAudioWrite(char[],char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISVAudioWrite
    int QISVGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVGetParam
    byte[] QISVGetResult(char[],char[],com.iflytek.msc.MSCSessionInfo) -> QISVGetResult
    int QISVSessionEnd(char[],byte[]) -> QISVSessionEnd
    char[] QISVQueDelModel(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVQueDelModel
    int QISVQueDelModelRelease(char[]) -> QISVQueDelModelRelease
    int QISVFini() -> QISVFini
    char[] QMFVSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QMFVSessionBegin
    int QMFVDataWrite(char[],byte[],byte[],int,com.iflytek.msc.MSCSessionInfo) -> QMFVDataWrite
    byte[] QMFVGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QMFVGetResult
    int QMFVGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QMFVGetParam
    int QMFVSetParam(char[],byte[],byte[]) -> QMFVSetParam
    int QMFVSessionEnd(char[],byte[]) -> QMFVSessionEnd
    int QMFVRegisterNotify(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> QMFVRegisterNotify
    int QMSPLogin(byte[],byte[],byte[]) -> QMSPLogin
    int UMSPLogin(byte[],byte[],byte[],java.lang.Object) -> UMSPLogin
    int QMSPSetParam(byte[],byte[]) -> QMSPSetParam
    int QMSPGetParam(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPGetParam
    byte[] QMSPUploadData(byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPUploadData
    byte[] QMSPDownloadData(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPDownloadData
    int QMSPDownload(byte[],byte[],java.lang.Object) -> QMSPDownload
    byte[] QMSPSearch(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPSearch
    int QMSPLogOut() -> QMSPLogOut
    int QMSPRegisterNotify(java.lang.String,java.lang.String) -> QMSPRegisterNotify
    byte[] QMSPGetVersion(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPGetVersion
    int QISEInit(byte[]) -> QISEInit
    char[] QISESessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISESessionBegin
    int QISETextPut(char[],byte[],byte[]) -> QISETextPut
    int QISEAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISEAudioWrite
    byte[] QISEGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISEGetResult
    int QISEGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISEGetParam
    int QISESessionEnd(char[],byte[]) -> QISESessionEnd
    int QISEFini() -> QISEFini
    char[] QIVWSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QIVWSessionBegin
    int QIVWRegisterNotify(char[],java.lang.String,java.lang.Object) -> QIVWRegisterNotify
    int QIVWAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QIVWAudioWrite
    int QIVWSessionEnd(char[],byte[]) -> QIVWSessionEnd
    int QIVWResMerge(byte[],byte[],byte[]) -> QIVWResMerge
    int QIVWGetResInfo(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QIVWGetResInfo
    int getFileDescriptorFD(java.io.FileDescriptor) -> getFileDescriptorFD
    void QIFDInit(byte[],java.lang.Object) -> QIFDInit
    byte[] QIFDFacedetect(android.graphics.Bitmap,int,java.lang.Object) -> QIFDFacedetect
    byte[] QIFDMultitracker(byte[],int,int,int,int,int,java.lang.Object) -> QIFDMultitracker
    int QIFDFini() -> QIFDFini
    boolean doARGB2Gray(android.graphics.Bitmap,android.graphics.Bitmap) -> doARGB2Gray
com.iflytek.msc.MSCSessionInfo -> com.iflytek.msc.MSCSessionInfo:
    int errorcode -> errorcode
    int epstatues -> epstatues
    int rsltstatus -> rsltstatus
    int sesstatus -> sesstatus
    byte[] buffer -> buffer
    int buflen -> buflen
com.iflytek.speech.GrammarListener -> com.iflytek.speech.GrammarListener:
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.GrammarListener$Stub -> com.iflytek.speech.GrammarListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onBuildFinish -> TRANSACTION_onBuildFinish
    com.iflytek.speech.GrammarListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.GrammarListener$Stub$Proxy -> com.iflytek.speech.GrammarListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.ISpeechModule -> com.iflytek.speech.ISpeechModule:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean destory() -> destory
    boolean isAvailable() -> isAvailable
com.iflytek.speech.LexiconListener -> com.iflytek.speech.LexiconListener:
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.LexiconListener$Stub -> com.iflytek.speech.LexiconListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onLexiconUpdated -> TRANSACTION_onLexiconUpdated
    com.iflytek.speech.LexiconListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.LexiconListener$Stub$Proxy -> com.iflytek.speech.LexiconListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.RecognizerListener -> com.iflytek.speech.RecognizerListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerListener$Stub -> com.iflytek.speech.RecognizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.RecognizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.RecognizerListener$Stub$Proxy -> com.iflytek.speech.RecognizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerResult -> com.iflytek.speech.RecognizerResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.RecognizerResult$1 -> com.iflytek.speech.RecognizerResult$1:
    com.iflytek.speech.RecognizerResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.RecognizerResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.SpeakerVerifierAidl -> com.iflytek.speech.SpeakerVerifierAidl:
    java.lang.String TAG -> TAG
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String IVP_SENTENCE_CNT -> IVP_SENTENCE_CNT
    java.lang.String VID -> VID
    java.lang.String IVP_PARAM_CONSISTTHRESHOLD -> IVP_PARAM_CONSISTTHRESHOLD
    java.lang.String IVP_PARAM_DTW_CHECK_THRESHOLD -> IVP_PARAM_DTW_CHECK_THRESHOLD
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int identify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> identify
    int getPasswordList(android.content.Context,com.iflytek.speech.SpeakerVerifierAidl$DownloadListener,java.lang.String) -> getPasswordList
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeakerVerifierAidl$DownloadListener -> com.iflytek.speech.SpeakerVerifierAidl$DownloadListener:
    void onData(java.util.ArrayList) -> onData
    void onError(int) -> onError
com.iflytek.speech.SpeakerVerifierAidl$PassWord -> com.iflytek.speech.SpeakerVerifierAidl$PassWord:
    java.lang.String pwdt -> pwdt
    java.lang.String pwid -> pwid
    java.lang.String pwtext -> pwtext
    com.iflytek.speech.SpeakerVerifierAidl this$0 -> this$0
com.iflytek.speech.SpeechComponent -> com.iflytek.speech.SpeechComponent:
    java.lang.String mPackageName -> mPackageName
    java.util.ArrayList mEngines -> mEngines
    java.lang.String getPackageName() -> getPackageName
    java.util.ArrayList getEngines() -> getEngines
    void addEngine(java.lang.String) -> addEngine
    boolean isEngineAvaible(java.lang.String) -> isEngineAvaible
com.iflytek.speech.SpeechModuleAidl -> com.iflytek.speech.SpeechModuleAidl:
    java.lang.Object mSynLock -> mSynLock
    android.os.IInterface mService -> mService
    android.content.Context mContext -> mContext
    android.content.ServiceConnection mConnection -> mConnection
    com.iflytek.cloud.InitListener mInitListener -> mInitListener
    java.lang.String mBindAction -> mBindAction
    java.util.HashMap mParams -> mParams
    boolean userDestroy -> userDestroy
    android.os.Handler mUiHandler -> mUiHandler
    void bindService() -> bindService
    android.os.IInterface getService(android.os.IBinder) -> getService
    boolean isAvailable() -> isAvailable
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    boolean destory() -> destory
    java.lang.String getTag() -> getTag
    android.os.IInterface access$000(com.iflytek.speech.SpeechModuleAidl,android.os.IBinder) -> access$000
    com.iflytek.cloud.InitListener access$100(com.iflytek.speech.SpeechModuleAidl) -> access$100
    android.os.Handler access$200(com.iflytek.speech.SpeechModuleAidl) -> access$200
    boolean access$300(com.iflytek.speech.SpeechModuleAidl) -> access$300
    void access$400(com.iflytek.speech.SpeechModuleAidl) -> access$400
com.iflytek.speech.SpeechModuleAidl$1 -> com.iflytek.speech.SpeechModuleAidl$1:
    com.iflytek.speech.SpeechModuleAidl this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.iflytek.speech.SpeechModuleAidl$2 -> com.iflytek.speech.SpeechModuleAidl$2:
    com.iflytek.speech.SpeechModuleAidl this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.speech.SpeechRecognizerAidl -> com.iflytek.speech.SpeechRecognizerAidl:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int startListening(com.iflytek.speech.RecognizerListener) -> startListening
    int stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    int cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean destory() -> destory
    boolean isListening() -> isListening
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.speech.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.speech.LexiconListener) -> updateLexicon
    int writeAudio(byte[],int,int) -> writeAudio
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechSynthesizerAidl -> com.iflytek.speech.SpeechSynthesizerAidl:
    int synthesizeToUrl(java.lang.String,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(java.lang.String,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderAidl -> com.iflytek.speech.SpeechUnderstanderAidl:
    int startUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    int stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int writeAudio(byte[],int,int) -> writeAudio
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderListener -> com.iflytek.speech.SpeechUnderstanderListener:
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SpeechUnderstanderListener$Stub -> com.iflytek.speech.SpeechUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SpeechUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy -> com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizeToUrlListener -> com.iflytek.speech.SynthesizeToUrlListener:
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizeToUrlListener$Stub -> com.iflytek.speech.SynthesizeToUrlListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSynthesizeCompleted -> TRANSACTION_onSynthesizeCompleted
    com.iflytek.speech.SynthesizeToUrlListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy -> com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizerListener -> com.iflytek.speech.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizerListener$Stub -> com.iflytek.speech.SynthesizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSpeakBegin -> TRANSACTION_onSpeakBegin
    int TRANSACTION_onSpeakPaused -> TRANSACTION_onSpeakPaused
    int TRANSACTION_onSpeakResumed -> TRANSACTION_onSpeakResumed
    int TRANSACTION_onCompleted -> TRANSACTION_onCompleted
    int TRANSACTION_onSpeakProgress -> TRANSACTION_onSpeakProgress
    int TRANSACTION_onBufferProgress -> TRANSACTION_onBufferProgress
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SynthesizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizerListener$Stub$Proxy -> com.iflytek.speech.SynthesizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.TextUnderstanderAidl -> com.iflytek.speech.TextUnderstanderAidl:
    java.lang.String SCENE -> SCENE
    java.lang.String TEXT -> TEXT
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    int understandText(java.lang.String,com.iflytek.speech.TextUnderstanderListener) -> understandText
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.TextUnderstanderListener -> com.iflytek.speech.TextUnderstanderListener:
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.TextUnderstanderListener$Stub -> com.iflytek.speech.TextUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.TextUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.TextUnderstanderListener$Stub$Proxy -> com.iflytek.speech.TextUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.UnderstanderResult -> com.iflytek.speech.UnderstanderResult:
    java.lang.String mXml -> mXml
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.UnderstanderResult$1 -> com.iflytek.speech.UnderstanderResult$1:
    com.iflytek.speech.UnderstanderResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.UnderstanderResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.UtilityConfig -> com.iflytek.speech.UtilityConfig:
    java.lang.String COMPONENT_URL -> COMPONENT_URL
    java.lang.String COMPONENT_PKG -> COMPONENT_PKG
    java.lang.String CHANNEL_ID -> CHANNEL_ID
    java.lang.String CHANNEL_NAME -> CHANNEL_NAME
    java.lang.String SETTINGS_ACTION_MAIN -> SETTINGS_ACTION_MAIN
    java.lang.String SETTINGS_ACTION_TTS -> SETTINGS_ACTION_TTS
    java.lang.String SETTINGS_ACTION_ASR -> SETTINGS_ACTION_ASR
    java.lang.String ACTION_SPEECH_RECOGNIZER -> ACTION_SPEECH_RECOGNIZER
    java.lang.String ACTION_SPEECH_SYNTHESIZER -> ACTION_SPEECH_SYNTHESIZER
    java.lang.String ACTION_SPEECH_UNDERSTANDER -> ACTION_SPEECH_UNDERSTANDER
    java.lang.String ACTION_TEXT_UNDERSTANDER -> ACTION_TEXT_UNDERSTANDER
    java.lang.String ACTION_SPEECH_WAKEUP -> ACTION_SPEECH_WAKEUP
    java.lang.String ACTION_SPEAKER_VERIFIER -> ACTION_SPEAKER_VERIFIER
    java.lang.String KEY_CALLER_APPID -> KEY_CALLER_APPID
    java.lang.String KEY_CALLER_NAME -> KEY_CALLER_NAME
    java.lang.String KEY_CALLER_PKG_NAME -> KEY_CALLER_PKG_NAME
    java.lang.String KEY_CALLER_VER_NAME -> KEY_CALLER_VER_NAME
    java.lang.String KEY_CALLER_VER_CODE -> KEY_CALLER_VER_CODE
    java.lang.String SDK_VER_NAME -> SDK_VER_NAME
    java.lang.String METADATA_KEY_ENGINE_TYPE -> METADATA_KEY_ENGINE_TYPE
    java.util.HashMap callerHashMap -> callerHashMap
    java.lang.String KEY_REQUEST_PACKAGE -> KEY_REQUEST_PACKAGE
    java.lang.String KEY_CHANNEL_ID -> KEY_CHANNEL_ID
    java.lang.String KEY_CHANNEL_NAME -> KEY_CHANNEL_NAME
    java.lang.String getCallerInfo(android.content.Context,java.lang.String) -> getCallerInfo
    java.lang.String getComponentUrlParam(android.content.Context) -> getComponentUrlParam
    void appendHttpParam(java.lang.StringBuffer,java.lang.String,java.lang.String) -> appendHttpParam
com.iflytek.speech.VerifierListener -> com.iflytek.speech.VerifierListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierListener$Stub -> com.iflytek.speech.VerifierListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onRegister -> TRANSACTION_onRegister
    int TRANSACTION_onEnd -> TRANSACTION_onEnd
    int TRANSACTION_onCancel -> TRANSACTION_onCancel
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.VerifierListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.VerifierListener$Stub$Proxy -> com.iflytek.speech.VerifierListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierResult -> com.iflytek.speech.VerifierResult:
    java.lang.String json -> json
    java.lang.String sst -> sst
    boolean ret -> ret
    java.lang.String dcs -> dcs
    java.lang.String vid -> vid
    int suc -> suc
    int rgn -> rgn
    java.lang.String trs -> trs
    java.lang.String source -> source
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.VerifierResult$1 -> com.iflytek.speech.VerifierResult$1:
    com.iflytek.speech.VerifierResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.VerifierResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.Version -> com.iflytek.speech.Version:
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String VERSION_CODE -> VERSION_CODE
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getVersionCode() -> getVersionCode
com.iflytek.speech.VoiceWakeuperAidl -> com.iflytek.speech.VoiceWakeuperAidl:
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String IVW_WORD_ID -> IVW_WORD_ID
    java.lang.String IVW_FILES -> IVW_FILES
    java.lang.String PROVIDER_NAME -> PROVIDER_NAME
    java.lang.String ARG_RES_PROVIDER_AUTHORITY -> ARG_RES_PROVIDER_AUTHORITY
    java.lang.String PARAMS_SEPARATE -> PARAMS_SEPARATE
    java.lang.String IVP_USER_NAME -> IVP_USER_NAME
    java.lang.String IVP_RES_ID -> IVP_RES_ID
    java.lang.String IVW_AND_IVP -> IVW_AND_IVP
    java.lang.String WAKEUP_RESULT_ID -> WAKEUP_RESULT_ID
    java.lang.String WAKEUP_RESULT_SCORE -> WAKEUP_RESULT_SCORE
    java.lang.String ARG_RES_TYPE -> ARG_RES_TYPE
    int RES_FROM_ASSETS -> RES_FROM_ASSETS
    int RES_SPECIFIED -> RES_SPECIFIED
    int RES_FROM_CLIENT -> RES_FROM_CLIENT
    int startListening(com.iflytek.speech.WakeuperListener) -> startListening
    int cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean destroy() -> destroy
    boolean isListening() -> isListening
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.WakeuperListener -> com.iflytek.speech.WakeuperListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperListener$Stub -> com.iflytek.speech.WakeuperListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.WakeuperListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.WakeuperListener$Stub$Proxy -> com.iflytek.speech.WakeuperListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperResult -> com.iflytek.speech.WakeuperResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.WakeuperResult$1 -> com.iflytek.speech.WakeuperResult$1:
    com.iflytek.speech.WakeuperResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.WakeuperResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.aidl.ISpeakerVerifier -> com.iflytek.speech.aidl.ISpeakerVerifier:
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeakerVerifier$Stub -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_verify -> TRANSACTION_verify
    int TRANSACTION_register -> TRANSACTION_register
    int TRANSACTION_endSpeak -> TRANSACTION_endSpeak
    int TRANSACTION_stopSpeak -> TRANSACTION_stopSpeak
    int TRANSACTION_setParameter -> TRANSACTION_setParameter
    int TRANSACTION_getParameter -> TRANSACTION_getParameter
    com.iflytek.speech.aidl.ISpeakerVerifier asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeechRecognizer -> com.iflytek.speech.aidl.ISpeechRecognizer:
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechRecognizer$Stub -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_buildGrammar -> TRANSACTION_buildGrammar
    int TRANSACTION_updateLexicon -> TRANSACTION_updateLexicon
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechRecognizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechSynthesizer -> com.iflytek.speech.aidl.ISpeechSynthesizer:
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_synthesizeToUrl -> TRANSACTION_synthesizeToUrl
    int TRANSACTION_startSpeaking -> TRANSACTION_startSpeaking
    int TRANSACTION_pauseSpeaking -> TRANSACTION_pauseSpeaking
    int TRANSACTION_resumeSpeaking -> TRANSACTION_resumeSpeaking
    int TRANSACTION_stopSpeaking -> TRANSACTION_stopSpeaking
    int TRANSACTION_isSpeaking -> TRANSACTION_isSpeaking
    int TRANSACTION_getLocalSpeakerList -> TRANSACTION_getLocalSpeakerList
    com.iflytek.speech.aidl.ISpeechSynthesizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechUnderstander -> com.iflytek.speech.aidl.ISpeechUnderstander:
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechUnderstander$Stub -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startUnderstanding -> TRANSACTION_startUnderstanding
    int TRANSACTION_stopUnderstanding -> TRANSACTION_stopUnderstanding
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ITextUnderstander -> com.iflytek.speech.aidl.ITextUnderstander:
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.ITextUnderstander$Stub -> com.iflytek.speech.aidl.ITextUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_understandText -> TRANSACTION_understandText
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    com.iflytek.speech.aidl.ITextUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.IWakeuper -> com.iflytek.speech.aidl.IWakeuper:
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.iflytek.speech.aidl.IWakeuper$Stub -> com.iflytek.speech.aidl.IWakeuper$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_destroy -> TRANSACTION_destroy
    com.iflytek.speech.aidl.IWakeuper asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.IWakeuper$Stub$Proxy -> com.iflytek.speech.aidl.IWakeuper$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.iflytek.thridparty.A -> com.iflytek.thridparty.A:
    android.content.Context a -> a
    java.lang.Object c -> c
    com.iflytek.thridparty.w d -> d
    android.os.HandlerThread e -> e
    android.os.HandlerThread a(java.lang.String) -> a
    void b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    void cancel(boolean) -> cancel
    int getSampleRate() -> getSampleRate
    boolean destroy() -> destroy
    boolean b_() -> b_
    void finalize() -> finalize
com.iflytek.thridparty.A$a -> com.iflytek.thridparty.A$a:
    com.iflytek.cloud.SpeechListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.A a -> a
    void onBufferReceived(byte[]) -> onBufferReceived
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.SpeechListener a(com.iflytek.thridparty.A$a) -> a
com.iflytek.thridparty.B -> com.iflytek.thridparty.B:
    com.iflytek.thridparty.A$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.C -> com.iflytek.thridparty.C:
    java.lang.Object a -> a
    com.iflytek.msc.MSCSessionInfo b -> b
    void a(android.content.Context,java.lang.String,java.lang.String,com.iflytek.thridparty.w) -> a
    boolean a() -> a
    byte[] a(android.content.Context,java.lang.String,byte[],com.iflytek.thridparty.w) -> a
    byte[] a(android.content.Context,com.iflytek.thridparty.w) -> a
    byte[] a(android.content.Context,com.iflytek.thridparty.w,java.lang.String) -> a
com.iflytek.thridparty.D -> com.iflytek.thridparty.D:
    com.iflytek.cloud.SpeechListener a -> a
    com.iflytek.thridparty.C b -> b
    java.lang.String c -> c
    void a(com.iflytek.cloud.SpeechListener) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> a
    com.iflytek.cloud.SpeechError a(java.lang.String,java.lang.String) -> a
    void a(android.os.Message) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
com.iflytek.thridparty.D$a -> com.iflytek.thridparty.D$a:
    byte[] b -> b
    java.lang.String c -> c
    com.iflytek.thridparty.D a -> a
    byte[] a() -> a
    java.lang.String b() -> b
com.iflytek.thridparty.E -> com.iflytek.thridparty.E:
    java.lang.String c -> c
    com.iflytek.thridparty.M d -> d
    com.iflytek.thridparty.F e -> e
    java.util.ArrayList f -> f
    int g -> g
    int h -> h
    java.lang.StringBuilder i -> i
    boolean j -> j
    int k -> k
    int a -> a
    int b -> b
    int l -> l
    void c() -> c
    void a(java.lang.String,com.iflytek.thridparty.F) -> a
    java.lang.String p() -> p
    void a(android.os.Message) -> a
    void a() -> a
    void b() -> b
    void h() -> h
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String e() -> e
    java.lang.String f() -> f
    void i() -> i
    java.lang.String g() -> g
com.iflytek.thridparty.F -> com.iflytek.thridparty.F:
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.G -> com.iflytek.thridparty.G:
    com.iflytek.cloud.record.c j -> j
    com.iflytek.cloud.record.b k -> k
    com.iflytek.cloud.SynthesizerListener l -> l
    com.iflytek.cloud.SynthesizerListener m -> m
    com.iflytek.thridparty.G$a n -> n
    int o -> o
    boolean p -> p
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    com.iflytek.cloud.SpeechError i -> i
    com.iflytek.thridparty.F q -> q
    com.iflytek.cloud.record.c$a r -> r
    android.os.Handler s -> s
    boolean t -> t
    void a(java.lang.String,com.iflytek.thridparty.ap) -> a
    void e() -> e
    void a(com.iflytek.thridparty.G$a) -> a
    void a(java.lang.String,com.iflytek.thridparty.ap,com.iflytek.cloud.SynthesizerListener,boolean) -> a
    void a(com.iflytek.cloud.SynthesizerListener) -> a
    int f() -> f
    void g() -> g
    boolean h() -> h
    void j() -> j
    void i() -> i
    void cancel(boolean) -> cancel
    boolean destroy() -> destroy
    void a(java.lang.String,java.lang.String,com.iflytek.thridparty.ap,com.iflytek.cloud.SynthesizerListener) -> a
    boolean d() -> d
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.thridparty.G) -> a
    android.os.Handler b(com.iflytek.thridparty.G) -> b
    com.iflytek.cloud.record.b c(com.iflytek.thridparty.G) -> c
    void d(com.iflytek.thridparty.G) -> d
    com.iflytek.thridparty.w e(com.iflytek.thridparty.G) -> e
    com.iflytek.thridparty.w f(com.iflytek.thridparty.G) -> f
    com.iflytek.thridparty.G$a g(com.iflytek.thridparty.G) -> g
    com.iflytek.thridparty.w h(com.iflytek.thridparty.G) -> h
    com.iflytek.cloud.record.c i(com.iflytek.thridparty.G) -> i
    com.iflytek.cloud.SynthesizerListener j(com.iflytek.thridparty.G) -> j
    boolean k(com.iflytek.thridparty.G) -> k
    com.iflytek.thridparty.w l(com.iflytek.thridparty.G) -> l
    com.iflytek.thridparty.w m(com.iflytek.thridparty.G) -> m
    com.iflytek.thridparty.w n(com.iflytek.thridparty.G) -> n
    com.iflytek.thridparty.w o(com.iflytek.thridparty.G) -> o
    com.iflytek.thridparty.w p(com.iflytek.thridparty.G) -> p
    com.iflytek.thridparty.w q(com.iflytek.thridparty.G) -> q
    com.iflytek.thridparty.w r(com.iflytek.thridparty.G) -> r
    com.iflytek.thridparty.w s(com.iflytek.thridparty.G) -> s
    com.iflytek.thridparty.w t(com.iflytek.thridparty.G) -> t
com.iflytek.thridparty.G$a -> com.iflytek.thridparty.G$a:
    void a() -> a
com.iflytek.thridparty.H -> com.iflytek.thridparty.H:
    com.iflytek.thridparty.G a -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.I -> com.iflytek.thridparty.I:
    com.iflytek.thridparty.G a -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    void c() -> c
com.iflytek.thridparty.J -> com.iflytek.thridparty.J:
    com.iflytek.thridparty.G a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.K -> com.iflytek.thridparty.K:
    com.iflytek.thridparty.G a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.L -> com.iflytek.thridparty.L:
    android.os.Handler a -> a
    java.lang.String b -> b
    com.iflytek.thridparty.G c -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
com.iflytek.thridparty.M -> com.iflytek.thridparty.M:
    com.iflytek.msc.MSCSessionInfo c -> c
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    byte[] a() -> a
    int b() -> b
    java.lang.String c() -> c
    int b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    boolean d() -> d
    java.lang.String e() -> e
com.iflytek.thridparty.N -> com.iflytek.thridparty.N:
    java.lang.String[][] a -> a
    java.lang.String[][] b -> b
    com.iflytek.thridparty.ap c -> c
    boolean d -> d
    com.iflytek.thridparty.ap a(android.content.Context) -> a
    void e(android.content.Context) -> e
    void a(com.iflytek.thridparty.ap,android.content.Context) -> a
    com.iflytek.thridparty.ap b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String a(java.lang.String) -> a
com.iflytek.thridparty.O -> com.iflytek.thridparty.O:
    android.content.SharedPreferences b -> b
    android.content.Context c -> c
    com.iflytek.thridparty.O a -> a
    boolean d -> d
    long e -> e
    com.iflytek.thridparty.O c(android.content.Context) -> c
    com.iflytek.thridparty.O a(android.content.Context) -> a
    void a(java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void a(android.location.Location) -> a
    void a(java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    int b(java.lang.String,int) -> b
    float b(java.lang.String) -> b
    boolean b(android.content.Context) -> b
com.iflytek.thridparty.P -> com.iflytek.thridparty.P:
    java.util.HashMap a -> a
    void a(java.lang.String,byte[]) -> a
    void a() -> a
com.iflytek.thridparty.Q -> com.iflytek.thridparty.Q:
    android.util.DisplayMetrics a -> a
    java.lang.String a(long) -> a
    byte[] a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    boolean a(java.lang.String,org.json.JSONObject,org.json.JSONObject) -> a
    boolean b(java.lang.String,org.json.JSONObject,org.json.JSONObject) -> b
com.iflytek.thridparty.R -> com.iflytek.thridparty.R:
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.io.File) -> a
com.iflytek.thridparty.S -> com.iflytek.thridparty.S:
    com.iflytek.thridparty.S b -> b
    java.util.HashMap c -> c
    java.util.HashMap d -> d
    java.util.HashMap e -> e
    com.iflytek.thridparty.af f -> f
    android.content.Context g -> g
    com.iflytek.thridparty.O h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.Object a -> a
    com.iflytek.thridparty.ag l -> l
    com.iflytek.thridparty.S a(android.content.Context) -> a
    int a(java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.util.FileDownloadListener) -> a
    long a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap a(com.iflytek.thridparty.S) -> a
    java.util.HashMap b(com.iflytek.thridparty.S) -> b
    com.iflytek.thridparty.O c(com.iflytek.thridparty.S) -> c
    java.util.HashMap d(com.iflytek.thridparty.S) -> d
com.iflytek.thridparty.T -> com.iflytek.thridparty.T:
    com.iflytek.thridparty.S a -> a
    void a(long,java.lang.String,java.lang.String,java.lang.String,com.iflytek.thridparty.af) -> a
    void a(long,int,com.iflytek.thridparty.af) -> a
    void a(java.lang.String,com.iflytek.thridparty.af) -> a
    void a(int,com.iflytek.thridparty.af) -> a
com.iflytek.thridparty.U -> com.iflytek.thridparty.U:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String) -> a
    boolean a(android.os.MemoryFile,long,java.lang.String) -> a
    boolean a(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String) -> a
    boolean a(java.lang.String,int) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    void b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
com.iflytek.thridparty.V -> com.iflytek.thridparty.V:
    int a -> a
    int b -> b
    boolean a(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.thridparty.W -> com.iflytek.thridparty.W:
    int a -> a
    boolean a(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.thridparty.X -> com.iflytek.thridparty.X:
    int a -> a
    com.iflytek.thridparty.X$a b -> b
    boolean c -> c
    java.net.URL d -> d
    java.util.ArrayList e -> e
    java.lang.String f -> f
    java.lang.Object g -> g
    int h -> h
    void a(int) -> a
    void a(java.lang.String,java.lang.String,byte[]) -> a
    void a(java.lang.String,java.lang.String,byte[],java.lang.String) -> a
    void b(int) -> b
    void a(com.iflytek.thridparty.X$a) -> a
    java.net.URL a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void run() -> run
    byte[] a(java.io.InputStream) -> a
    void c() -> c
    void b(byte[]) -> b
    void a(byte[]) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    int d() -> d
    void b() -> b
com.iflytek.thridparty.X$a -> com.iflytek.thridparty.X$a:
    void a(com.iflytek.thridparty.X,byte[]) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.Y -> com.iflytek.thridparty.Y:
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String a(android.net.NetworkInfo) -> a
    java.lang.String b(android.net.NetworkInfo) -> b
    boolean c(android.content.Context) -> c
    boolean a(android.content.Context,java.lang.String) -> a
com.iflytek.thridparty.Z -> com.iflytek.thridparty.Z:
    boolean a() -> a
    java.lang.String b() -> b
    long a(java.lang.String) -> a
    long a(android.content.Context) -> a
com.iflytek.thridparty.a -> com.iflytek.thridparty.a:
    char[] a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(byte[]) -> a
    java.io.File b(android.content.Context) -> b
com.iflytek.thridparty.aA -> com.iflytek.thridparty.aA:
    com.iflytek.thridparty.az$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aB -> com.iflytek.thridparty.aB:
    boolean f -> f
    void b(java.lang.String) -> b
    int a(com.iflytek.cloud.RecognizerListener) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean f() -> f
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> a
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> a
    com.iflytek.thridparty.w a(com.iflytek.thridparty.aB) -> a
    com.iflytek.thridparty.w b(com.iflytek.thridparty.aB) -> b
    com.iflytek.thridparty.w c(com.iflytek.thridparty.aB) -> c
    com.iflytek.thridparty.w d(com.iflytek.thridparty.aB) -> d
    com.iflytek.thridparty.w e(com.iflytek.thridparty.aB) -> e
    android.content.Context f(com.iflytek.thridparty.aB) -> f
    boolean g(com.iflytek.thridparty.aB) -> g
com.iflytek.thridparty.aB$a -> com.iflytek.thridparty.aB$a:
    com.iflytek.cloud.GrammarListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.aB a -> a
    void onBuildFinish(java.lang.String,com.iflytek.cloud.SpeechError) -> onBuildFinish
    com.iflytek.cloud.GrammarListener a(com.iflytek.thridparty.aB$a) -> a
com.iflytek.thridparty.aB$b -> com.iflytek.thridparty.aB$b:
    com.iflytek.cloud.LexiconListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.aB a -> a
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
    com.iflytek.cloud.LexiconListener a(com.iflytek.thridparty.aB$b) -> a
com.iflytek.thridparty.aB$c -> com.iflytek.thridparty.aB$c:
    com.iflytek.cloud.RecognizerListener b -> b
    boolean c -> c
    android.os.Handler d -> d
    com.iflytek.thridparty.aB a -> a
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void a() -> a
    com.iflytek.cloud.RecognizerListener a(com.iflytek.thridparty.aB$c) -> a
    boolean b(com.iflytek.thridparty.aB$c) -> b
    boolean a(com.iflytek.thridparty.aB$c,boolean) -> a
com.iflytek.thridparty.aC -> com.iflytek.thridparty.aC:
    com.iflytek.thridparty.aB$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aD -> com.iflytek.thridparty.aD:
    com.iflytek.thridparty.aB$b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aE -> com.iflytek.thridparty.aE:
    com.iflytek.thridparty.aB$c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aF -> com.iflytek.thridparty.aF:
    android.content.Context f -> f
    com.iflytek.thridparty.G g -> g
    com.iflytek.thridparty.G h -> h
    int a(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void a(java.lang.String,com.iflytek.cloud.SynthesizerListener,java.lang.String) -> a
    void a() -> a
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void e() -> e
    void f() -> f
    boolean g() -> g
    int h() -> h
    void a(boolean) -> a
    boolean destroy() -> destroy
com.iflytek.thridparty.aG -> com.iflytek.thridparty.aG:
    com.iflytek.thridparty.aG a -> a
    com.iflytek.thridparty.aB b -> b
    int a(com.iflytek.cloud.SpeechUnderstanderListener) -> a
    boolean a() -> a
    int a(byte[],int,int) -> a
    void b() -> b
    void a(boolean) -> a
    boolean a(com.iflytek.thridparty.ap) -> a
    boolean c() -> c
com.iflytek.thridparty.aG$a -> com.iflytek.thridparty.aG$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.thridparty.aG a -> a
    void onEndOfSpeech() -> onEndOfSpeech
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
com.iflytek.thridparty.aH -> com.iflytek.thridparty.aH:
    int a(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> a
    boolean e() -> e
    void cancel(boolean) -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.thridparty.aH$a -> com.iflytek.thridparty.aH$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.thridparty.aH a -> a
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,android.os.Bundle) -> onEvent
com.iflytek.thridparty.aI -> com.iflytek.thridparty.aI:
    boolean f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    java.lang.String l -> l
    com.iflytek.thridparty.s m -> m
    com.iflytek.thridparty.O n -> n
    int a(java.lang.String,boolean,com.iflytek.cloud.RequestListener) -> a
    int a(java.lang.String,java.lang.String,java.lang.String,boolean,com.iflytek.cloud.util.FileDownloadListener) -> a
    int a(com.iflytek.cloud.WakeuperListener) -> a
    int b(com.iflytek.cloud.WakeuperListener) -> b
    void a(boolean) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean destroy() -> destroy
    boolean f() -> f
    void b(boolean) -> b
    boolean g() -> g
    com.iflytek.thridparty.ap a(com.iflytek.thridparty.aI) -> a
    android.content.Context b(com.iflytek.thridparty.aI) -> b
    android.content.Context c(com.iflytek.thridparty.aI) -> c
    com.iflytek.thridparty.O d(com.iflytek.thridparty.aI) -> d
    void a(com.iflytek.thridparty.aI,boolean) -> a
    com.iflytek.thridparty.ap e(com.iflytek.thridparty.aI) -> e
    boolean f(com.iflytek.thridparty.aI) -> f
    android.content.Context g(com.iflytek.thridparty.aI) -> g
    boolean h(com.iflytek.thridparty.aI) -> h
com.iflytek.thridparty.aI$a -> com.iflytek.thridparty.aI$a:
    com.iflytek.cloud.util.FileDownloadListener b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    boolean g -> g
    android.os.Handler h -> h
    com.iflytek.thridparty.aI a -> a
    void onStart() -> onStart
    void onProgress(int) -> onProgress
    void onCompleted(java.lang.String,com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.util.FileDownloadListener a(com.iflytek.thridparty.aI$a) -> a
com.iflytek.thridparty.aI$b -> com.iflytek.thridparty.aI$b:
    com.iflytek.cloud.WakeuperListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.aI a -> a
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void a() -> a
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void onVolumeChanged(int) -> onVolumeChanged
    com.iflytek.cloud.WakeuperListener a(com.iflytek.thridparty.aI$b) -> a
com.iflytek.thridparty.aI$c -> com.iflytek.thridparty.aI$c:
    com.iflytek.cloud.RequestListener b -> b
    int c -> c
    int d -> d
    int e -> e
    boolean f -> f
    android.os.Handler g -> g
    com.iflytek.thridparty.aI a -> a
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onBufferReceived(byte[]) -> onBufferReceived
    com.iflytek.cloud.RequestListener a(com.iflytek.thridparty.aI$c) -> a
com.iflytek.thridparty.aJ -> com.iflytek.thridparty.aJ:
    com.iflytek.thridparty.aI$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aK -> com.iflytek.thridparty.aK:
    com.iflytek.thridparty.aI$b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aL -> com.iflytek.thridparty.aL:
    com.iflytek.thridparty.aI$c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.aM -> com.iflytek.thridparty.aM:
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int[] a() -> a
    int[] b() -> b
    java.io.InputStream b(android.content.Context,java.lang.String) -> b
    android.view.View a(android.content.Context,java.lang.String,android.view.ViewGroup) -> a
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable c(android.content.Context,java.lang.String) -> c
com.iflytek.thridparty.aN -> com.iflytek.thridparty.aN:
    int a -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String) -> a
com.iflytek.thridparty.aO -> com.iflytek.thridparty.aO:
    com.iflytek.thridparty.aQ a -> a
    com.iflytek.thridparty.aO$a b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void show() -> show
    void dismiss() -> dismiss
    boolean destroy() -> destroy
com.iflytek.thridparty.aO$a -> com.iflytek.thridparty.aO$a:
    void a() -> a
com.iflytek.thridparty.aP -> com.iflytek.thridparty.aP:
    com.iflytek.thridparty.aO a -> a
    void a() -> a
com.iflytek.thridparty.aQ -> com.iflytek.thridparty.aQ:
    com.iflytek.thridparty.aO$a a -> a
    boolean b -> b
    boolean c -> c
    void e() -> e
    void a(com.iflytek.thridparty.aO$a) -> a
    void f() -> f
    void b() -> b
    void c() -> c
    boolean a(android.view.ViewGroup) -> a
    boolean d() -> d
com.iflytek.thridparty.aR -> com.iflytek.thridparty.aR:
    android.graphics.drawable.Drawable b -> b
    android.graphics.drawable.Drawable c -> c
    android.graphics.PaintFlagsDrawFilter d -> d
    android.graphics.Path a -> a
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void finalize() -> finalize
    void onMeasure(int,int) -> onMeasure
com.iflytek.thridparty.aS -> com.iflytek.thridparty.aS:
    com.iflytek.thridparty.bb b -> b
    android.content.Context a -> a
    java.lang.String[] c -> c
    java.lang.String[] d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.List g -> g
    java.util.HashMap h -> h
    java.lang.String[] a() -> a
    void b() -> b
com.iflytek.thridparty.aT -> com.iflytek.thridparty.aT:
    com.iflytek.thridparty.aT a -> a
    android.content.Context b -> b
    int c -> c
    com.iflytek.thridparty.bb d -> d
    com.iflytek.thridparty.aS e -> e
    com.iflytek.thridparty.aT$a f -> f
    android.os.HandlerThread g -> g
    com.iflytek.cloud.util.ContactManager$ContactListener h -> h
    android.os.Handler i -> i
    long j -> j
    com.iflytek.thridparty.aT a() -> a
    com.iflytek.thridparty.aT a(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> a
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
    void d() -> d
    void b() -> b
    void c() -> c
    void a(com.iflytek.thridparty.aT) -> a
    long b(com.iflytek.thridparty.aT) -> b
    long a(com.iflytek.thridparty.aT,long) -> a
com.iflytek.thridparty.aT$a -> com.iflytek.thridparty.aT$a:
    com.iflytek.thridparty.aT a -> a
    void onChange(boolean) -> onChange
com.iflytek.thridparty.aU -> com.iflytek.thridparty.aU:
    com.iflytek.thridparty.aT a -> a
    void run() -> run
com.iflytek.thridparty.aV -> com.iflytek.thridparty.aV:
    java.lang.String a(java.lang.String) -> a
    int a(java.lang.String,java.lang.String,boolean) -> a
com.iflytek.thridparty.aW -> com.iflytek.thridparty.aW:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String[],char) -> a
com.iflytek.thridparty.aX -> com.iflytek.thridparty.aX:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String a(com.iflytek.thridparty.aX,java.lang.String) -> a
    java.lang.String b(com.iflytek.thridparty.aX,java.lang.String) -> b
    java.lang.String c(com.iflytek.thridparty.aX,java.lang.String) -> c
    java.lang.String d(com.iflytek.thridparty.aX,java.lang.String) -> d
    java.lang.String e(com.iflytek.thridparty.aX,java.lang.String) -> e
    java.lang.String f(com.iflytek.thridparty.aX,java.lang.String) -> f
    java.lang.String g(com.iflytek.thridparty.aX,java.lang.String) -> g
com.iflytek.thridparty.aY -> com.iflytek.thridparty.aY:
    com.iflytek.thridparty.aX a(android.os.Parcel) -> a
    com.iflytek.thridparty.aX[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.thridparty.aZ -> com.iflytek.thridparty.aZ:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.thridparty.aa -> com.iflytek.thridparty.aa:
    boolean a -> a
    java.util.regex.Pattern b -> b
    java.lang.String c -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    void d(android.content.Context,java.lang.String,java.lang.String) -> d
    void a(java.io.File,java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean a(int) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.iflytek.thridparty.ab -> com.iflytek.thridparty.ab:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.iflytek.thridparty.ac -> com.iflytek.thridparty.ac:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.iflytek.thridparty.ad -> com.iflytek.thridparty.ad:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.iflytek.thridparty.ae -> com.iflytek.thridparty.ae:
    int a -> a
    com.iflytek.thridparty.ah b -> b
    boolean c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    java.lang.String j -> j
    long k -> k
    byte[] l -> l
    java.io.File m -> m
    org.apache.http.client.methods.HttpRequestBase n -> n
    org.apache.http.client.HttpClient o -> o
    org.apache.http.HttpHost p -> p
    org.apache.http.auth.Credentials q -> q
    void a(java.lang.String,long,java.lang.String,int) -> a
    void a() -> a
    void b() -> b
    int c() -> c
    int d() -> d
    java.lang.String a(java.lang.String) -> a
    boolean e() -> e
    void run() -> run
com.iflytek.thridparty.af -> com.iflytek.thridparty.af:
    java.util.regex.Pattern a -> a
    java.util.Random b -> b
    long c -> c
    int d -> d
    com.iflytek.thridparty.ag e -> e
    boolean f -> f
    com.iflytek.thridparty.ae g -> g
    long h -> h
    long i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.io.FileOutputStream o -> o
    long p -> p
    long q -> q
    long r -> r
    android.content.Context s -> s
    void a(com.iflytek.thridparty.ag) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    void a() -> a
    long b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String[] a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.lang.String,java.lang.String) -> b
    void e() -> e
    int a(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(byte[],int) -> a
    void c() -> c
    void a(int) -> a
    void d() -> d
com.iflytek.thridparty.ag -> com.iflytek.thridparty.ag:
    void a(long,java.lang.String,java.lang.String,java.lang.String,com.iflytek.thridparty.af) -> a
    void a(long,int,com.iflytek.thridparty.af) -> a
    void a(java.lang.String,com.iflytek.thridparty.af) -> a
    void a(int,com.iflytek.thridparty.af) -> a
com.iflytek.thridparty.ah -> com.iflytek.thridparty.ah:
    int a(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(byte[],int) -> a
    void c() -> c
    void a(int) -> a
    void d() -> d
com.iflytek.thridparty.ai -> com.iflytek.thridparty.ai:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.String) -> c
    void b(java.lang.Throwable) -> b
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    void a() -> a
com.iflytek.thridparty.aj -> com.iflytek.thridparty.aj:
    java.util.LinkedHashMap a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    void a(java.lang.String,java.lang.String) -> a
com.iflytek.thridparty.ak -> com.iflytek.thridparty.ak:
    com.iflytek.thridparty.ak a -> a
    android.content.Context b -> b
    android.content.SharedPreferences c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    long i -> i
    long j -> j
    long k -> k
    long l -> l
    long m -> m
    long n -> n
    com.iflytek.thridparty.X$a o -> o
    com.iflytek.thridparty.X$a p -> p
    com.iflytek.thridparty.ak a(android.content.Context) -> a
    void a() -> a
    void b() -> b
    boolean d() -> d
    void e() -> e
    boolean f() -> f
    void g() -> g
    org.json.JSONArray h() -> h
    org.json.JSONArray i() -> i
    org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    org.json.JSONObject a(boolean,com.iflytek.thridparty.ap,java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.iflytek.thridparty.ak) -> a
    void b(com.iflytek.thridparty.ak) -> b
    boolean a(com.iflytek.thridparty.ak,boolean) -> a
    long a(com.iflytek.thridparty.ak,long) -> a
    long b(com.iflytek.thridparty.ak,long) -> b
    long c(com.iflytek.thridparty.ak,long) -> c
    android.content.SharedPreferences c() -> c
    boolean c(com.iflytek.thridparty.ak) -> c
    long d(com.iflytek.thridparty.ak) -> d
    long e(com.iflytek.thridparty.ak) -> e
    long f(com.iflytek.thridparty.ak) -> f
    boolean b(com.iflytek.thridparty.ak,boolean) -> b
    boolean c(com.iflytek.thridparty.ak,boolean) -> c
com.iflytek.thridparty.al -> com.iflytek.thridparty.al:
    com.iflytek.thridparty.ak a -> a
    void run() -> run
com.iflytek.thridparty.am -> com.iflytek.thridparty.am:
    com.iflytek.thridparty.ak a -> a
    void run() -> run
com.iflytek.thridparty.an -> com.iflytek.thridparty.an:
    com.iflytek.thridparty.ak a -> a
    void a(com.iflytek.thridparty.X,byte[]) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.ao -> com.iflytek.thridparty.ao:
    com.iflytek.thridparty.ak a -> a
    void a(com.iflytek.thridparty.X,byte[]) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.ap -> com.iflytek.thridparty.ap:
    java.util.HashMap a -> a
    void a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.iflytek.thridparty.ap b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(com.iflytek.thridparty.ap,java.lang.String) -> a
    java.util.HashMap c() -> c
    void a(com.iflytek.thridparty.ap) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.Boolean c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String toString() -> toString
    java.lang.String e(java.lang.String) -> e
    java.lang.String b(java.lang.String,java.lang.String) -> b
    int a(java.lang.String,int) -> a
    boolean a(java.lang.String,boolean) -> a
    void a(java.lang.String[][]) -> a
    void d() -> d
    java.lang.String f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    java.lang.Object clone() -> clone
com.iflytek.thridparty.aq -> com.iflytek.thridparty.aq:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[][] c -> c
com.iflytek.thridparty.ar -> com.iflytek.thridparty.ar:
    java.lang.String a -> a
    java.lang.String a(android.content.Context,com.iflytek.thridparty.w) -> a
    void a(com.iflytek.thridparty.ap) -> a
    void a(android.content.Context,com.iflytek.thridparty.ap) -> a
    void b(android.content.Context,com.iflytek.thridparty.ap) -> b
    java.lang.String a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    java.lang.String b(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> b
    java.lang.String b(android.content.Context,com.iflytek.thridparty.w) -> b
    java.lang.String c(android.content.Context,com.iflytek.thridparty.ap) -> c
    java.lang.String d(android.content.Context,com.iflytek.thridparty.ap) -> d
    java.lang.String c(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> c
    java.lang.String c(android.content.Context,com.iflytek.thridparty.w) -> c
    java.lang.String d(android.content.Context,com.iflytek.thridparty.w) -> d
    java.lang.String e(android.content.Context,com.iflytek.thridparty.w) -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String a() -> a
    boolean a(java.lang.String) -> a
    void b(com.iflytek.thridparty.ap) -> b
com.iflytek.thridparty.as -> com.iflytek.thridparty.as:
    boolean a -> a
    com.iflytek.msc.MSCSessionInfo b -> b
    void a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
    java.lang.String b(android.graphics.Bitmap) -> b
    java.lang.String a(byte[],int,int,int,int) -> a
    java.lang.String a(byte[],com.iflytek.msc.MSCSessionInfo) -> a
    void a() -> a
com.iflytek.thridparty.at -> com.iflytek.thridparty.at:
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    com.iflytek.thridparty.X f -> f
    com.iflytek.cloud.RequestListener g -> g
    com.iflytek.thridparty.X$a a -> a
    int a(byte[],com.iflytek.cloud.RequestListener) -> a
    void a() -> a
    com.iflytek.cloud.RequestListener a(com.iflytek.thridparty.at) -> a
com.iflytek.thridparty.au -> com.iflytek.thridparty.au:
    com.iflytek.thridparty.at a -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(com.iflytek.thridparty.X,byte[]) -> a
com.iflytek.thridparty.av -> com.iflytek.thridparty.av:
    boolean f -> f
    void b(java.lang.String) -> b
    int a(com.iflytek.cloud.IdentityListener) -> a
    int a(java.lang.String,java.lang.String,byte[],int,int) -> a
    void c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.IdentityListener) -> a
    void cancel(boolean) -> cancel
    boolean e() -> e
    com.iflytek.thridparty.w a(com.iflytek.thridparty.av) -> a
    android.content.Context b(com.iflytek.thridparty.av) -> b
    boolean c(com.iflytek.thridparty.av) -> c
com.iflytek.thridparty.av$a -> com.iflytek.thridparty.av$a:
    com.iflytek.cloud.IdentityListener b -> b
    boolean c -> c
    android.os.Handler d -> d
    com.iflytek.thridparty.av a -> a
    void onResult(com.iflytek.cloud.IdentityResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void a() -> a
    com.iflytek.cloud.IdentityListener a(com.iflytek.thridparty.av$a) -> a
    boolean b(com.iflytek.thridparty.av$a) -> b
    boolean a(com.iflytek.thridparty.av$a,boolean) -> a
com.iflytek.thridparty.aw -> com.iflytek.thridparty.aw:
    com.iflytek.thridparty.av$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.ax -> com.iflytek.thridparty.ax:
    boolean f -> f
    int a(com.iflytek.cloud.VerifierListener) -> a
    void e() -> e
    void a(com.iflytek.cloud.SpeechListener) -> a
    java.lang.String a(int) -> a
    int a(byte[],int,int) -> a
    boolean f() -> f
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.SpeechListener) -> a
    com.iflytek.thridparty.w a(com.iflytek.thridparty.ax) -> a
    com.iflytek.thridparty.w b(com.iflytek.thridparty.ax) -> b
    com.iflytek.thridparty.w c(com.iflytek.thridparty.ax) -> c
    com.iflytek.thridparty.w d(com.iflytek.thridparty.ax) -> d
    com.iflytek.thridparty.w e(com.iflytek.thridparty.ax) -> e
    android.content.Context f(com.iflytek.thridparty.ax) -> f
    boolean g(com.iflytek.thridparty.ax) -> g
com.iflytek.thridparty.ax$a -> com.iflytek.thridparty.ax$a:
    com.iflytek.cloud.VerifierListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.ax a -> a
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.cloud.VerifierResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void a() -> a
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.VerifierListener a(com.iflytek.thridparty.ax$a) -> a
com.iflytek.thridparty.ay -> com.iflytek.thridparty.ay:
    com.iflytek.thridparty.ax$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.az -> com.iflytek.thridparty.az:
    boolean f -> f
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.EvaluatorListener) -> a
    int a(byte[],java.lang.String,com.iflytek.cloud.EvaluatorListener) -> a
    boolean a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean b_() -> b_
    boolean f() -> f
    com.iflytek.thridparty.w a(com.iflytek.thridparty.az) -> a
    com.iflytek.thridparty.w b(com.iflytek.thridparty.az) -> b
    com.iflytek.thridparty.w c(com.iflytek.thridparty.az) -> c
    com.iflytek.thridparty.w d(com.iflytek.thridparty.az) -> d
    com.iflytek.thridparty.w e(com.iflytek.thridparty.az) -> e
    android.content.Context f(com.iflytek.thridparty.az) -> f
    boolean g(com.iflytek.thridparty.az) -> g
com.iflytek.thridparty.az$a -> com.iflytek.thridparty.az$a:
    com.iflytek.cloud.EvaluatorListener b -> b
    android.os.Handler c -> c
    com.iflytek.thridparty.az a -> a
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.EvaluatorResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void a() -> a
    com.iflytek.cloud.EvaluatorListener a(com.iflytek.thridparty.az$a) -> a
com.iflytek.thridparty.b -> com.iflytek.thridparty.b:
    java.lang.String b -> b
    boolean a -> a
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    long o -> o
    java.lang.String p -> p
    java.lang.Object q -> q
    java.lang.Object r -> r
    java.lang.Object s -> s
    boolean t -> t
    boolean u -> u
    java.lang.String v -> v
    java.util.concurrent.ExecutorService w -> w
    void a(android.content.Context,boolean) -> a
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void h(android.content.Context,java.lang.String,java.lang.String) -> h
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    void d(android.content.Context,java.lang.String,java.lang.String) -> d
    boolean a(android.content.SharedPreferences) -> a
    boolean j(android.content.Context) -> j
    java.lang.String a(android.content.Context,java.lang.String,android.content.SharedPreferences) -> a
    java.lang.String i(android.content.Context,java.lang.String,java.lang.String) -> i
    android.content.SharedPreferences k(android.content.Context) -> k
    android.content.SharedPreferences l(android.content.Context) -> l
    android.content.SharedPreferences a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    android.content.SharedPreferences c(android.content.Context) -> c
    org.json.JSONObject d(android.content.Context) -> d
    boolean a(android.content.Context,java.lang.String) -> a
    boolean e(android.content.Context,java.lang.String,java.lang.String) -> e
    boolean f(android.content.Context,java.lang.String,java.lang.String) -> f
    boolean b(android.content.Context,java.lang.String) -> b
    void e(android.content.Context) -> e
    boolean c(android.content.Context,java.lang.String) -> c
    int a(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    boolean a(android.content.Context,android.content.SharedPreferences,boolean) -> a
    boolean a(android.content.Context,android.content.SharedPreferences) -> a
    boolean b(android.content.Context,android.content.SharedPreferences) -> b
    java.lang.String g(android.content.Context,java.lang.String) -> g
    void f(android.content.Context) -> f
    void b(android.content.Context,boolean) -> b
    boolean a(android.content.Context,java.lang.String,int) -> a
    java.lang.String h(android.content.Context,java.lang.String) -> h
    void i(android.content.Context,java.lang.String) -> i
    long m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    void j(android.content.Context,java.lang.String) -> j
    void a(android.content.Context,java.lang.String,long) -> a
    void g(android.content.Context) -> g
    boolean a(android.content.Context,int) -> a
    boolean o(android.content.Context) -> o
    void b(android.content.Context,int) -> b
    void d(android.content.Context,java.lang.String) -> d
    boolean e(android.content.Context,java.lang.String) -> e
    void f(android.content.Context,java.lang.String) -> f
    void g(android.content.Context,java.lang.String,java.lang.String) -> g
com.iflytek.thridparty.ba -> com.iflytek.thridparty.ba:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.thridparty.bb -> com.iflytek.thridparty.bb:
    java.lang.String[] a -> a
    android.content.Context b -> b
    java.lang.String[] c -> c
    java.lang.String[] b() -> b
    java.lang.String c() -> c
    java.util.HashMap d() -> d
    java.util.List e() -> e
    android.net.Uri a() -> a
    void a(android.content.Context) -> a
com.iflytek.thridparty.bc -> com.iflytek.thridparty.bc:
    java.lang.String b -> b
    com.iflytek.thridparty.bd c -> c
    boolean a -> a
    void run() -> run
    java.lang.String a(byte[]) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
com.iflytek.thridparty.bd -> com.iflytek.thridparty.bd:
    void a(java.lang.String,int) -> a
com.iflytek.thridparty.be -> com.iflytek.thridparty.be:
    com.iflytek.thridparty.bf a -> a
    int b -> b
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void c(android.content.Context) -> c
    void a(android.content.Context,android.content.pm.ResolveInfo) -> a
    void d(android.content.Context) -> d
    void b(android.content.Context) -> b
com.iflytek.thridparty.bf -> com.iflytek.thridparty.bf:
    com.iflytek.thridparty.bf a -> a
    com.iflytek.thridparty.bn b -> b
    com.iflytek.thridparty.bc c -> c
    android.content.Context d -> d
    com.iflytek.thridparty.bg e -> e
    com.iflytek.thridparty.bk f -> f
    com.iflytek.thridparty.bd g -> g
    com.iflytek.thridparty.bf a(android.content.Context) -> a
    void a() -> a
    void a(long) -> a
    boolean b() -> b
    boolean a(java.lang.String) -> a
    long c() -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,int) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    void a(com.iflytek.thridparty.bf,java.lang.String,int) -> a
com.iflytek.thridparty.bg -> com.iflytek.thridparty.bg:
    long a -> a
    long b -> b
    java.lang.String[] c -> c
    long d -> d
    long e -> e
    java.lang.String f -> f
    com.iflytek.thridparty.bn g -> g
    long a() -> a
    long b() -> b
    java.lang.String[] c() -> c
    long d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    void a(long) -> a
    void b(long) -> b
    void a(java.lang.String[]) -> a
    void c(long) -> c
    void d(long) -> d
    void a(java.lang.String) -> a
com.iflytek.thridparty.bh -> com.iflytek.thridparty.bh:
    android.content.Context a -> a
    void run() -> run
com.iflytek.thridparty.bi -> com.iflytek.thridparty.bi:
    com.iflytek.thridparty.bf a -> a
    void a(java.lang.String,int) -> a
com.iflytek.thridparty.bj -> com.iflytek.thridparty.bj:
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
com.iflytek.thridparty.bk -> com.iflytek.thridparty.bk:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.telephony.TelephonyManager e -> e
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
com.iflytek.thridparty.bl -> com.iflytek.thridparty.bl:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.iflytek.thridparty.bm -> com.iflytek.thridparty.bm:
    boolean a -> a
    void a(boolean) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    int b(java.lang.String,java.lang.String) -> b
    int b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(long) -> a
com.iflytek.thridparty.bn -> com.iflytek.thridparty.bn:
    android.content.SharedPreferences a -> a
    void a(java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String) -> a
    long b(java.lang.String,long) -> b
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.iflytek.thridparty.bo -> com.iflytek.thridparty.bo:
    java.util.concurrent.BlockingQueue b -> b
    java.util.concurrent.ThreadFactory c -> c
    java.util.concurrent.ExecutorService a -> a
com.iflytek.thridparty.bp -> com.iflytek.thridparty.bp:
    java.util.concurrent.atomic.AtomicInteger a -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.iflytek.thridparty.bq -> com.iflytek.thridparty.bq:
    boolean f -> f
    java.lang.String g -> g
    byte[] h -> h
    java.lang.String i -> i
    android.content.Context j -> j
    boolean k -> k
    int l -> l
    int a -> a
    int m -> m
    int n -> n
    int b -> b
    int o -> o
    int p -> p
    int q -> q
    int c -> c
    int d -> d
    int e -> e
    int r -> r
    java.lang.Object s -> s
    java.lang.String[] t -> t
    java.lang.Object u -> u
    boolean v -> v
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    void a() -> a
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    com.iflytek.thridparty.bq d() -> d
    void a(int,java.lang.String) -> a
    void a(int,long) -> a
    void a(int,int) -> a
    boolean e() -> e
    void f() -> f
    java.lang.String a(java.lang.String) -> a
    void g() -> g
    void h() -> h
    boolean a(int) -> a
    void i() -> i
    void j() -> j
    java.lang.String k() -> k
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.lang.String l() -> l
    void a(android.content.Context) -> a
    android.content.Context m() -> m
    java.lang.String d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
com.iflytek.thridparty.c -> com.iflytek.thridparty.c:
    void a(java.lang.String,java.lang.String) -> a
com.iflytek.thridparty.d -> com.iflytek.thridparty.d:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.iflytek.thridparty.e -> com.iflytek.thridparty.e:
    java.io.PrintStream a -> a
    char[] b -> b
    void a(java.io.OutputStream,byte[],int,int) -> a
    java.lang.String a(byte[]) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    int a(java.io.InputStream,byte[]) -> a
com.iflytek.thridparty.f -> com.iflytek.thridparty.f:
    android.content.Context a -> a
    void run() -> run
com.iflytek.thridparty.g -> com.iflytek.thridparty.g:
    com.iflytek.thridparty.g a -> a
    javax.crypto.spec.SecretKeySpec b -> b
    com.iflytek.thridparty.g a() -> a
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
com.iflytek.thridparty.h -> com.iflytek.thridparty.h:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    boolean b(android.content.Context,java.lang.String) -> b
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String k(android.content.Context) -> k
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String l(android.content.Context) -> l
    int m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    java.lang.String b(java.lang.String) -> b
    long[] o(android.content.Context) -> o
    int q(android.content.Context) -> q
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String p(android.content.Context) -> p
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,int) -> a
    java.lang.String c(java.lang.String) -> c
com.iflytek.thridparty.i -> com.iflytek.thridparty.i:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    byte[] e -> e
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(byte[],byte[]) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    int b() -> b
    int c() -> c
    java.lang.String b(java.lang.String) -> b
    byte[] d() -> d
    com.iflytek.thridparty.x$a e() -> e
    java.lang.String f() -> f
com.iflytek.thridparty.j -> com.iflytek.thridparty.j:
    int a -> a
    int b -> b
    java.lang.Boolean m -> m
    com.iflytek.cloud.EvaluatorListener n -> n
    long c -> c
    long d -> d
    int e -> e
    com.iflytek.thridparty.i f -> f
    com.iflytek.cloud.record.PcmRecorder g -> g
    com.iflytek.thridparty.y h -> h
    java.lang.String i -> i
    byte[] j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.concurrent.ConcurrentLinkedQueue o -> o
    java.util.concurrent.ConcurrentLinkedQueue v -> v
    java.util.ArrayList w -> w
    boolean x -> x
    com.iflytek.thridparty.x$a y -> y
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.EvaluatorListener) -> a
    void a(byte[],java.lang.String,com.iflytek.cloud.EvaluatorListener) -> a
    boolean a(boolean) -> a
    void b(boolean) -> b
    void a(android.os.Message) -> a
    void a() -> a
    void b() -> b
    void b(android.os.Message) -> b
    void h() -> h
    void c(android.os.Message) -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void i() -> i
    void j() -> j
    void d(boolean) -> d
    void c(boolean) -> c
    void c() -> c
    void k() -> k
    void a(byte[],boolean) -> a
    java.util.concurrent.ConcurrentLinkedQueue d() -> d
    void a(byte[],int) -> a
    void onRecordBuffer(byte[],int,int) -> onRecordBuffer
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onRecordStarted(boolean) -> onRecordStarted
    java.lang.String e() -> e
    void onRecordReleased() -> onRecordReleased
    java.lang.String f() -> f
    java.lang.String g() -> g
com.iflytek.thridparty.j$1 -> com.iflytek.thridparty.j$1:
    int[] a -> a
com.iflytek.thridparty.k -> com.iflytek.thridparty.k:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    byte[] e -> e
    com.iflytek.cloud.GrammarListener f -> f
    com.iflytek.cloud.LexiconListener g -> g
    java.lang.String h -> h
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    int b() -> b
    int b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener,com.iflytek.thridparty.ap) -> a
    int grammarCallBack(int,char[]) -> grammarCallBack
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener,com.iflytek.thridparty.ap) -> a
    int lexiconCallBack(int,char[]) -> lexiconCallBack
    java.lang.String c() -> c
    java.lang.String d() -> d
com.iflytek.thridparty.l -> com.iflytek.thridparty.l:
    com.iflytek.cloud.RecognizerListener a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    boolean g -> g
    com.iflytek.thridparty.k h -> h
    com.iflytek.cloud.record.PcmRecorder i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.util.concurrent.ConcurrentLinkedQueue m -> m
    java.util.ArrayList n -> n
    com.iflytek.thridparty.y o -> o
    int v -> v
    boolean w -> w
    int x -> x
    int a() -> a
    java.util.concurrent.ConcurrentLinkedQueue b() -> b
    void a(byte[],int) -> a
    void a(com.iflytek.cloud.RecognizerListener) -> a
    void a_() -> a_
    void a(android.os.Message) -> a
    void h() -> h
    void i() -> i
    void b(android.os.Message) -> b
    boolean a(boolean) -> a
    void x() -> x
    void b(boolean) -> b
    void j() -> j
    void a(com.iflytek.cloud.SpeechError) -> a
    void k() -> k
    void a(boolean,byte[]) -> a
    void c() -> c
    boolean l() -> l
    void stusCb(char[],int,int,int,byte[]) -> stusCb
    void rsltCb(char[],byte[],int,int) -> rsltCb
    void errCb(char[],int,byte[]) -> errCb
    void y() -> y
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void onRecordBuffer(byte[],int,int) -> onRecordBuffer
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onRecordStarted(boolean) -> onRecordStarted
    com.iflytek.thridparty.y m() -> m
    void onRecordReleased() -> onRecordReleased
    java.lang.String f() -> f
    java.lang.String e() -> e
    java.lang.String g() -> g
com.iflytek.thridparty.m -> com.iflytek.thridparty.m:
    com.iflytek.thridparty.p a -> a
    com.iflytek.cloud.SpeechListener b -> b
    void a(com.iflytek.thridparty.ap,com.iflytek.thridparty.m$a) -> a
    void a(android.os.Message) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String f() -> f
    java.lang.String e() -> e
    java.lang.String g() -> g
com.iflytek.thridparty.m$a -> com.iflytek.thridparty.m$a:
    com.iflytek.cloud.SpeechListener a -> a
    android.os.Handler b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onBufferReceived(byte[]) -> onBufferReceived
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.SpeechListener a(com.iflytek.thridparty.m$a) -> a
com.iflytek.thridparty.n -> com.iflytek.thridparty.n:
    com.iflytek.thridparty.m$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.thridparty.o -> com.iflytek.thridparty.o:
    com.iflytek.cloud.VerifierListener a -> a
    long b -> b
    boolean c -> c
    com.iflytek.thridparty.p d -> d
    com.iflytek.cloud.record.PcmRecorder e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.iflytek.cloud.VerifierResult h -> h
    java.util.concurrent.ConcurrentLinkedQueue i -> i
    int j -> j
    long k -> k
    int l -> l
    void a(com.iflytek.cloud.VerifierListener) -> a
    boolean a() -> a
    boolean m() -> m
    void b(boolean) -> b
    void a(android.os.Message) -> a
    void b() -> b
    void h() -> h
    void b(android.os.Message) -> b
    void x() -> x
    void c(android.os.Message) -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void y() -> y
    void i() -> i
    void z() -> z
    void c() -> c
    void A() -> A
    void a(byte[],int) -> a
    void a(byte[],boolean) -> a
    java.util.concurrent.ConcurrentLinkedQueue j() -> j
    void onRecordBuffer(byte[],int,int) -> onRecordBuffer
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onRecordStarted(boolean) -> onRecordStarted
    int k() -> k
    void onRecordReleased() -> onRecordReleased
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
com.iflytek.thridparty.o$1 -> com.iflytek.thridparty.o$1:
    int[] a -> a
com.iflytek.thridparty.p -> com.iflytek.thridparty.p:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    com.iflytek.msc.MSCSessionInfo e -> e
    byte[] f -> f
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    boolean b() -> b
    int c() -> c
    byte[] d() -> d
    java.lang.String b(java.lang.String) -> b
    com.iflytek.thridparty.x$a e() -> e
    java.lang.String f() -> f
    int a(android.content.Context,com.iflytek.thridparty.w) -> a
com.iflytek.thridparty.q -> com.iflytek.thridparty.q:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a(byte[],int,int) -> a
    void a() -> a
com.iflytek.thridparty.r -> com.iflytek.thridparty.r:
    java.lang.String a -> a
    com.iflytek.cloud.WakeuperListener b -> b
    boolean c -> c
    int d -> d
    com.iflytek.thridparty.q e -> e
    com.iflytek.cloud.record.PcmRecorder f -> f
    java.util.ArrayList g -> g
    boolean h -> h
    boolean i -> i
    int j -> j
    int a() -> a
    void a(com.iflytek.cloud.WakeuperListener) -> a
    void a(android.os.Message) -> a
    void b() -> b
    void h() -> h
    void b(android.os.Message) -> b
    int MsgProcCallBack(char[],int,int,int,byte[]) -> MsgProcCallBack
    boolean a(boolean) -> a
    void k() -> k
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(boolean,byte[],int) -> a
    void c() -> c
    boolean l() -> l
    void m() -> m
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void onRecordBuffer(byte[],int,int) -> onRecordBuffer
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void i() -> i
    void onRecordStarted(boolean) -> onRecordStarted
    void onRecordReleased() -> onRecordReleased
    java.lang.String f() -> f
    java.lang.String e() -> e
    com.iflytek.cloud.WakeuperListener j() -> j
    java.lang.String g() -> g
com.iflytek.thridparty.s -> com.iflytek.thridparty.s:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    android.content.Context w -> w
    com.iflytek.thridparty.X x -> x
    com.iflytek.cloud.RequestListener y -> y
    com.iflytek.thridparty.S z -> z
    java.lang.String A -> A
    com.iflytek.thridparty.X$a a -> a
    int a(org.json.JSONObject,com.iflytek.cloud.RequestListener) -> a
    int a(java.lang.String,java.lang.String,java.lang.String,com.iflytek.cloud.util.FileDownloadListener) -> a
    org.json.JSONObject a(java.lang.String,java.lang.String) -> a
    org.json.JSONObject b(java.lang.String,java.lang.String) -> b
    void a() -> a
    org.json.JSONObject c(java.lang.String,java.lang.String) -> c
    org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject) -> a
    java.lang.String a(com.iflytek.thridparty.s) -> a
    android.content.Context b(com.iflytek.thridparty.s) -> b
    com.iflytek.cloud.RequestListener c(com.iflytek.thridparty.s) -> c
com.iflytek.thridparty.t -> com.iflytek.thridparty.t:
    com.iflytek.thridparty.s a -> a
    void a(com.iflytek.thridparty.X,byte[]) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.thridparty.u -> com.iflytek.thridparty.u:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    byte[] e -> e
    int a(android.content.Context,java.lang.String,com.iflytek.thridparty.w) -> a
    void a(java.lang.String) -> a
    void a(java.lang.StringBuffer,byte[],int,boolean) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,byte[],int) -> a
    int a() -> a
    int c(java.lang.String) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String b() -> b
com.iflytek.thridparty.v -> com.iflytek.thridparty.v:
    java.lang.String k -> k
    boolean l -> l
    com.iflytek.cloud.IdentityListener a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    com.iflytek.thridparty.u e -> e
    int f -> f
    int g -> g
    com.iflytek.thridparty.P m -> m
    java.lang.String h -> h
    com.iflytek.thridparty.y i -> i
    java.util.HashMap n -> n
    java.util.HashMap o -> o
    java.util.HashMap v -> v
    int w -> w
    long j -> j
    com.iflytek.thridparty.P a() -> a
    void a(byte[],int) -> a
    void a(com.iflytek.cloud.IdentityListener) -> a
    void a_() -> a_
    void a(android.os.Message) -> a
    void b() -> b
    void h() -> h
    void b(android.os.Message) -> b
    boolean a(java.lang.String,boolean) -> a
    void e(android.os.Message) -> e
    void b(boolean) -> b
    void i() -> i
    void a(com.iflytek.cloud.SpeechError) -> a
    void j() -> j
    void a(boolean,byte[]) -> a
    void c() -> c
    void stusCb(char[],int,int,byte[],int) -> stusCb
    void rsltCb(char[],byte[],int,int) -> rsltCb
    void errCb(char[],int,byte[]) -> errCb
    void c(android.os.Message) -> c
    void a(java.lang.StringBuffer,byte[],boolean,boolean) -> a
    void a(java.lang.String,java.lang.String,byte[],int,int) -> a
    com.iflytek.thridparty.y k() -> k
    java.lang.String f() -> f
    java.lang.String e() -> e
    java.lang.String g() -> g
com.iflytek.thridparty.w -> com.iflytek.thridparty.w:
    int p -> p
    int q -> q
    android.content.Context r -> r
    com.iflytek.thridparty.ap a -> a
    boolean s -> s
    com.iflytek.thridparty.w$b b -> b
    long t -> t
    int u -> u
    android.os.HandlerThread c -> c
    long d -> d
    void a(android.os.Message) -> a
    void n() -> n
    void a() -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean l() -> l
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String q() -> q
    int r() -> r
    void b(boolean) -> b
    void b(com.iflytek.cloud.SpeechError) -> b
    boolean s() -> s
    void a(com.iflytek.thridparty.w$b) -> a
    com.iflytek.thridparty.w$b t() -> t
    java.lang.String f() -> f
    java.lang.String e() -> e
    void a(com.iflytek.thridparty.ap) -> a
    void c() -> c
    com.iflytek.thridparty.ap u() -> u
    void a_() -> a_
    void a(int) -> a
    void d(android.os.Message) -> d
    void a(int,com.iflytek.thridparty.w$a,boolean,int) -> a
    void a(android.os.Message,com.iflytek.thridparty.w$a,boolean,int) -> a
    void v() -> v
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String w() -> w
    void c(com.iflytek.cloud.SpeechError) -> c
    void b() -> b
    long h() -> h
    java.lang.String g() -> g
com.iflytek.thridparty.w$a -> com.iflytek.thridparty.w$a:
    com.iflytek.thridparty.w$a a -> a
    com.iflytek.thridparty.w$a b -> b
    com.iflytek.thridparty.w$a[] c -> c
    com.iflytek.thridparty.w$a[] values() -> values
    com.iflytek.thridparty.w$a valueOf(java.lang.String) -> valueOf
com.iflytek.thridparty.w$b -> com.iflytek.thridparty.w$b:
    com.iflytek.thridparty.w$b a -> a
    com.iflytek.thridparty.w$b b -> b
    com.iflytek.thridparty.w$b c -> c
    com.iflytek.thridparty.w$b d -> d
    com.iflytek.thridparty.w$b e -> e
    com.iflytek.thridparty.w$b f -> f
    com.iflytek.thridparty.w$b[] g -> g
    com.iflytek.thridparty.w$b[] values() -> values
    com.iflytek.thridparty.w$b valueOf(java.lang.String) -> valueOf
com.iflytek.thridparty.x -> com.iflytek.thridparty.x:
    char[] a -> a
    java.lang.String b -> b
    java.lang.String g() -> g
com.iflytek.thridparty.x$a -> com.iflytek.thridparty.x$a:
    com.iflytek.thridparty.x$a a -> a
    com.iflytek.thridparty.x$a b -> b
    com.iflytek.thridparty.x$a c -> c
    com.iflytek.thridparty.x$a d -> d
    com.iflytek.thridparty.x$a e -> e
    com.iflytek.thridparty.x$a f -> f
    com.iflytek.thridparty.x$a[] g -> g
    com.iflytek.thridparty.x$a[] values() -> values
    com.iflytek.thridparty.x$a valueOf(java.lang.String) -> valueOf
com.iflytek.thridparty.y -> com.iflytek.thridparty.y:
    org.json.JSONObject a -> a
    long b -> b
    long c -> c
    void a(com.iflytek.thridparty.ap) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,long,boolean) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a() -> a
com.iflytek.thridparty.z -> com.iflytek.thridparty.z:
    com.iflytek.thridparty.ap b -> b
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    boolean setParameter(com.iflytek.thridparty.ap) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.iflytek.thridparty.z$a a(java.lang.String,com.iflytek.speech.ISpeechModule) -> a
com.iflytek.thridparty.z$a -> com.iflytek.thridparty.z$a:
    com.iflytek.thridparty.z$a a -> a
    com.iflytek.thridparty.z$a b -> b
    com.iflytek.thridparty.z$a c -> c
    com.iflytek.thridparty.z$a[] d -> d
    com.iflytek.thridparty.z$a[] values() -> values
    com.iflytek.thridparty.z$a valueOf(java.lang.String) -> valueOf
com.sunteam.alarm.Alarm_CountDownSetActivity -> com.sunteam.alarm.Alarm_CountDownSetActivity:
    int gSelectID -> c
    int HOUR_FLAG -> d
    int MINUTE_FLAG -> e
    int gFlag -> f
    int gHour -> g
    int gMinute -> h
    int gCountdaownTime -> i
    android.widget.TextView tv1 -> j
    android.widget.TextView tv2 -> k
    android.widget.TextView tv3 -> l
    android.widget.TextView tv4 -> m
    android.widget.TextView mTvTitle -> a
    android.view.View mLine -> b
    void onCreate(android.os.Bundle) -> onCreate
    void Init() -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void showInfo() -> b
    int access$0(com.sunteam.alarm.Alarm_CountDownSetActivity) -> a
com.sunteam.alarm.Alarm_CountDownSetActivity$1 -> com.sunteam.alarm.a:
    com.sunteam.alarm.Alarm_CountDownSetActivity this$0 -> a
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.alarm.Alarm_MainActivity -> com.sunteam.alarm.Alarm_MainActivity:
    int ALARM_ID -> a
    int ANNIVERSARY_ID -> b
    int COUNTDOWN_ID -> c
    int gInterfaceFlag -> d
    int MAIN_INTERFACE -> e
    int gHour -> f
    int gMin -> g
    java.lang.String gFileName -> h
    java.lang.String gFilePath -> i
    int gType -> j
    int gOnoff -> k
    int gMonth -> l
    int gDay -> m
    int gSQLData_ID -> n
    int gInfo_ID -> o
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void ShowAlarmInfo(int) -> c
    void ShowAnniveInfo(int) -> d
    java.util.ArrayList getAlarmData() -> a
    java.util.ArrayList getAnniversaryData() -> b
    void StartSetting(int) -> a
    void StartSettingList(int) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void UpdateAnniversaryData(com.sunteam.dao.Alarminfo) -> a
    void UpdateAlarmData(com.sunteam.dao.Alarminfo) -> b
com.sunteam.alarm.Alarm_MainActivity$BootCompletedReceiver -> com.sunteam.alarm.Alarm_MainActivity$BootCompletedReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sunteam.alarm.Alarm_SetInfoActivity -> com.sunteam.alarm.Alarm_SetInfoActivity:
    int gSelectID -> a
    int gSetID -> b
    int gInterfaceFlag -> c
    java.lang.String gfileName -> d
    int gType -> e
    int gOnoff -> f
    java.util.ArrayList mTemp -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    java.util.ArrayList getPathAudioList() -> a
    java.lang.String getExtensionName(java.lang.String) -> a
    int access$0(com.sunteam.alarm.Alarm_SetInfoActivity) -> a
    int access$1(com.sunteam.alarm.Alarm_SetInfoActivity) -> b
    java.util.ArrayList access$2(com.sunteam.alarm.Alarm_SetInfoActivity) -> c
com.sunteam.alarm.Alarm_SetInfoActivity$1 -> com.sunteam.alarm.b:
    com.sunteam.alarm.Alarm_SetInfoActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_SetInfoActivity$2 -> com.sunteam.alarm.c:
    com.sunteam.alarm.Alarm_SetInfoActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_SetInfoActivity$3 -> com.sunteam.alarm.d:
    com.sunteam.alarm.Alarm_SetInfoActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_SetInfoActivity$4 -> com.sunteam.alarm.e:
    com.sunteam.alarm.Alarm_SetInfoActivity this$0 -> a
    boolean accept(java.io.File) -> accept
com.sunteam.alarm.Alarm_SettingActivity -> com.sunteam.alarm.Alarm_SettingActivity:
    int gInterfaceFlag -> c
    int gSelectID -> d
    int gHour -> e
    int gMin -> f
    int gMonth -> g
    int gDay -> h
    int gHour_bk -> i
    int gMin_bk -> j
    int gMonth_bk -> k
    int gDay_bk -> l
    int gFlag -> m
    int FLAG1 -> n
    int FLAG2 -> o
    android.widget.TextView tv1 -> p
    android.widget.TextView tv2 -> q
    android.widget.TextView tv3 -> r
    android.widget.TextView mTvTitle -> a
    android.view.View mLine -> b
    void onCreate(android.os.Bundle) -> onCreate
    void Init() -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    int getMonthOfDay(int) -> a
    void showInfo() -> b
    int access$0(com.sunteam.alarm.Alarm_SettingActivity) -> a
    int access$1(com.sunteam.alarm.Alarm_SettingActivity) -> b
    int access$2(com.sunteam.alarm.Alarm_SettingActivity) -> c
    int access$3(com.sunteam.alarm.Alarm_SettingActivity) -> d
    int access$4(com.sunteam.alarm.Alarm_SettingActivity) -> e
    int access$5(com.sunteam.alarm.Alarm_SettingActivity) -> f
com.sunteam.alarm.Alarm_SettingActivity$1 -> com.sunteam.alarm.f:
    com.sunteam.alarm.Alarm_SettingActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_SettingActivity$2 -> com.sunteam.alarm.g:
    com.sunteam.alarm.Alarm_SettingActivity this$0 -> a
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.alarm.Alarm_SettingActivity$3 -> com.sunteam.alarm.h:
    com.sunteam.alarm.Alarm_SettingActivity this$0 -> a
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.alarm.Alarm_SettingActivity$4 -> com.sunteam.alarm.i:
    com.sunteam.alarm.Alarm_SettingActivity this$0 -> a
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.alarm.Alarm_countdownActivity -> com.sunteam.alarm.Alarm_countdownActivity:
    android.widget.TextView mTitle -> a
    android.widget.TextView mTv1 -> b
    android.widget.TextView mTv2 -> c
    android.widget.TextView mTv3 -> d
    android.widget.TextView mTv4 -> e
    android.widget.TextView mTv5 -> f
    android.view.View mLine -> g
    int gtime_len -> k
    int START_COUNTDOWN -> l
    int STOP_COUNTDOWN -> m
    int PAUSE_COUNTDOWN -> n
    int gCountDown_falg -> o
    java.util.Timer timer -> h
    java.util.TimerTask task -> i
    com.sunteam.common.utils.dialog.PromptListener promptListener -> j
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void putMsg() -> a
    int access$0(com.sunteam.alarm.Alarm_countdownActivity) -> a
    int access$1(com.sunteam.alarm.Alarm_countdownActivity) -> b
    int access$2(com.sunteam.alarm.Alarm_countdownActivity) -> c
    void access$3(com.sunteam.alarm.Alarm_countdownActivity,int) -> a
    void access$4(com.sunteam.alarm.Alarm_countdownActivity,int) -> b
    int access$5(com.sunteam.alarm.Alarm_countdownActivity) -> d
com.sunteam.alarm.Alarm_countdownActivity$1 -> com.sunteam.alarm.j:
    com.sunteam.alarm.Alarm_countdownActivity this$0 -> a
    void run() -> run
    com.sunteam.alarm.Alarm_countdownActivity access$0(com.sunteam.alarm.Alarm_countdownActivity$1) -> a
com.sunteam.alarm.Alarm_countdownActivity$1$1 -> com.sunteam.alarm.k:
    com.sunteam.alarm.Alarm_countdownActivity$1 this$1 -> a
    void run() -> run
com.sunteam.alarm.Alarm_countdownActivity$2 -> com.sunteam.alarm.l:
    com.sunteam.alarm.Alarm_countdownActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_countdownActivity$3 -> com.sunteam.alarm.m:
    com.sunteam.alarm.Alarm_countdownActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_countdownActivity$4 -> com.sunteam.alarm.n:
    com.sunteam.alarm.Alarm_countdownActivity this$0 -> a
    void onComplete() -> onComplete
com.sunteam.alarm.Alarm_countdownActivity$5 -> com.sunteam.alarm.o:
    com.sunteam.alarm.Alarm_countdownActivity this$0 -> a
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.alarm.R -> com.sunteam.alarm.R:
com.sunteam.alarm.R$array -> com.sunteam.alarm.R$array:
    int commoncmd_list -> commoncmd_list
    int countdown_list -> countdown_list
    int langtype_list -> langtype_list
    int main_list -> main_list
com.sunteam.alarm.R$attr -> com.sunteam.alarm.R$attr:
com.sunteam.alarm.R$color -> com.sunteam.alarm.R$color:
    int bg_color -> bg_color
    int bg_popwindow -> bg_popwindow
    int bg_white -> bg_white
    int black -> black
    int blue -> blue
    int bottom_line -> bottom_line
    int contents_text -> contents_text
    int encode_view -> encode_view
    int green -> green
    int green_center -> green_center
    int grgray -> grgray
    int header -> header
    int help_button_view -> help_button_view
    int help_view -> help_view
    int lightgreen -> lightgreen
    int list_select -> list_select
    int ltred -> ltred
    int magenta -> magenta
    int more_bg -> more_bg
    int notify_background -> notify_background
    int possible_result_points -> possible_result_points
    int red -> red
    int result_image_border -> result_image_border
    int result_minor_text -> result_minor_text
    int result_points -> result_points
    int result_text -> result_text
    int result_view -> result_view
    int root_common -> root_common
    int sbc_header_text -> sbc_header_text
    int sbc_header_view -> sbc_header_view
    int sbc_layout_view -> sbc_layout_view
    int sbc_list_item -> sbc_list_item
    int sbc_page_number_text -> sbc_page_number_text
    int sbc_snippet_text -> sbc_snippet_text
    int share_text -> share_text
    int share_view -> share_view
    int space_line -> space_line
    int status_text -> status_text
    int status_view -> status_view
    int text_bar_grey -> text_bar_grey
    int text_black -> text_black
    int text_blue -> text_blue
    int text_class -> text_class
    int text_content -> text_content
    int text_disabled -> text_disabled
    int text_grey -> text_grey
    int text_grey2 -> text_grey2
    int text_hint -> text_hint
    int text_more_grey -> text_more_grey
    int text_normal -> text_normal
    int text_praise -> text_praise
    int text_red -> text_red
    int text_select -> text_select
    int text_white -> text_white
    int title_bg -> title_bg
    int title_green -> title_green
    int translucent -> translucent
    int transparent -> transparent
    int transparent_pic_selected -> transparent_pic_selected
    int transparent_sendtopc -> transparent_sendtopc
    int viewfinder_frame -> viewfinder_frame
    int viewfinder_laser -> viewfinder_laser
    int viewfinder_mask -> viewfinder_mask
    int white -> white
    int yellow -> yellow
com.sunteam.alarm.R$dimen -> com.sunteam.alarm.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int dialog_bottom_padding -> dialog_bottom_padding
    int dialog_left_padding -> dialog_left_padding
    int dialog_right_padding -> dialog_right_padding
    int dialog_text_size -> dialog_text_size
    int dialog_top_padding -> dialog_top_padding
    int item_text_size -> item_text_size
    int text_big_size -> text_big_size
    int text_big_size_px -> text_big_size_px
    int text_middle_size -> text_middle_size
    int text_middle_size_px -> text_middle_size_px
    int text_small_size -> text_small_size
    int text_small_size_px -> text_small_size_px
    int text_super_size_px -> text_super_size_px
    int textsize -> textsize
    int title_text_size -> title_text_size
com.sunteam.alarm.R$drawable -> com.sunteam.alarm.R$drawable:
    int black -> black
    int blue -> blue
    int green -> green
    int ic_launcher -> ic_launcher
    int ltred -> ltred
    int red -> red
    int white -> white
    int yellow -> yellow
com.sunteam.alarm.R$id -> com.sunteam.alarm.R$id:
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_confirm -> common_dialog_confirm_confirm
    int common_dialog_confirm_editor_cancel -> common_dialog_confirm_editor_cancel
    int common_dialog_confirm_editor_confirm -> common_dialog_confirm_editor_confirm
    int common_dialog_confirm_editor_input -> common_dialog_confirm_editor_input
    int common_dialog_confirm_editor_space_line -> common_dialog_confirm_editor_space_line
    int common_dialog_confirm_editor_title -> common_dialog_confirm_editor_title
    int common_dialog_confirm_space_line -> common_dialog_confirm_space_line
    int common_dialog_confirm_title -> common_dialog_confirm_title
    int common_dialog_prompt_hint -> common_dialog_prompt_hint
    int common_dialog_threeoptions_cancel -> common_dialog_threeoptions_cancel
    int common_dialog_threeoptions_confirm -> common_dialog_threeoptions_confirm
    int common_dialog_threeoptions_neutral -> common_dialog_threeoptions_neutral
    int common_dialog_threeoptions_space_line -> common_dialog_threeoptions_space_line
    int common_dialog_threeoptions_title -> common_dialog_threeoptions_title
    int common_menu_fl_container -> common_menu_fl_container
    int common_menu_item -> common_menu_item
    int common_menu_view_line -> common_menu_view_line
    int common_menu_view_menu_list -> common_menu_view_menu_list
    int common_menu_view_title -> common_menu_view_title
    int common_toast_layout_tv -> common_toast_layout_tv
    int date_tv1 -> date_tv1
    int date_tv2 -> date_tv2
    int date_tv3 -> date_tv3
    int filname -> filname
    int line -> line
    int linearLayout1 -> linearLayout1
    int linearLayout11 -> linearLayout11
    int linearLayout2 -> linearLayout2
    int test -> test
    int test1 -> test1
    int test11 -> test11
    int test111 -> test111
    int test112 -> test112
    int test12 -> test12
    int time_tv1 -> time_tv1
    int time_tv2 -> time_tv2
    int time_tv3 -> time_tv3
    int title -> title
    int tv1 -> tv1
    int tv2 -> tv2
    int tv3 -> tv3
    int tv4 -> tv4
    int tv5 -> tv5
com.sunteam.alarm.R$layout -> com.sunteam.alarm.R$layout:
    int alarm__count_down_set -> alarm__count_down_set
    int alarm_activity_receiver -> alarm_activity_receiver
    int alarm_countdown -> alarm_countdown
    int alarm_main -> alarm_main
    int alarm_receiver_activity -> alarm_receiver_activity
    int alarm_set_info -> alarm_set_info
    int alarm_setting -> alarm_setting
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_confirm_editor -> common_dialog_confirm_editor
    int common_dialog_prompt -> common_dialog_prompt
    int common_dialog_threeoptions -> common_dialog_threeoptions
    int common_menu_activity -> common_menu_activity
    int common_menu_item -> common_menu_item
    int common_menu_view -> common_menu_view
    int common_toast_layout -> common_toast_layout
com.sunteam.alarm.R$string -> com.sunteam.alarm.R$string:
    int alarm -> alarm
    int alarm_title -> alarm_title
    int annive -> annive
    int annive_title -> annive_title
    int app_name -> app_name
    int canel -> canel
    int canel_set -> canel_set
    int common_delete -> common_delete
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_ok -> common_dialog_confirm_ok
    int common_functionmenu -> common_functionmenu
    int countdown -> countdown
    int countdown_Pause -> countdown_Pause
    int countdown_end -> countdown_end
    int countdown_resum -> countdown_resum
    int countdown_start -> countdown_start
    int countdown_starting -> countdown_starting
    int date -> date
    int date_title -> date_title
    int day -> day
    int hello_world -> hello_world
    int hour_time -> hour_time
    int hour_time1 -> hour_time1
    int min_time -> min_time
    int month -> month
    int music -> music
    int music_title -> music_title
    int no_file -> no_file
    int off -> off
    int ok -> ok
    int on -> on
    int onoff -> onoff
    int onoff_title -> onoff_title
    int remid_title -> remid_title
    int set_ok -> set_ok
    int speech_app_id -> speech_app_id
    int time -> time
    int time_self -> time_self
    int time_title -> time_title
    int title_activity_alarm__count_down_set -> title_activity_alarm__count_down_set
    int title_activity_alarm_countdown -> title_activity_alarm_countdown
    int title_activity_alarm_setting -> title_activity_alarm_setting
    int type -> type
    int type1 -> type1
    int type2 -> type2
    int type3 -> type3
    int type_title -> type_title
com.sunteam.alarm.R$style -> com.sunteam.alarm.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_prompt -> common_dialog_prompt
com.sunteam.alarm.utils.Global -> com.sunteam.alarm.a.a:
    int COUNT_DOWN_ID0 -> a
    int COUNT_DOWN_ID1 -> b
    int COUNT_DOWN_ID2 -> c
    int COUNT_DOWN_ID3 -> d
    int COUNT_DOWN_ID4 -> e
    int TIME_LEN0 -> f
    int TIME_LEN1 -> g
    int TIME_LEN2 -> h
    int TIME_LEN3 -> i
    void debug(java.lang.String) -> a
com.sunteam.alarmlib.R -> com.sunteam.alarmlib.R:
com.sunteam.alarmlib.R$array -> com.sunteam.alarmlib.R$array:
    int commoncmd_list -> commoncmd_list
    int langtype_list -> langtype_list
com.sunteam.alarmlib.R$color -> com.sunteam.alarmlib.R$color:
    int bg_color -> bg_color
    int bg_popwindow -> bg_popwindow
    int bg_white -> bg_white
    int black -> black
    int blue -> blue
    int bottom_line -> bottom_line
    int contents_text -> contents_text
    int encode_view -> encode_view
    int green -> green
    int green_center -> green_center
    int grgray -> grgray
    int header -> header
    int help_button_view -> help_button_view
    int help_view -> help_view
    int lightgreen -> lightgreen
    int list_select -> list_select
    int ltred -> ltred
    int magenta -> magenta
    int more_bg -> more_bg
    int notify_background -> notify_background
    int possible_result_points -> possible_result_points
    int red -> red
    int result_image_border -> result_image_border
    int result_minor_text -> result_minor_text
    int result_points -> result_points
    int result_text -> result_text
    int result_view -> result_view
    int root_common -> root_common
    int sbc_header_text -> sbc_header_text
    int sbc_header_view -> sbc_header_view
    int sbc_layout_view -> sbc_layout_view
    int sbc_list_item -> sbc_list_item
    int sbc_page_number_text -> sbc_page_number_text
    int sbc_snippet_text -> sbc_snippet_text
    int share_text -> share_text
    int share_view -> share_view
    int space_line -> space_line
    int status_text -> status_text
    int status_view -> status_view
    int text_bar_grey -> text_bar_grey
    int text_black -> text_black
    int text_blue -> text_blue
    int text_class -> text_class
    int text_content -> text_content
    int text_disabled -> text_disabled
    int text_grey -> text_grey
    int text_grey2 -> text_grey2
    int text_hint -> text_hint
    int text_more_grey -> text_more_grey
    int text_normal -> text_normal
    int text_praise -> text_praise
    int text_red -> text_red
    int text_select -> text_select
    int text_white -> text_white
    int title_bg -> title_bg
    int title_green -> title_green
    int translucent -> translucent
    int transparent -> transparent
    int transparent_pic_selected -> transparent_pic_selected
    int transparent_sendtopc -> transparent_sendtopc
    int viewfinder_frame -> viewfinder_frame
    int viewfinder_laser -> viewfinder_laser
    int viewfinder_mask -> viewfinder_mask
    int white -> white
    int yellow -> yellow
com.sunteam.alarmlib.R$dimen -> com.sunteam.alarmlib.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int dialog_bottom_padding -> dialog_bottom_padding
    int dialog_left_padding -> dialog_left_padding
    int dialog_right_padding -> dialog_right_padding
    int dialog_text_size -> dialog_text_size
    int dialog_top_padding -> dialog_top_padding
    int item_text_size -> item_text_size
    int text_big_size -> text_big_size
    int text_big_size_px -> text_big_size_px
    int text_middle_size -> text_middle_size
    int text_middle_size_px -> text_middle_size_px
    int text_small_size -> text_small_size
    int text_small_size_px -> text_small_size_px
    int text_super_size_px -> text_super_size_px
    int textsize -> textsize
    int title_text_size -> title_text_size
com.sunteam.alarmlib.R$drawable -> com.sunteam.alarmlib.R$drawable:
    int black -> black
    int blue -> blue
    int green -> green
    int ic_launcher -> ic_launcher
    int ltred -> ltred
    int red -> red
    int white -> white
    int yellow -> yellow
com.sunteam.alarmlib.R$id -> com.sunteam.alarmlib.R$id:
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_confirm -> common_dialog_confirm_confirm
    int common_dialog_confirm_editor_cancel -> common_dialog_confirm_editor_cancel
    int common_dialog_confirm_editor_confirm -> common_dialog_confirm_editor_confirm
    int common_dialog_confirm_editor_input -> common_dialog_confirm_editor_input
    int common_dialog_confirm_editor_space_line -> common_dialog_confirm_editor_space_line
    int common_dialog_confirm_editor_title -> common_dialog_confirm_editor_title
    int common_dialog_confirm_space_line -> common_dialog_confirm_space_line
    int common_dialog_confirm_title -> common_dialog_confirm_title
    int common_dialog_prompt_hint -> common_dialog_prompt_hint
    int common_dialog_threeoptions_cancel -> common_dialog_threeoptions_cancel
    int common_dialog_threeoptions_confirm -> common_dialog_threeoptions_confirm
    int common_dialog_threeoptions_neutral -> common_dialog_threeoptions_neutral
    int common_dialog_threeoptions_space_line -> common_dialog_threeoptions_space_line
    int common_dialog_threeoptions_title -> common_dialog_threeoptions_title
    int common_menu_fl_container -> common_menu_fl_container
    int common_menu_item -> common_menu_item
    int common_menu_view_line -> common_menu_view_line
    int common_menu_view_menu_list -> common_menu_view_menu_list
    int common_menu_view_title -> common_menu_view_title
    int common_toast_layout_tv -> common_toast_layout_tv
    int date_tv1 -> date_tv1
    int date_tv2 -> date_tv2
    int date_tv3 -> date_tv3
    int filname -> filname
    int line -> line
    int linearLayout1 -> linearLayout1
    int linearLayout11 -> linearLayout11
    int linearLayout2 -> linearLayout2
    int test -> test
    int test1 -> test1
    int test11 -> test11
    int test111 -> test111
    int test112 -> test112
    int test12 -> test12
    int time_tv1 -> time_tv1
    int time_tv2 -> time_tv2
    int time_tv3 -> time_tv3
    int title -> title
com.sunteam.alarmlib.R$layout -> com.sunteam.alarmlib.R$layout:
    int alarm_receiver_activity -> alarm_receiver_activity
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_confirm_editor -> common_dialog_confirm_editor
    int common_dialog_prompt -> common_dialog_prompt
    int common_dialog_threeoptions -> common_dialog_threeoptions
    int common_menu_activity -> common_menu_activity
    int common_menu_item -> common_menu_item
    int common_menu_view -> common_menu_view
    int common_toast_layout -> common_toast_layout
com.sunteam.alarmlib.R$string -> com.sunteam.alarmlib.R$string:
    int alarm_title -> alarm_title
    int annive_title -> annive_title
    int common_delete -> common_delete
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_ok -> common_dialog_confirm_ok
    int common_functionmenu -> common_functionmenu
    int remid_title -> remid_title
    int speech_app_id -> speech_app_id
com.sunteam.alarmlib.R$style -> com.sunteam.alarmlib.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_prompt -> common_dialog_prompt
com.sunteam.common.menu.BaseActivity -> com.sunteam.common.menu.BaseActivity:
    android.view.GestureDetector a -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void leftSlip() -> leftSlip
    void rightSlip() -> rightSlip
    void upSlip() -> upSlip
    void downSlip() -> downSlip
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.sunteam.common.menu.MenuActivity -> com.sunteam.common.menu.MenuActivity:
    com.sunteam.common.menu.ViewPara mViewPara -> mViewPara
    java.lang.String mTitle -> mTitle
    java.util.ArrayList mMenuList -> mMenuList
    int selectItem -> selectItem
    int menu_view_id -> menu_view_id
    android.widget.FrameLayout a -> a
    com.sunteam.common.menu.MenuView mMenuView -> mMenuView
    java.lang.Boolean b -> b
    com.sunteam.common.menu.MenuActivity$MyHandler c -> c
    boolean bootCompleted -> bootCompleted
    boolean shutdhownPending -> shutdhownPending
    com.sunteam.common.menu.menulistadapter.OnEnterListener d -> d
    com.sunteam.common.tts.TtsListener e -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void setResultCode(int,int,java.lang.String) -> setResultCode
    void returnResultCode(int,int,java.lang.String) -> returnResultCode
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getSelectItem() -> getSelectItem
    java.lang.String getSelectItemContent() -> getSelectItemContent
    java.lang.String getSelectItemContent(int) -> getSelectItemContent
    java.util.ArrayList getListData() -> getListData
    void setListDataItem(int,java.lang.String) -> setListDataItem
    void setMenuKeyListener(com.sunteam.common.menu.menuview.OnMenuKeyListener) -> setMenuKeyListener
    void setListData(java.util.ArrayList) -> setListData
    void setTitle(java.lang.String) -> setTitle
    android.widget.ListView getListView() -> getListView
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    int a(java.lang.String) -> a
    void a(com.sunteam.common.menu.MenuActivity,java.lang.String) -> a
    void b(com.sunteam.common.menu.MenuActivity,java.lang.String) -> b
    void c(com.sunteam.common.menu.MenuActivity,java.lang.String) -> c
com.sunteam.common.menu.MenuActivity$1 -> com.sunteam.common.menu.MenuActivity$1:
    com.sunteam.common.menu.MenuActivity a -> a
    void onEnterCompleted(int,java.lang.String) -> onEnterCompleted
com.sunteam.common.menu.MenuActivity$2 -> com.sunteam.common.menu.MenuActivity$2:
    com.sunteam.common.menu.MenuActivity a -> a
    void onInit(int) -> onInit
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.menu.MenuActivity$MyHandler -> com.sunteam.common.menu.MenuActivity$MyHandler:
    com.sunteam.common.menu.MenuActivity a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sunteam.common.menu.MenuConstant -> com.sunteam.common.menu.MenuConstant:
    int SHORT_PRESS_TIME -> SHORT_PRESS_TIME
    int LONG_PRESS_TIME -> LONG_PRESS_TIME
    int MSG_TTSSPEAKING_END -> MSG_TTSSPEAKING_END
    int MSG_LONG_PRESS -> MSG_LONG_PRESS
    int MSG_DIALOGUE_HANDLE -> MSG_DIALOGUE_HANDLE
    int MSG_SHOW_TOAST -> MSG_SHOW_TOAST
    int MSG_SPEECH_RECOGNIZER -> MSG_SPEECH_RECOGNIZER
    int MSG_SET_FOCUSITEM -> MSG_SET_FOCUSITEM
    int MSG_READ_TITLE -> MSG_READ_TITLE
    int MSG_READ_FOCUSITEM -> MSG_READ_FOCUSITEM
    java.lang.String INTENT_KEY_TITLE -> INTENT_KEY_TITLE
    java.lang.String INTENT_KEY_LIST -> INTENT_KEY_LIST
    java.lang.String INTENT_KEY_SELECTEDITEM -> INTENT_KEY_SELECTEDITEM
com.sunteam.common.menu.MenuGlobal -> com.sunteam.common.menu.MenuGlobal:
    java.lang.String TAG -> TAG
    void sendMessage(android.os.Handler,int,java.lang.Object) -> sendMessage
    void Toast(android.os.Handler,java.lang.String) -> Toast
    void debug(java.lang.String) -> debug
com.sunteam.common.menu.MenuListAdapter -> com.sunteam.common.menu.MenuListAdapter:
    android.content.Context a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.sunteam.common.menu.menulistadapter.OnEnterListener d -> d
    com.sunteam.common.menu.menulistadapter.ShowView e -> e
    boolean f -> f
    com.sunteam.common.utils.Tools g -> g
    void setOnEnterListener(com.sunteam.common.menu.menulistadapter.OnEnterListener) -> setOnEnterListener
    void updateTools() -> updateTools
    void setSelectItem(int) -> setSelectItem
    void setSelectItem(int,java.lang.Boolean) -> setSelectItem
    void setSelectItem(int,int) -> setSelectItem
    int getSelectItem() -> getSelectItem
    java.lang.String getSelectItemContent() -> getSelectItemContent
    java.lang.String getSelectItemContent(int) -> getSelectItemContent
    void up() -> up
    void down() -> down
    void enter() -> enter
    void readSelectItemContent() -> readSelectItemContent
    void readSelectItemContent(int) -> readSelectItemContent
    boolean isStop() -> isStop
    java.util.ArrayList getListData() -> getListData
    void setListDataItem(int,java.lang.String) -> setListDataItem
    void setListData(java.util.ArrayList) -> setListData
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    void setShowView(com.sunteam.common.menu.menulistadapter.ShowView) -> setShowView
com.sunteam.common.menu.MenuListAdapter$ViewHolder -> com.sunteam.common.menu.MenuListAdapter$ViewHolder:
    android.widget.TextView a -> a
com.sunteam.common.menu.MenuView -> com.sunteam.common.menu.MenuView:
    android.content.Context a -> a
    android.os.Handler b -> b
    android.view.View c -> c
    android.widget.TextView d -> d
    android.view.View e -> e
    android.widget.ListView f -> f
    com.sunteam.common.menu.MenuListAdapter g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    int l -> l
    boolean m -> m
    int n -> n
    int o -> o
    com.sunteam.common.tts.SpeechRecognizerUtils p -> p
    com.sunteam.common.menu.menuview.OnMenuKeyListener q -> q
    android.os.PowerManager$WakeLock r -> r
    void setHandler(android.os.Handler) -> setHandler
    android.view.View getView() -> getView
    int getSelectItem() -> getSelectItem
    java.lang.String getSelectItemContent() -> getSelectItemContent
    java.lang.String getSelectItemContent(int) -> getSelectItemContent
    void setSelectItem(int) -> setSelectItem
    void setSelectItem(int,java.lang.Boolean) -> setSelectItem
    java.util.ArrayList getListData() -> getListData
    void setListDataItem(int,java.lang.String) -> setListDataItem
    void setListData(java.util.ArrayList) -> setListData
    void setTitle(java.lang.String) -> setTitle
    void setShowView(com.sunteam.common.menu.menulistadapter.ShowView) -> setShowView
    void setMenuKeyListener(com.sunteam.common.menu.menuview.OnMenuKeyListener) -> setMenuKeyListener
    android.widget.ListView getListView() -> getListView
    void onResume() -> onResume
    void readFocusItem() -> readFocusItem
    void up() -> up
    void down() -> down
    void enter() -> enter
    boolean isScanning() -> isScanning
    void setScanning(boolean) -> setScanning
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void scrollPgup() -> scrollPgup
    void scrollPgdn() -> scrollPgdn
    boolean processKeyEnevt(int,android.view.KeyEvent) -> processKeyEnevt
    void a() -> a
    void processLongKey() -> processLongKey
    void calcItemCount() -> calcItemCount
    void b() -> b
    void c() -> c
    void onBuildFinish() -> onBuildFinish
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
    void onResult(java.lang.String,boolean) -> onResult
    void a(android.content.Context) -> a
    void d() -> d
com.sunteam.common.menu.MenuView$1 -> com.sunteam.common.menu.MenuView$1:
    void onComplete() -> onComplete
com.sunteam.common.menu.ViewPara -> com.sunteam.common.menu.ViewPara:
    java.lang.String layoutName -> layoutName
    java.lang.String idTitle -> idTitle
    java.lang.String idLine -> idLine
    java.lang.String idList -> idList
com.sunteam.common.menu.menulistadapter.OnEnterListener -> com.sunteam.common.menu.menulistadapter.OnEnterListener:
    void onEnterCompleted(int,java.lang.String) -> onEnterCompleted
com.sunteam.common.menu.menulistadapter.ShowView -> com.sunteam.common.menu.menulistadapter.ShowView:
    android.view.View getView(android.content.Context,int,android.view.View,android.view.ViewGroup) -> getView
com.sunteam.common.menu.menuview.OnMenuKeyListener -> com.sunteam.common.menu.menuview.OnMenuKeyListener:
    void onMenuKeyCompleted(int,java.lang.String) -> onMenuKeyCompleted
com.sunteam.common.tts.JsonParser -> com.sunteam.common.tts.JsonParser:
    java.lang.String parseIatResult(java.lang.String) -> parseIatResult
    java.lang.String parseGrammarResult(java.lang.String) -> parseGrammarResult
    java.lang.String parseLocalGrammarResult(java.lang.String) -> parseLocalGrammarResult
    java.lang.String parseLocalGrammarResult(java.lang.String,java.lang.String) -> parseLocalGrammarResult
com.sunteam.common.tts.SpeechRecognizerListener -> com.sunteam.common.tts.SpeechRecognizerListener:
    void onBuildFinish() -> onBuildFinish
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
    void onResult(java.lang.String,boolean) -> onResult
com.sunteam.common.tts.SpeechRecognizerUtils -> com.sunteam.common.tts.SpeechRecognizerUtils:
    android.content.Context a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    java.lang.String c -> c
    android.widget.Toast d -> d
    com.sunteam.common.tts.SpeechRecognizerListener e -> e
    com.iflytek.cloud.InitListener f -> f
    com.iflytek.cloud.GrammarListener g -> g
    com.iflytek.cloud.LexiconListener h -> h
    com.iflytek.cloud.RecognizerListener i -> i
    void onDestroy() -> onDestroy
    void updateLocalLexicon(java.lang.String) -> updateLocalLexicon
    void recognizeSpeech() -> recognizeSpeech
    void a(com.sunteam.common.tts.SpeechRecognizerUtils) -> a
    com.sunteam.common.tts.SpeechRecognizerListener b(com.sunteam.common.tts.SpeechRecognizerUtils) -> b
    void a(com.sunteam.common.tts.SpeechRecognizerUtils,java.lang.String) -> a
    android.widget.Toast c(com.sunteam.common.tts.SpeechRecognizerUtils) -> c
com.sunteam.common.tts.SpeechRecognizerUtils$1 -> com.sunteam.common.tts.SpeechRecognizerUtils$1:
    com.sunteam.common.tts.SpeechRecognizerUtils a -> a
    void onInit(int) -> onInit
com.sunteam.common.tts.SpeechRecognizerUtils$2 -> com.sunteam.common.tts.SpeechRecognizerUtils$2:
    com.sunteam.common.tts.SpeechRecognizerUtils a -> a
    void onBuildFinish(java.lang.String,com.iflytek.cloud.SpeechError) -> onBuildFinish
com.sunteam.common.tts.SpeechRecognizerUtils$3 -> com.sunteam.common.tts.SpeechRecognizerUtils$3:
    com.sunteam.common.tts.SpeechRecognizerUtils a -> a
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
com.sunteam.common.tts.SpeechRecognizerUtils$4 -> com.sunteam.common.tts.SpeechRecognizerUtils$4:
    com.sunteam.common.tts.SpeechRecognizerUtils a -> a
    void onVolumeChanged(int,byte[]) -> onVolumeChanged
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.sunteam.common.tts.SpeechRecognizerUtils$5 -> com.sunteam.common.tts.SpeechRecognizerUtils$5:
    com.sunteam.common.tts.SpeechRecognizerUtils a -> a
    java.lang.String b -> b
    void run() -> run
com.sunteam.common.tts.TtsCompletedListener -> com.sunteam.common.tts.TtsCompletedListener:
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.tts.TtsListener -> com.sunteam.common.tts.TtsListener:
    void onInit(int) -> onInit
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.tts.TtsUtils -> com.sunteam.common.tts.TtsUtils:
    int TTS_QUEUE_FLUSH -> TTS_QUEUE_FLUSH
    int TTS_QUEUE_ADD -> TTS_QUEUE_ADD
    com.sunteam.common.tts.TtsUtils a -> a
    android.content.Context b -> b
    com.sunteam.common.tts.TtsListener c -> c
    com.sunteam.common.tts.TtsCompletedListener d -> d
    com.iflytek.cloud.SpeechSynthesizer e -> e
    java.lang.Boolean f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.util.ArrayList i -> i
    boolean j -> j
    com.iflytek.cloud.SynthesizerListener k -> k
    com.iflytek.cloud.InitListener l -> l
    com.sunteam.common.tts.TtsUtils getInstance(android.content.Context,com.sunteam.common.tts.TtsListener) -> getInstance
    com.sunteam.common.tts.TtsUtils getInstance() -> getInstance
    java.lang.Boolean a() -> a
    void repeat() -> repeat
    void speak(java.lang.String) -> speak
    void speak(java.lang.String,int) -> speak
    void stop() -> stop
    void pause() -> pause
    void resume() -> resume
    void destroy() -> destroy
    java.lang.String getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    boolean isSpeaking() -> isSpeaking
    void restoreSettingParameters() -> restoreSettingParameters
    void setCompletedListener(com.sunteam.common.tts.TtsCompletedListener) -> setCompletedListener
    void setTtsListener(com.sunteam.common.tts.TtsListener) -> setTtsListener
    void debug(java.lang.String) -> debug
    com.sunteam.common.tts.TtsListener a(com.sunteam.common.tts.TtsUtils) -> a
    void a(com.sunteam.common.tts.TtsUtils,boolean) -> a
    java.lang.Boolean b(com.sunteam.common.tts.TtsUtils) -> b
    com.sunteam.common.tts.TtsCompletedListener c(com.sunteam.common.tts.TtsUtils) -> c
    void a(com.sunteam.common.tts.TtsUtils,java.lang.Boolean) -> a
    java.lang.String d(com.sunteam.common.tts.TtsUtils) -> d
    void a(com.sunteam.common.tts.TtsUtils,java.lang.String) -> a
com.sunteam.common.tts.TtsUtils$1 -> com.sunteam.common.tts.TtsUtils$1:
    com.sunteam.common.tts.TtsUtils a -> a
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.sunteam.common.tts.TtsUtils$2 -> com.sunteam.common.tts.TtsUtils$2:
    com.sunteam.common.tts.TtsUtils a -> a
    void onInit(int) -> onInit
com.sunteam.common.tts.XmlParser -> com.sunteam.common.tts.XmlParser:
    java.lang.String parseNluResult(java.lang.String) -> parseNluResult
com.sunteam.common.utils.ArrayUtils -> com.sunteam.common.utils.ArrayUtils:
    byte[] getBytesFromChars(char[]) -> getBytesFromChars
    char[] getCharsFromBytes(byte[]) -> getCharsFromBytes
    java.util.ArrayList strArray2List(java.lang.String[]) -> strArray2List
    java.lang.String[] arrayList2StrArray(java.util.ArrayList) -> arrayList2StrArray
com.sunteam.common.utils.BrightnessUtils -> com.sunteam.common.utils.BrightnessUtils:
    boolean isAutoBrightness(android.app.Activity) -> isAutoBrightness
    void stopAutoBrightness(android.app.Activity) -> stopAutoBrightness
    void startAutoBrightness(android.app.Activity) -> startAutoBrightness
    int getScreenMode(android.content.Context) -> getScreenMode
    void setScreenMode(android.content.Context,int) -> setScreenMode
    int getBrightness(android.content.Context) -> getBrightness
    void setBrightness(android.content.Context,int) -> setBrightness
    void saveBrightness(android.app.Activity,int) -> saveBrightness
    void saveBrightness1(android.app.Activity,int) -> saveBrightness1
    void requireScreenOn(android.app.Activity) -> requireScreenOn
    void releaseScreenOn(android.app.Activity) -> releaseScreenOn
    void setLcdGpio(int) -> setLcdGpio
    boolean isLcdOn() -> isLcdOn
    void setWakeDisp(int) -> setWakeDisp
    void setScreenBrightness(android.content.Context,int) -> setScreenBrightness
com.sunteam.common.utils.CommonConstant -> com.sunteam.common.utils.CommonConstant:
    java.lang.String SP_FILE_NAME -> SP_FILE_NAME
    java.lang.String SP_MAINMENU_ITEM -> SP_MAINMENU_ITEM
    java.lang.String SP_SETTINGS_PACKAGE -> SP_SETTINGS_PACKAGE
    java.lang.String SP_SPEAKER_ITEM -> SP_SPEAKER_ITEM
    java.lang.String SP_SPEAKERENG_ITEM -> SP_SPEAKERENG_ITEM
    java.lang.String SP_VOICESPEED_ITEM -> SP_VOICESPEED_ITEM
    java.lang.String SP_VOICETONE_ITEM -> SP_VOICETONE_ITEM
    java.lang.String SP_VOICESWITCH_ITEM -> SP_VOICESWITCH_ITEM
    java.lang.String SP_VOICEVOLUME_ITEM -> SP_VOICEVOLUME_ITEM
    java.lang.String SP_LANGUAGE_ITEM -> SP_LANGUAGE_ITEM
    java.lang.String SP_CLOSESCREEN_ITEM -> SP_CLOSESCREEN_ITEM
    java.lang.String SP_SHUTDOWN_ITEM -> SP_SHUTDOWN_ITEM
    java.lang.String SP_TIMEDSHUTDOWN_ITEM -> SP_TIMEDSHUTDOWN_ITEM
    java.lang.String SP_SCREENBRIGTNESS_ITEM -> SP_SCREENBRIGTNESS_ITEM
    java.lang.String SP_SLEEP_ITEM -> SP_SLEEP_ITEM
    java.lang.String SP_COLOR_ITEM -> SP_COLOR_ITEM
    java.lang.String SP_FONT_ITEM -> SP_FONT_ITEM
    java.lang.String SP_WIFISWITCH_ITEM -> SP_WIFISWITCH_ITEM
    java.lang.String SP_BTSWITCH_ITEM -> SP_BTSWITCH_ITEM
    int DEFAULT_SPEAKER_INDEX -> DEFAULT_SPEAKER_INDEX
    int DEFAULT_SPEAKERENG_INDEX -> DEFAULT_SPEAKERENG_INDEX
    int DEFAULT_VOICESPEED -> DEFAULT_VOICESPEED
    int DEFAULT_VOICETONE -> DEFAULT_VOICETONE
    int DEFAULT_VOICEVOLUME -> DEFAULT_VOICEVOLUME
    int DEFAULT_VOICESWITCH -> DEFAULT_VOICESWITCH
    int DEFAULT_LANGUAGE_INDEX -> DEFAULT_LANGUAGE_INDEX
    int DEFAULT_CLOSESCREEN_INDEX -> DEFAULT_CLOSESCREEN_INDEX
    int DEFAULT_SHUTDOWN_INDEX -> DEFAULT_SHUTDOWN_INDEX
    int DEFAULT_TIMEDSHUTDOWN_INDEX -> DEFAULT_TIMEDSHUTDOWN_INDEX
    int DEFAULT_SCREENBRIGTNESS_INDEX -> DEFAULT_SCREENBRIGTNESS_INDEX
    int DEFAULT_SLEEP_INDEX -> DEFAULT_SLEEP_INDEX
    int DEFAULT_COLOR_INDEX -> DEFAULT_COLOR_INDEX
    int DEFAULT_FONT_INDEX -> DEFAULT_FONT_INDEX
    int DEFAULT_WIFISWITCH_INDEX -> DEFAULT_WIFISWITCH_INDEX
    int DEFAULT_BTSWITCH_INDEX -> DEFAULT_BTSWITCH_INDEX
    int VOICESWITCH_CLOSE -> VOICESWITCH_CLOSE
    int VOICE_SPEED_MAX -> VOICE_SPEED_MAX
    int VOICE_TONE_MAX -> VOICE_TONE_MAX
    int VOICE_VOLUME_MAX -> VOICE_VOLUME_MAX
    int VOICE_SPEEDSETTING_MAX -> VOICE_SPEEDSETTING_MAX
    int VOICE_TONESETTING_MAX -> VOICE_TONESETTING_MAX
    int VOICE_VOLUMESETTING_MAX -> VOICE_VOLUMESETTING_MAX
    java.lang.String[] ENG_MONTH -> ENG_MONTH
    int LANG_ENG_INDEX -> LANG_ENG_INDEX
    int SPEAKER_CHI_ITEMS -> SPEAKER_CHI_ITEMS
    int SPEAKER_ENG_ITEMS -> SPEAKER_ENG_ITEMS
com.sunteam.common.utils.CommonUtils -> com.sunteam.common.utils.CommonUtils:
    void sendKeyEvent(int) -> sendKeyEvent
    int getSystemPropertyInt(java.lang.String,int) -> getSystemPropertyInt
com.sunteam.common.utils.CommonUtils$1 -> com.sunteam.common.utils.CommonUtils$1:
    int a -> a
    void run() -> run
com.sunteam.common.utils.ConfirmDialog -> com.sunteam.common.utils.ConfirmDialog:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    android.os.Handler g -> g
    int h -> h
    com.sunteam.common.utils.dialog.ConfirmListener i -> i
    int j -> j
    android.widget.TextView[] k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    void onCreate(android.os.Bundle) -> onCreate
    void setConfirmListener(com.sunteam.common.utils.dialog.ConfirmListener) -> setConfirmListener
    void setHandler(android.os.Handler,int) -> setHandler
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void a() -> a
    void b() -> b
    void a(com.sunteam.common.utils.ConfirmDialog,android.view.View) -> a
    android.os.Handler a(com.sunteam.common.utils.ConfirmDialog) -> a
    int b(com.sunteam.common.utils.ConfirmDialog) -> b
    com.sunteam.common.utils.dialog.ConfirmListener c(com.sunteam.common.utils.ConfirmDialog) -> c
    int d(com.sunteam.common.utils.ConfirmDialog) -> d
com.sunteam.common.utils.ConfirmDialog$1 -> com.sunteam.common.utils.ConfirmDialog$1:
    com.sunteam.common.utils.ConfirmDialog a -> a
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.utils.ConfirmDialog$ClickListener -> com.sunteam.common.utils.ConfirmDialog$ClickListener:
    com.sunteam.common.utils.ConfirmDialog a -> a
    void onClick(android.view.View) -> onClick
com.sunteam.common.utils.ConfirmDialogEditor -> com.sunteam.common.utils.ConfirmDialogEditor:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.widget.EditText f -> f
    int g -> g
    int h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    android.os.Handler k -> k
    int l -> l
    com.sunteam.common.utils.dialog.ConfirmEditorListener m -> m
    int n -> n
    android.widget.TextView[] o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    boolean u -> u
    android.view.View$OnKeyListener v -> v
    void onCreate(android.os.Bundle) -> onCreate
    void setEditTextHint(java.lang.String) -> setEditTextHint
    void setEditTextDefault(java.lang.String) -> setEditTextDefault
    void setConfirmListener(com.sunteam.common.utils.dialog.ConfirmEditorListener) -> setConfirmListener
    void setHandler(android.os.Handler,int) -> setHandler
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void a() -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void b() -> b
    boolean a(int,android.view.KeyEvent) -> a
    void a(com.sunteam.common.utils.ConfirmDialogEditor) -> a
    boolean a(com.sunteam.common.utils.ConfirmDialogEditor,int,android.view.KeyEvent) -> a
    int b(com.sunteam.common.utils.ConfirmDialogEditor) -> b
    android.widget.EditText c(com.sunteam.common.utils.ConfirmDialogEditor) -> c
    java.lang.String d(com.sunteam.common.utils.ConfirmDialogEditor) -> d
    boolean e(com.sunteam.common.utils.ConfirmDialogEditor) -> e
    void a(com.sunteam.common.utils.ConfirmDialogEditor,boolean) -> a
    void a(com.sunteam.common.utils.ConfirmDialogEditor,android.view.View) -> a
    android.os.Handler f(com.sunteam.common.utils.ConfirmDialogEditor) -> f
    int g(com.sunteam.common.utils.ConfirmDialogEditor) -> g
    com.sunteam.common.utils.dialog.ConfirmEditorListener h(com.sunteam.common.utils.ConfirmDialogEditor) -> h
    int i(com.sunteam.common.utils.ConfirmDialogEditor) -> i
com.sunteam.common.utils.ConfirmDialogEditor$1 -> com.sunteam.common.utils.ConfirmDialogEditor$1:
    com.sunteam.common.utils.ConfirmDialogEditor a -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.sunteam.common.utils.ConfirmDialogEditor$2 -> com.sunteam.common.utils.ConfirmDialogEditor$2:
    com.sunteam.common.utils.ConfirmDialogEditor a -> a
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.utils.ConfirmDialogEditor$ClickListener -> com.sunteam.common.utils.ConfirmDialogEditor$ClickListener:
    com.sunteam.common.utils.ConfirmDialogEditor a -> a
    void onClick(android.view.View) -> onClick
com.sunteam.common.utils.ConfirmDialogEditor$EdittextFocusListener -> com.sunteam.common.utils.ConfirmDialogEditor$EdittextFocusListener:
    com.sunteam.common.utils.ConfirmDialogEditor a -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.sunteam.common.utils.FileUtils -> com.sunteam.common.utils.FileUtils:
    byte[] readFile(android.content.Context,java.lang.String) -> readFile
    java.lang.String readAssetsFile(android.content.Context,java.lang.String,java.lang.String) -> readAssetsFile
    byte[] readAssetsFile(android.content.Context,java.lang.String) -> readAssetsFile
com.sunteam.common.utils.PromptDialog -> com.sunteam.common.utils.PromptDialog:
    java.lang.String a -> a
    android.content.Context b -> b
    com.sunteam.common.utils.dialog.PromptListener c -> c
    boolean d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void setPromptListener(com.sunteam.common.utils.dialog.PromptListener) -> setPromptListener
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void a() -> a
    void a(com.sunteam.common.utils.PromptDialog) -> a
com.sunteam.common.utils.PromptDialog$1 -> com.sunteam.common.utils.PromptDialog$1:
    com.sunteam.common.utils.PromptDialog a -> a
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.utils.PromptDialogNospeech -> com.sunteam.common.utils.PromptDialogNospeech:
    java.lang.String a -> a
    android.content.Context b -> b
    boolean c -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.sunteam.common.utils.RefreshScreenUtils -> com.sunteam.common.utils.RefreshScreenUtils:
    void setRefreshScreenState(int) -> setRefreshScreenState
    void enableRefreshScreen() -> enableRefreshScreen
    void disableRefreshScreen() -> disableRefreshScreen
com.sunteam.common.utils.ResourceUtils -> com.sunteam.common.utils.ResourceUtils:
    int getIdByName(android.content.Context,java.lang.String,java.lang.String) -> getIdByName
com.sunteam.common.utils.SharedPrefUtils -> com.sunteam.common.utils.SharedPrefUtils:
    int getSharedPrefInt(android.content.Context,java.lang.String,int,java.lang.String,int) -> getSharedPrefInt
    void setSharedPrefInt(android.content.Context,java.lang.String,int,java.lang.String,int) -> setSharedPrefInt
    void saveSettings(android.content.Context,java.lang.String,int) -> saveSettings
com.sunteam.common.utils.SignatureVerification -> com.sunteam.common.utils.SignatureVerification:
com.sunteam.common.utils.SunteamDateUtils -> com.sunteam.common.utils.SunteamDateUtils:
    java.lang.String getDateTime() -> getDateTime
    java.lang.String getHyphenDate() -> getHyphenDate
    java.lang.String getHyphenDate(java.util.Date) -> getHyphenDate
    java.util.Date parsePlainDate(java.lang.String) -> parsePlainDate
    java.util.Date parseHyphenDate(java.lang.String) -> parseHyphenDate
    java.util.Date parseDate(java.lang.String,java.lang.String) -> parseDate
    java.lang.String toPlainDate(java.lang.String) -> toPlainDate
    java.lang.String toHyphenDate(java.lang.String) -> toHyphenDate
    java.sql.Timestamp getTimestamp(java.util.Date) -> getTimestamp
    java.sql.Timestamp getTimestamp() -> getTimestamp
    java.sql.Timestamp parseTimestamp(java.lang.String) -> parseTimestamp
    java.lang.String getCurrentDateStr() -> getCurrentDateStr
    java.lang.String addDate(int) -> addDate
    long getMillis(java.util.Date) -> getMillis
    int getTimeStampSecond() -> getTimeStampSecond
    java.lang.String getNowDate(java.lang.String) -> getNowDate
    java.lang.String getTimeStr() -> getTimeStr
    java.lang.String getFormatedDateTime(java.lang.String,long) -> getFormatedDateTime
    long getApkUpdateTime(android.content.Context) -> getApkUpdateTime
    long getApkUpdateTime2(android.content.Context) -> getApkUpdateTime2
com.sunteam.common.utils.SunteamToast -> com.sunteam.common.utils.SunteamToast:
    android.content.Context a -> a
    boolean b -> b
    void show(java.lang.String) -> show
    void show(int) -> show
com.sunteam.common.utils.ThreeOptionsDialog -> com.sunteam.common.utils.ThreeOptionsDialog:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.os.Handler i -> i
    int j -> j
    com.sunteam.common.utils.dialog.ThreeOptionsListener k -> k
    int l -> l
    android.widget.TextView[] m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    void onCreate(android.os.Bundle) -> onCreate
    void setConfirmListener(com.sunteam.common.utils.dialog.ThreeOptionsListener) -> setConfirmListener
    void setHandler(android.os.Handler,int) -> setHandler
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void a() -> a
    void b() -> b
    void a(com.sunteam.common.utils.ThreeOptionsDialog,android.view.View) -> a
    android.os.Handler a(com.sunteam.common.utils.ThreeOptionsDialog) -> a
    int b(com.sunteam.common.utils.ThreeOptionsDialog) -> b
    com.sunteam.common.utils.dialog.ThreeOptionsListener c(com.sunteam.common.utils.ThreeOptionsDialog) -> c
    int d(com.sunteam.common.utils.ThreeOptionsDialog) -> d
com.sunteam.common.utils.ThreeOptionsDialog$1 -> com.sunteam.common.utils.ThreeOptionsDialog$1:
    com.sunteam.common.utils.ThreeOptionsDialog a -> a
    void onCompleted(java.lang.String) -> onCompleted
com.sunteam.common.utils.ThreeOptionsDialog$ClickListener -> com.sunteam.common.utils.ThreeOptionsDialog$ClickListener:
    com.sunteam.common.utils.ThreeOptionsDialog a -> a
    void onClick(android.view.View) -> onClick
com.sunteam.common.utils.Tools -> com.sunteam.common.utils.Tools:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    int[] d -> d
    int[] e -> e
    int[] f -> f
    int[] g -> g
    java.lang.String[] mSpeakerChiList -> mSpeakerChiList
    java.lang.String[] mSpeakerEngList -> mSpeakerEngList
    java.lang.String[] mSpeakerList -> mSpeakerList
    java.lang.String[] h -> h
    int[] i -> i
    int[] j -> j
    int[] k -> k
    java.util.Locale[] l -> l
    android.content.Context m -> m
    int getSpeakerIndex() -> getSpeakerIndex
    java.lang.String getSpeaker() -> getSpeaker
    java.lang.String getSpeaker(int) -> getSpeaker
    int getVoiceSpeed() -> getVoiceSpeed
    int getVoiceTone() -> getVoiceTone
    int getVoiceVolume() -> getVoiceVolume
    int getVoiceSwitch() -> getVoiceSwitch
    int getLanguageIndex() -> getLanguageIndex
    java.lang.String getLangtype() -> getLangtype
    int getCloseScreenIndex() -> getCloseScreenIndex
    int getShutdownIndex() -> getShutdownIndex
    int getTimedShutdownIndex() -> getTimedShutdownIndex
    int getScreenBrightnessIndex() -> getScreenBrightnessIndex
    int getSleepIndex() -> getSleepIndex
    int getColorIndex() -> getColorIndex
    int getBackgroundColor() -> getBackgroundColor
    int getFontColor() -> getFontColor
    int getHighlightColor() -> getHighlightColor
    int getDlgBackgroundColor() -> getDlgBackgroundColor
    int getDlgFontColor() -> getDlgFontColor
    int getDlgHighlightColor() -> getDlgHighlightColor
    int getFontIndex() -> getFontIndex
    int getFontSize() -> getFontSize
    int getFontSize(int) -> getFontSize
    int getWifiSwitch() -> getWifiSwitch
    int getBluetoothSwitch() -> getBluetoothSwitch
    void a(android.content.Context) -> a
    int convertSpToPixel(int) -> convertSpToPixel
    int getFontPixel() -> getFontPixel
    java.util.Locale getLocalLanguage() -> getLocalLanguage
    java.util.Locale getLocalLanguage(int) -> getLocalLanguage
    void setSysLanguage() -> setSysLanguage
    void updateSysLanguage() -> updateSysLanguage
    void setSpeakerList(int) -> setSpeakerList
com.sunteam.common.utils.dialog.ConfirmEditorListener -> com.sunteam.common.utils.dialog.ConfirmEditorListener:
    void doConfirm(java.lang.String) -> doConfirm
    void doCancel() -> doCancel
com.sunteam.common.utils.dialog.ConfirmListener -> com.sunteam.common.utils.dialog.ConfirmListener:
    void doConfirm() -> doConfirm
    void doCancel() -> doCancel
com.sunteam.common.utils.dialog.PromptListener -> com.sunteam.common.utils.dialog.PromptListener:
    void onComplete() -> onComplete
com.sunteam.common.utils.dialog.ThreeOptionsListener -> com.sunteam.common.utils.dialog.ThreeOptionsListener:
    void doConfirm() -> doConfirm
    void doNuetral() -> doNuetral
    void doCancel() -> doCancel
com.sunteam.dao.Alarminfo -> com.sunteam.a.a:
    int _id -> a
    int year -> b
    int month -> c
    int day -> d
    int hour -> e
    int minute -> f
    java.lang.String filename -> g
    java.lang.String path -> h
    int type -> i
    int onoff -> j
    int getid() -> a
    int getHour() -> b
    int getMinute() -> c
    int getYear() -> d
    int getMonth() -> e
    int getDay() -> f
    java.lang.String getPath() -> g
    java.lang.String getFileName() -> h
    int getOnoff() -> i
    void setOnoff(int) -> a
    int getType() -> j
com.sunteam.dao.DBOpenHelper -> com.sunteam.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.sunteam.dao.GetDbInfo -> com.sunteam.a.c:
    com.sunteam.dao.DBOpenHelper helper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    java.lang.String USER_DBNAME -> c
    void add(com.sunteam.dao.Alarminfo,java.lang.String) -> a
    void update(com.sunteam.dao.Alarminfo,java.lang.String) -> b
    com.sunteam.dao.Alarminfo find(int,java.lang.String) -> a
    java.util.ArrayList getAllData(java.lang.String) -> a
    int getMaxId(java.lang.String) -> b
    int closeDb() -> a
com.sunteam.dict.utils.DBUtil -> com.sunteam.dict.utils.DBUtil:
    java.lang.String TAG -> TAG
    int SUNTEAM_INT_BYTES -> SUNTEAM_INT_BYTES
    java.lang.String a -> a
    java.lang.String b -> b
    android.database.sqlite.SQLiteDatabase db -> db
    com.sunteam.dict.utils.DBUtil$Word c -> c
    void openDB() -> openDB
    void closeDB() -> closeDB
    com.sunteam.dict.utils.DBUtil$Word selectWord(java.lang.String,java.lang.String) -> selectWord
    com.sunteam.dict.utils.DBUtil$Word selectEngWord(java.lang.String,java.lang.String) -> selectEngWord
    java.lang.String readFileExplData(java.lang.String,long,int) -> readFileExplData
    int selectId(java.lang.String,java.lang.String) -> selectId
    java.lang.String a(java.lang.String) -> a
    java.lang.String search(java.lang.String) -> search
com.sunteam.dict.utils.DBUtil$Word -> com.sunteam.dict.utils.DBUtil$Word:
    java.lang.String key -> key
    int start -> start
    int length -> length
com.sunteam.dict.utils.EncryptInputStream -> com.sunteam.dict.utils.EncryptInputStream:
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int a(int) -> a
com.sunteam.player.MyPlayer -> com.sunteam.b.a:
    int mState -> a
    com.sunteam.player.MyPlayer mInstance -> b
    android.media.MediaPlayer mPlayer -> c
    android.os.Handler mHandler -> d
    android.content.Context mcontext -> e
    com.sunteam.player.MyPlayer$OnStateChangedListener mOnStateChangedListener -> f
    com.sunteam.player.MyPlayer getInstance(android.content.Context,android.os.Handler) -> a
    void startPlayback(float,java.lang.String,boolean) -> a
    void startPlay(float,java.lang.String) -> a
    float playProgress() -> a
    void stopPlayback() -> b
    int state() -> c
    void setState(int) -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void goBackPlaylist() -> d
    void setError(int) -> b
    void setOnStateChangedListener(com.sunteam.player.MyPlayer$OnStateChangedListener) -> a
    void signalStateChanged(int) -> c
com.sunteam.player.MyPlayer$OnStateChangedListener -> com.sunteam.b.b:
    void onStateChanged(int) -> a
    void onError(int) -> b
com.sunteam.receiver.Alarm_Receiver -> com.sunteam.receiver.Alarm_Receiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sunteam.receiver.Alarm_receiver_Activity -> com.sunteam.receiver.Alarm_receiver_Activity:
    com.sunteam.player.MyPlayer myPlayer -> c
    android.widget.TextView mTvTitle -> d
    android.view.View mLine -> e
    android.widget.TextView mTv_Date1 -> f
    android.widget.TextView mTv_Date2 -> g
    android.widget.TextView mTv_Date3 -> h
    android.widget.TextView mTv_Time1 -> i
    android.widget.TextView mTv_Time2 -> j
    android.widget.TextView mTv_Time3 -> k
    android.widget.TextView mFilename -> l
    boolean isClose -> m
    java.lang.String gFilename -> n
    android.os.Handler mHandler -> o
    java.lang.Runnable finishActivity -> a
    java.lang.Runnable finishActivityDelayed -> b
    void onCreate(android.os.Bundle) -> onCreate
    void closeActivity() -> a
    int getAlarmType() -> b
    com.sunteam.dao.Alarminfo getAlarmData() -> c
    void onStateChanged(int) -> a
    void onError(int) -> b
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.sunteam.player.MyPlayer access$0(com.sunteam.receiver.Alarm_receiver_Activity) -> a
    java.lang.String access$1(com.sunteam.receiver.Alarm_receiver_Activity) -> b
    android.os.Handler access$2(com.sunteam.receiver.Alarm_receiver_Activity) -> c
    void access$3(com.sunteam.receiver.Alarm_receiver_Activity) -> d
com.sunteam.receiver.Alarm_receiver_Activity$1 -> com.sunteam.receiver.a:
    com.sunteam.receiver.Alarm_receiver_Activity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sunteam.receiver.Alarm_receiver_Activity$2 -> com.sunteam.receiver.b:
    com.sunteam.receiver.Alarm_receiver_Activity this$0 -> a
    void run() -> run
com.sunteam.receiver.Alarm_receiver_Activity$3 -> com.sunteam.receiver.c:
    com.sunteam.receiver.Alarm_receiver_Activity this$0 -> a
    void run() -> run
com.sunteam.receiver.Alarmpublic -> com.sunteam.receiver.d:
    java.lang.String DB_ALARM -> a
    java.lang.String ALARM_FILE_PATH -> b
    void debug(java.lang.String) -> a
    void UpateAlarm(android.content.Context) -> a
    int GetNearAlarm(android.content.Context) -> b
    int GetNearAnn(android.content.Context) -> c
    int GetNearRemind(android.content.Context) -> d
com.sunteam.sunteamutilslib.R -> com.sunteam.sunteamutilslib.R:
com.sunteam.sunteamutilslib.R$array -> com.sunteam.sunteamutilslib.R$array:
    int commoncmd_list -> commoncmd_list
    int langtype_list -> langtype_list
com.sunteam.sunteamutilslib.R$color -> com.sunteam.sunteamutilslib.R$color:
    int bg_color -> bg_color
    int bg_popwindow -> bg_popwindow
    int bg_white -> bg_white
    int black -> black
    int blue -> blue
    int bottom_line -> bottom_line
    int contents_text -> contents_text
    int encode_view -> encode_view
    int green -> green
    int green_center -> green_center
    int grgray -> grgray
    int header -> header
    int help_button_view -> help_button_view
    int help_view -> help_view
    int lightgreen -> lightgreen
    int list_select -> list_select
    int ltred -> ltred
    int magenta -> magenta
    int more_bg -> more_bg
    int notify_background -> notify_background
    int possible_result_points -> possible_result_points
    int red -> red
    int result_image_border -> result_image_border
    int result_minor_text -> result_minor_text
    int result_points -> result_points
    int result_text -> result_text
    int result_view -> result_view
    int root_common -> root_common
    int sbc_header_text -> sbc_header_text
    int sbc_header_view -> sbc_header_view
    int sbc_layout_view -> sbc_layout_view
    int sbc_list_item -> sbc_list_item
    int sbc_page_number_text -> sbc_page_number_text
    int sbc_snippet_text -> sbc_snippet_text
    int share_text -> share_text
    int share_view -> share_view
    int space_line -> space_line
    int status_text -> status_text
    int status_view -> status_view
    int text_bar_grey -> text_bar_grey
    int text_black -> text_black
    int text_blue -> text_blue
    int text_class -> text_class
    int text_content -> text_content
    int text_disabled -> text_disabled
    int text_grey -> text_grey
    int text_grey2 -> text_grey2
    int text_hint -> text_hint
    int text_more_grey -> text_more_grey
    int text_normal -> text_normal
    int text_praise -> text_praise
    int text_red -> text_red
    int text_select -> text_select
    int text_white -> text_white
    int title_bg -> title_bg
    int title_green -> title_green
    int translucent -> translucent
    int transparent -> transparent
    int transparent_pic_selected -> transparent_pic_selected
    int transparent_sendtopc -> transparent_sendtopc
    int viewfinder_frame -> viewfinder_frame
    int viewfinder_laser -> viewfinder_laser
    int viewfinder_mask -> viewfinder_mask
    int white -> white
    int yellow -> yellow
com.sunteam.sunteamutilslib.R$dimen -> com.sunteam.sunteamutilslib.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int dialog_bottom_padding -> dialog_bottom_padding
    int dialog_left_padding -> dialog_left_padding
    int dialog_right_padding -> dialog_right_padding
    int dialog_text_size -> dialog_text_size
    int dialog_top_padding -> dialog_top_padding
    int item_text_size -> item_text_size
    int text_big_size -> text_big_size
    int text_big_size_px -> text_big_size_px
    int text_middle_size -> text_middle_size
    int text_middle_size_px -> text_middle_size_px
    int text_small_size -> text_small_size
    int text_small_size_px -> text_small_size_px
    int text_super_size_px -> text_super_size_px
    int textsize -> textsize
    int title_text_size -> title_text_size
com.sunteam.sunteamutilslib.R$drawable -> com.sunteam.sunteamutilslib.R$drawable:
    int black -> black
    int blue -> blue
    int green -> green
    int ic_launcher -> ic_launcher
    int ltred -> ltred
    int red -> red
    int white -> white
    int yellow -> yellow
com.sunteam.sunteamutilslib.R$id -> com.sunteam.sunteamutilslib.R$id:
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_confirm -> common_dialog_confirm_confirm
    int common_dialog_confirm_editor_cancel -> common_dialog_confirm_editor_cancel
    int common_dialog_confirm_editor_confirm -> common_dialog_confirm_editor_confirm
    int common_dialog_confirm_editor_input -> common_dialog_confirm_editor_input
    int common_dialog_confirm_editor_space_line -> common_dialog_confirm_editor_space_line
    int common_dialog_confirm_editor_title -> common_dialog_confirm_editor_title
    int common_dialog_confirm_space_line -> common_dialog_confirm_space_line
    int common_dialog_confirm_title -> common_dialog_confirm_title
    int common_dialog_prompt_hint -> common_dialog_prompt_hint
    int common_dialog_threeoptions_cancel -> common_dialog_threeoptions_cancel
    int common_dialog_threeoptions_confirm -> common_dialog_threeoptions_confirm
    int common_dialog_threeoptions_neutral -> common_dialog_threeoptions_neutral
    int common_dialog_threeoptions_space_line -> common_dialog_threeoptions_space_line
    int common_dialog_threeoptions_title -> common_dialog_threeoptions_title
    int common_menu_fl_container -> common_menu_fl_container
    int common_menu_item -> common_menu_item
    int common_menu_view_line -> common_menu_view_line
    int common_menu_view_menu_list -> common_menu_view_menu_list
    int common_menu_view_title -> common_menu_view_title
    int common_toast_layout_tv -> common_toast_layout_tv
com.sunteam.sunteamutilslib.R$layout -> com.sunteam.sunteamutilslib.R$layout:
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_confirm_editor -> common_dialog_confirm_editor
    int common_dialog_prompt -> common_dialog_prompt
    int common_dialog_threeoptions -> common_dialog_threeoptions
    int common_menu_activity -> common_menu_activity
    int common_menu_item -> common_menu_item
    int common_menu_view -> common_menu_view
    int common_toast_layout -> common_toast_layout
com.sunteam.sunteamutilslib.R$string -> com.sunteam.sunteamutilslib.R$string:
    int common_delete -> common_delete
    int common_dialog_confirm_cancel -> common_dialog_confirm_cancel
    int common_dialog_confirm_ok -> common_dialog_confirm_ok
    int common_functionmenu -> common_functionmenu
    int speech_app_id -> speech_app_id
com.sunteam.sunteamutilslib.R$style -> com.sunteam.sunteamutilslib.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int common_dialog_confirm -> common_dialog_confirm
    int common_dialog_prompt -> common_dialog_prompt
